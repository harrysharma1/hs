(() => {
  // node_modules/d3-selection/src/namespaces.js
  var xhtml = "http://www.w3.org/1999/xhtml";
  var namespaces_default = {
    svg: "http://www.w3.org/2000/svg",
    xhtml,
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/"
  };

  // node_modules/d3-selection/src/namespace.js
  function namespace_default(name) {
    var prefix = name += "", i = prefix.indexOf(":");
    if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
    return namespaces_default.hasOwnProperty(prefix) ? { space: namespaces_default[prefix], local: name } : name;
  }

  // node_modules/d3-selection/src/creator.js
  function creatorInherit(name) {
    return function() {
      var document2 = this.ownerDocument, uri = this.namespaceURI;
      return uri === xhtml && document2.documentElement.namespaceURI === xhtml ? document2.createElement(name) : document2.createElementNS(uri, name);
    };
  }
  function creatorFixed(fullname) {
    return function() {
      return this.ownerDocument.createElementNS(fullname.space, fullname.local);
    };
  }
  function creator_default(name) {
    var fullname = namespace_default(name);
    return (fullname.local ? creatorFixed : creatorInherit)(fullname);
  }

  // node_modules/d3-selection/src/selector.js
  function none() {
  }
  function selector_default(selector) {
    return selector == null ? none : function() {
      return this.querySelector(selector);
    };
  }

  // node_modules/d3-selection/src/selection/select.js
  function select_default(select) {
    if (typeof select !== "function") select = selector_default(select);
    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node5, subnode, i = 0; i < n; ++i) {
        if ((node5 = group[i]) && (subnode = select.call(node5, node5.__data__, i, group))) {
          if ("__data__" in node5) subnode.__data__ = node5.__data__;
          subgroup[i] = subnode;
        }
      }
    }
    return new Selection(subgroups, this._parents);
  }

  // node_modules/d3-selection/src/array.js
  function array(x) {
    return x == null ? [] : Array.isArray(x) ? x : Array.from(x);
  }

  // node_modules/d3-selection/src/selectorAll.js
  function empty() {
    return [];
  }
  function selectorAll_default(selector) {
    return selector == null ? empty : function() {
      return this.querySelectorAll(selector);
    };
  }

  // node_modules/d3-selection/src/selection/selectAll.js
  function arrayAll(select) {
    return function() {
      return array(select.apply(this, arguments));
    };
  }
  function selectAll_default(select) {
    if (typeof select === "function") select = arrayAll(select);
    else select = selectorAll_default(select);
    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, node5, i = 0; i < n; ++i) {
        if (node5 = group[i]) {
          subgroups.push(select.call(node5, node5.__data__, i, group));
          parents.push(node5);
        }
      }
    }
    return new Selection(subgroups, parents);
  }

  // node_modules/d3-selection/src/matcher.js
  function matcher_default(selector) {
    return function() {
      return this.matches(selector);
    };
  }
  function childMatcher(selector) {
    return function(node5) {
      return node5.matches(selector);
    };
  }

  // node_modules/d3-selection/src/selection/selectChild.js
  var find = Array.prototype.find;
  function childFind(match5) {
    return function() {
      return find.call(this.children, match5);
    };
  }
  function childFirst() {
    return this.firstElementChild;
  }
  function selectChild_default(match5) {
    return this.select(match5 == null ? childFirst : childFind(typeof match5 === "function" ? match5 : childMatcher(match5)));
  }

  // node_modules/d3-selection/src/selection/selectChildren.js
  var filter = Array.prototype.filter;
  function children() {
    return Array.from(this.children);
  }
  function childrenFilter(match5) {
    return function() {
      return filter.call(this.children, match5);
    };
  }
  function selectChildren_default(match5) {
    return this.selectAll(match5 == null ? children : childrenFilter(typeof match5 === "function" ? match5 : childMatcher(match5)));
  }

  // node_modules/d3-selection/src/selection/filter.js
  function filter_default(match5) {
    if (typeof match5 !== "function") match5 = matcher_default(match5);
    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node5, i = 0; i < n; ++i) {
        if ((node5 = group[i]) && match5.call(node5, node5.__data__, i, group)) {
          subgroup.push(node5);
        }
      }
    }
    return new Selection(subgroups, this._parents);
  }

  // node_modules/d3-selection/src/selection/sparse.js
  function sparse_default(update) {
    return new Array(update.length);
  }

  // node_modules/d3-selection/src/selection/enter.js
  function enter_default() {
    return new Selection(this._enter || this._groups.map(sparse_default), this._parents);
  }
  function EnterNode(parent, datum2) {
    this.ownerDocument = parent.ownerDocument;
    this.namespaceURI = parent.namespaceURI;
    this._next = null;
    this._parent = parent;
    this.__data__ = datum2;
  }
  EnterNode.prototype = {
    constructor: EnterNode,
    appendChild: function(child) {
      return this._parent.insertBefore(child, this._next);
    },
    insertBefore: function(child, next5) {
      return this._parent.insertBefore(child, next5);
    },
    querySelector: function(selector) {
      return this._parent.querySelector(selector);
    },
    querySelectorAll: function(selector) {
      return this._parent.querySelectorAll(selector);
    }
  };

  // node_modules/d3-selection/src/constant.js
  function constant_default(x) {
    return function() {
      return x;
    };
  }

  // node_modules/d3-selection/src/selection/data.js
  function bindIndex(parent, group, enter, update, exit, data6) {
    var i = 0, node5, groupLength = group.length, dataLength = data6.length;
    for (; i < dataLength; ++i) {
      if (node5 = group[i]) {
        node5.__data__ = data6[i];
        update[i] = node5;
      } else {
        enter[i] = new EnterNode(parent, data6[i]);
      }
    }
    for (; i < groupLength; ++i) {
      if (node5 = group[i]) {
        exit[i] = node5;
      }
    }
  }
  function bindKey(parent, group, enter, update, exit, data6, key) {
    var i, node5, nodeByKeyValue = /* @__PURE__ */ new Map(), groupLength = group.length, dataLength = data6.length, keyValues = new Array(groupLength), keyValue;
    for (i = 0; i < groupLength; ++i) {
      if (node5 = group[i]) {
        keyValues[i] = keyValue = key.call(node5, node5.__data__, i, group) + "";
        if (nodeByKeyValue.has(keyValue)) {
          exit[i] = node5;
        } else {
          nodeByKeyValue.set(keyValue, node5);
        }
      }
    }
    for (i = 0; i < dataLength; ++i) {
      keyValue = key.call(parent, data6[i], i, data6) + "";
      if (node5 = nodeByKeyValue.get(keyValue)) {
        update[i] = node5;
        node5.__data__ = data6[i];
        nodeByKeyValue.delete(keyValue);
      } else {
        enter[i] = new EnterNode(parent, data6[i]);
      }
    }
    for (i = 0; i < groupLength; ++i) {
      if ((node5 = group[i]) && nodeByKeyValue.get(keyValues[i]) === node5) {
        exit[i] = node5;
      }
    }
  }
  function datum(node5) {
    return node5.__data__;
  }
  function data_default(value, key) {
    if (!arguments.length) return Array.from(this, datum);
    var bind5 = key ? bindKey : bindIndex, parents = this._parents, groups = this._groups;
    if (typeof value !== "function") value = constant_default(value);
    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
      var parent = parents[j], group = groups[j], groupLength = group.length, data6 = arraylike(value.call(parent, parent && parent.__data__, j, parents)), dataLength = data6.length, enterGroup = enter[j] = new Array(dataLength), updateGroup = update[j] = new Array(dataLength), exitGroup = exit[j] = new Array(groupLength);
      bind5(parent, group, enterGroup, updateGroup, exitGroup, data6, key);
      for (var i0 = 0, i1 = 0, previous, next5; i0 < dataLength; ++i0) {
        if (previous = enterGroup[i0]) {
          if (i0 >= i1) i1 = i0 + 1;
          while (!(next5 = updateGroup[i1]) && ++i1 < dataLength) ;
          previous._next = next5 || null;
        }
      }
    }
    update = new Selection(update, parents);
    update._enter = enter;
    update._exit = exit;
    return update;
  }
  function arraylike(data6) {
    return typeof data6 === "object" && "length" in data6 ? data6 : Array.from(data6);
  }

  // node_modules/d3-selection/src/selection/exit.js
  function exit_default() {
    return new Selection(this._exit || this._groups.map(sparse_default), this._parents);
  }

  // node_modules/d3-selection/src/selection/join.js
  function join_default(onenter, onupdate, onexit) {
    var enter = this.enter(), update = this, exit = this.exit();
    if (typeof onenter === "function") {
      enter = onenter(enter);
      if (enter) enter = enter.selection();
    } else {
      enter = enter.append(onenter + "");
    }
    if (onupdate != null) {
      update = onupdate(update);
      if (update) update = update.selection();
    }
    if (onexit == null) exit.remove();
    else onexit(exit);
    return enter && update ? enter.merge(update).order() : update;
  }

  // node_modules/d3-selection/src/selection/merge.js
  function merge_default(context) {
    var selection2 = context.selection ? context.selection() : context;
    for (var groups0 = this._groups, groups1 = selection2._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge3 = merges[j] = new Array(n), node5, i = 0; i < n; ++i) {
        if (node5 = group0[i] || group1[i]) {
          merge3[i] = node5;
        }
      }
    }
    for (; j < m0; ++j) {
      merges[j] = groups0[j];
    }
    return new Selection(merges, this._parents);
  }

  // node_modules/d3-selection/src/selection/order.js
  function order_default() {
    for (var groups = this._groups, j = -1, m = groups.length; ++j < m; ) {
      for (var group = groups[j], i = group.length - 1, next5 = group[i], node5; --i >= 0; ) {
        if (node5 = group[i]) {
          if (next5 && node5.compareDocumentPosition(next5) ^ 4) next5.parentNode.insertBefore(node5, next5);
          next5 = node5;
        }
      }
    }
    return this;
  }

  // node_modules/d3-selection/src/selection/sort.js
  function sort_default(compare) {
    if (!compare) compare = ascending;
    function compareNode(a2, b) {
      return a2 && b ? compare(a2.__data__, b.__data__) : !a2 - !b;
    }
    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node5, i = 0; i < n; ++i) {
        if (node5 = group[i]) {
          sortgroup[i] = node5;
        }
      }
      sortgroup.sort(compareNode);
    }
    return new Selection(sortgroups, this._parents).order();
  }
  function ascending(a2, b) {
    return a2 < b ? -1 : a2 > b ? 1 : a2 >= b ? 0 : NaN;
  }

  // node_modules/d3-selection/src/selection/call.js
  function call_default() {
    var callback = arguments[0];
    arguments[0] = this;
    callback.apply(null, arguments);
    return this;
  }

  // node_modules/d3-selection/src/selection/nodes.js
  function nodes_default() {
    return Array.from(this);
  }

  // node_modules/d3-selection/src/selection/node.js
  function node_default() {
    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
        var node5 = group[i];
        if (node5) return node5;
      }
    }
    return null;
  }

  // node_modules/d3-selection/src/selection/size.js
  function size_default() {
    let size = 0;
    for (const node5 of this) ++size;
    return size;
  }

  // node_modules/d3-selection/src/selection/empty.js
  function empty_default() {
    return !this.node();
  }

  // node_modules/d3-selection/src/selection/each.js
  function each_default(callback) {
    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
      for (var group = groups[j], i = 0, n = group.length, node5; i < n; ++i) {
        if (node5 = group[i]) callback.call(node5, node5.__data__, i, group);
      }
    }
    return this;
  }

  // node_modules/d3-selection/src/selection/attr.js
  function attrRemove(name) {
    return function() {
      this.removeAttribute(name);
    };
  }
  function attrRemoveNS(fullname) {
    return function() {
      this.removeAttributeNS(fullname.space, fullname.local);
    };
  }
  function attrConstant(name, value) {
    return function() {
      this.setAttribute(name, value);
    };
  }
  function attrConstantNS(fullname, value) {
    return function() {
      this.setAttributeNS(fullname.space, fullname.local, value);
    };
  }
  function attrFunction(name, value) {
    return function() {
      var v = value.apply(this, arguments);
      if (v == null) this.removeAttribute(name);
      else this.setAttribute(name, v);
    };
  }
  function attrFunctionNS(fullname, value) {
    return function() {
      var v = value.apply(this, arguments);
      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
      else this.setAttributeNS(fullname.space, fullname.local, v);
    };
  }
  function attr_default(name, value) {
    var fullname = namespace_default(name);
    if (arguments.length < 2) {
      var node5 = this.node();
      return fullname.local ? node5.getAttributeNS(fullname.space, fullname.local) : node5.getAttribute(fullname);
    }
    return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
  }

  // node_modules/d3-selection/src/window.js
  function window_default(node5) {
    return node5.ownerDocument && node5.ownerDocument.defaultView || node5.document && node5 || node5.defaultView;
  }

  // node_modules/d3-selection/src/selection/style.js
  function styleRemove(name) {
    return function() {
      this.style.removeProperty(name);
    };
  }
  function styleConstant(name, value, priority) {
    return function() {
      this.style.setProperty(name, value, priority);
    };
  }
  function styleFunction(name, value, priority) {
    return function() {
      var v = value.apply(this, arguments);
      if (v == null) this.style.removeProperty(name);
      else this.style.setProperty(name, v, priority);
    };
  }
  function style_default(name, value, priority) {
    return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
  }
  function styleValue(node5, name) {
    return node5.style.getPropertyValue(name) || window_default(node5).getComputedStyle(node5, null).getPropertyValue(name);
  }

  // node_modules/d3-selection/src/selection/property.js
  function propertyRemove(name) {
    return function() {
      delete this[name];
    };
  }
  function propertyConstant(name, value) {
    return function() {
      this[name] = value;
    };
  }
  function propertyFunction(name, value) {
    return function() {
      var v = value.apply(this, arguments);
      if (v == null) delete this[name];
      else this[name] = v;
    };
  }
  function property_default(name, value) {
    return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
  }

  // node_modules/d3-selection/src/selection/classed.js
  function classArray(string) {
    return string.trim().split(/^|\s+/);
  }
  function classList(node5) {
    return node5.classList || new ClassList(node5);
  }
  function ClassList(node5) {
    this._node = node5;
    this._names = classArray(node5.getAttribute("class") || "");
  }
  ClassList.prototype = {
    add: function(name) {
      var i = this._names.indexOf(name);
      if (i < 0) {
        this._names.push(name);
        this._node.setAttribute("class", this._names.join(" "));
      }
    },
    remove: function(name) {
      var i = this._names.indexOf(name);
      if (i >= 0) {
        this._names.splice(i, 1);
        this._node.setAttribute("class", this._names.join(" "));
      }
    },
    contains: function(name) {
      return this._names.indexOf(name) >= 0;
    }
  };
  function classedAdd(node5, names) {
    var list = classList(node5), i = -1, n = names.length;
    while (++i < n) list.add(names[i]);
  }
  function classedRemove(node5, names) {
    var list = classList(node5), i = -1, n = names.length;
    while (++i < n) list.remove(names[i]);
  }
  function classedTrue(names) {
    return function() {
      classedAdd(this, names);
    };
  }
  function classedFalse(names) {
    return function() {
      classedRemove(this, names);
    };
  }
  function classedFunction(names, value) {
    return function() {
      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
    };
  }
  function classed_default(name, value) {
    var names = classArray(name + "");
    if (arguments.length < 2) {
      var list = classList(this.node()), i = -1, n = names.length;
      while (++i < n) if (!list.contains(names[i])) return false;
      return true;
    }
    return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
  }

  // node_modules/d3-selection/src/selection/text.js
  function textRemove() {
    this.textContent = "";
  }
  function textConstant(value) {
    return function() {
      this.textContent = value;
    };
  }
  function textFunction(value) {
    return function() {
      var v = value.apply(this, arguments);
      this.textContent = v == null ? "" : v;
    };
  }
  function text_default(value) {
    return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
  }

  // node_modules/d3-selection/src/selection/html.js
  function htmlRemove() {
    this.innerHTML = "";
  }
  function htmlConstant(value) {
    return function() {
      this.innerHTML = value;
    };
  }
  function htmlFunction(value) {
    return function() {
      var v = value.apply(this, arguments);
      this.innerHTML = v == null ? "" : v;
    };
  }
  function html_default(value) {
    return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
  }

  // node_modules/d3-selection/src/selection/raise.js
  function raise() {
    if (this.nextSibling) this.parentNode.appendChild(this);
  }
  function raise_default() {
    return this.each(raise);
  }

  // node_modules/d3-selection/src/selection/lower.js
  function lower() {
    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
  }
  function lower_default() {
    return this.each(lower);
  }

  // node_modules/d3-selection/src/selection/append.js
  function append_default(name) {
    var create10 = typeof name === "function" ? name : creator_default(name);
    return this.select(function() {
      return this.appendChild(create10.apply(this, arguments));
    });
  }

  // node_modules/d3-selection/src/selection/insert.js
  function constantNull() {
    return null;
  }
  function insert_default(name, before) {
    var create10 = typeof name === "function" ? name : creator_default(name), select = before == null ? constantNull : typeof before === "function" ? before : selector_default(before);
    return this.select(function() {
      return this.insertBefore(create10.apply(this, arguments), select.apply(this, arguments) || null);
    });
  }

  // node_modules/d3-selection/src/selection/remove.js
  function remove() {
    var parent = this.parentNode;
    if (parent) parent.removeChild(this);
  }
  function remove_default() {
    return this.each(remove);
  }

  // node_modules/d3-selection/src/selection/clone.js
  function selection_cloneShallow() {
    var clone = this.cloneNode(false), parent = this.parentNode;
    return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
  }
  function selection_cloneDeep() {
    var clone = this.cloneNode(true), parent = this.parentNode;
    return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
  }
  function clone_default(deep) {
    return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
  }

  // node_modules/d3-selection/src/selection/datum.js
  function datum_default(value) {
    return arguments.length ? this.property("__data__", value) : this.node().__data__;
  }

  // node_modules/d3-selection/src/selection/on.js
  function contextListener(listener) {
    return function(event) {
      listener.call(this, event, this.__data__);
    };
  }
  function parseTypenames(typenames) {
    return typenames.trim().split(/^|\s+/).map(function(t) {
      var name = "", i = t.indexOf(".");
      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
      return { type: t, name };
    });
  }
  function onRemove(typename) {
    return function() {
      var on = this.__on;
      if (!on) return;
      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
          this.removeEventListener(o.type, o.listener, o.options);
        } else {
          on[++i] = o;
        }
      }
      if (++i) on.length = i;
      else delete this.__on;
    };
  }
  function onAdd(typename, value, options) {
    return function() {
      var on = this.__on, o, listener = contextListener(value);
      if (on) for (var j = 0, m = on.length; j < m; ++j) {
        if ((o = on[j]).type === typename.type && o.name === typename.name) {
          this.removeEventListener(o.type, o.listener, o.options);
          this.addEventListener(o.type, o.listener = listener, o.options = options);
          o.value = value;
          return;
        }
      }
      this.addEventListener(typename.type, listener, options);
      o = { type: typename.type, name: typename.name, value, listener, options };
      if (!on) this.__on = [o];
      else on.push(o);
    };
  }
  function on_default(typename, value, options) {
    var typenames = parseTypenames(typename + ""), i, n = typenames.length, t;
    if (arguments.length < 2) {
      var on = this.node().__on;
      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
        for (i = 0, o = on[j]; i < n; ++i) {
          if ((t = typenames[i]).type === o.type && t.name === o.name) {
            return o.value;
          }
        }
      }
      return;
    }
    on = value ? onAdd : onRemove;
    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));
    return this;
  }

  // node_modules/d3-selection/src/selection/dispatch.js
  function dispatchEvent(node5, type2, params) {
    var window2 = window_default(node5), event = window2.CustomEvent;
    if (typeof event === "function") {
      event = new event(type2, params);
    } else {
      event = window2.document.createEvent("Event");
      if (params) event.initEvent(type2, params.bubbles, params.cancelable), event.detail = params.detail;
      else event.initEvent(type2, false, false);
    }
    node5.dispatchEvent(event);
  }
  function dispatchConstant(type2, params) {
    return function() {
      return dispatchEvent(this, type2, params);
    };
  }
  function dispatchFunction(type2, params) {
    return function() {
      return dispatchEvent(this, type2, params.apply(this, arguments));
    };
  }
  function dispatch_default(type2, params) {
    return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type2, params));
  }

  // node_modules/d3-selection/src/selection/iterator.js
  function* iterator_default() {
    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
      for (var group = groups[j], i = 0, n = group.length, node5; i < n; ++i) {
        if (node5 = group[i]) yield node5;
      }
    }
  }

  // node_modules/d3-selection/src/selection/index.js
  var root = [null];
  function Selection(groups, parents) {
    this._groups = groups;
    this._parents = parents;
  }
  function selection() {
    return new Selection([[document.documentElement]], root);
  }
  function selection_selection() {
    return this;
  }
  Selection.prototype = selection.prototype = {
    constructor: Selection,
    select: select_default,
    selectAll: selectAll_default,
    selectChild: selectChild_default,
    selectChildren: selectChildren_default,
    filter: filter_default,
    data: data_default,
    enter: enter_default,
    exit: exit_default,
    join: join_default,
    merge: merge_default,
    selection: selection_selection,
    order: order_default,
    sort: sort_default,
    call: call_default,
    nodes: nodes_default,
    node: node_default,
    size: size_default,
    empty: empty_default,
    each: each_default,
    attr: attr_default,
    style: style_default,
    property: property_default,
    classed: classed_default,
    text: text_default,
    html: html_default,
    raise: raise_default,
    lower: lower_default,
    append: append_default,
    insert: insert_default,
    remove: remove_default,
    clone: clone_default,
    datum: datum_default,
    on: on_default,
    dispatch: dispatch_default,
    [Symbol.iterator]: iterator_default
  };
  var selection_default = selection;

  // node_modules/d3-selection/src/select.js
  function select_default2(selector) {
    return typeof selector === "string" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root);
  }

  // node_modules/d3-selection/src/create.js
  function create_default(name) {
    return select_default2(creator_default(name).call(document.documentElement));
  }

  // node_modules/d3-color/src/define.js
  function define_default(constructor, factory, prototype) {
    constructor.prototype = factory.prototype = prototype;
    prototype.constructor = constructor;
  }
  function extend(parent, definition) {
    var prototype = Object.create(parent.prototype);
    for (var key in definition) prototype[key] = definition[key];
    return prototype;
  }

  // node_modules/d3-color/src/color.js
  function Color() {
  }
  var darker = 0.7;
  var brighter = 1 / darker;
  var reI = "\\s*([+-]?\\d+)\\s*";
  var reN = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*";
  var reP = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
  var reHex = /^#([0-9a-f]{3,8})$/;
  var reRgbInteger = new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`);
  var reRgbPercent = new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`);
  var reRgbaInteger = new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`);
  var reRgbaPercent = new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`);
  var reHslPercent = new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`);
  var reHslaPercent = new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);
  var named = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
  };
  define_default(Color, color, {
    copy(channels) {
      return Object.assign(new this.constructor(), this, channels);
    },
    displayable() {
      return this.rgb().displayable();
    },
    hex: color_formatHex,
    // Deprecated! Use color.formatHex.
    formatHex: color_formatHex,
    formatHex8: color_formatHex8,
    formatHsl: color_formatHsl,
    formatRgb: color_formatRgb,
    toString: color_formatRgb
  });
  function color_formatHex() {
    return this.rgb().formatHex();
  }
  function color_formatHex8() {
    return this.rgb().formatHex8();
  }
  function color_formatHsl() {
    return hslConvert(this).formatHsl();
  }
  function color_formatRgb() {
    return this.rgb().formatRgb();
  }
  function color(format2) {
    var m, l;
    format2 = (format2 + "").trim().toLowerCase();
    return (m = reHex.exec(format2)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) : l === 3 ? new Rgb(m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, (m & 15) << 4 | m & 15, 1) : l === 8 ? rgba(m >> 24 & 255, m >> 16 & 255, m >> 8 & 255, (m & 255) / 255) : l === 4 ? rgba(m >> 12 & 15 | m >> 8 & 240, m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, ((m & 15) << 4 | m & 15) / 255) : null) : (m = reRgbInteger.exec(format2)) ? new Rgb(m[1], m[2], m[3], 1) : (m = reRgbPercent.exec(format2)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) : (m = reRgbaInteger.exec(format2)) ? rgba(m[1], m[2], m[3], m[4]) : (m = reRgbaPercent.exec(format2)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) : (m = reHslPercent.exec(format2)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) : (m = reHslaPercent.exec(format2)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) : named.hasOwnProperty(format2) ? rgbn(named[format2]) : format2 === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
  }
  function rgbn(n) {
    return new Rgb(n >> 16 & 255, n >> 8 & 255, n & 255, 1);
  }
  function rgba(r, g, b, a2) {
    if (a2 <= 0) r = g = b = NaN;
    return new Rgb(r, g, b, a2);
  }
  function rgbConvert(o) {
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Rgb();
    o = o.rgb();
    return new Rgb(o.r, o.g, o.b, o.opacity);
  }
  function rgb(r, g, b, opacity3) {
    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity3 == null ? 1 : opacity3);
  }
  function Rgb(r, g, b, opacity3) {
    this.r = +r;
    this.g = +g;
    this.b = +b;
    this.opacity = +opacity3;
  }
  define_default(Rgb, rgb, extend(Color, {
    brighter(k2) {
      k2 = k2 == null ? brighter : Math.pow(brighter, k2);
      return new Rgb(this.r * k2, this.g * k2, this.b * k2, this.opacity);
    },
    darker(k2) {
      k2 = k2 == null ? darker : Math.pow(darker, k2);
      return new Rgb(this.r * k2, this.g * k2, this.b * k2, this.opacity);
    },
    rgb() {
      return this;
    },
    clamp() {
      return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));
    },
    displayable() {
      return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
    },
    hex: rgb_formatHex,
    // Deprecated! Use color.formatHex.
    formatHex: rgb_formatHex,
    formatHex8: rgb_formatHex8,
    formatRgb: rgb_formatRgb,
    toString: rgb_formatRgb
  }));
  function rgb_formatHex() {
    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;
  }
  function rgb_formatHex8() {
    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
  }
  function rgb_formatRgb() {
    const a2 = clampa(this.opacity);
    return `${a2 === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a2 === 1 ? ")" : `, ${a2})`}`;
  }
  function clampa(opacity3) {
    return isNaN(opacity3) ? 1 : Math.max(0, Math.min(1, opacity3));
  }
  function clampi(value) {
    return Math.max(0, Math.min(255, Math.round(value) || 0));
  }
  function hex(value) {
    value = clampi(value);
    return (value < 16 ? "0" : "") + value.toString(16);
  }
  function hsla(h, s2, l, a2) {
    if (a2 <= 0) h = s2 = l = NaN;
    else if (l <= 0 || l >= 1) h = s2 = NaN;
    else if (s2 <= 0) h = NaN;
    return new Hsl(h, s2, l, a2);
  }
  function hslConvert(o) {
    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Hsl();
    if (o instanceof Hsl) return o;
    o = o.rgb();
    var r = o.r / 255, g = o.g / 255, b = o.b / 255, min9 = Math.min(r, g, b), max8 = Math.max(r, g, b), h = NaN, s2 = max8 - min9, l = (max8 + min9) / 2;
    if (s2) {
      if (r === max8) h = (g - b) / s2 + (g < b) * 6;
      else if (g === max8) h = (b - r) / s2 + 2;
      else h = (r - g) / s2 + 4;
      s2 /= l < 0.5 ? max8 + min9 : 2 - max8 - min9;
      h *= 60;
    } else {
      s2 = l > 0 && l < 1 ? 0 : h;
    }
    return new Hsl(h, s2, l, o.opacity);
  }
  function hsl(h, s2, l, opacity3) {
    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s2, l, opacity3 == null ? 1 : opacity3);
  }
  function Hsl(h, s2, l, opacity3) {
    this.h = +h;
    this.s = +s2;
    this.l = +l;
    this.opacity = +opacity3;
  }
  define_default(Hsl, hsl, extend(Color, {
    brighter(k2) {
      k2 = k2 == null ? brighter : Math.pow(brighter, k2);
      return new Hsl(this.h, this.s, this.l * k2, this.opacity);
    },
    darker(k2) {
      k2 = k2 == null ? darker : Math.pow(darker, k2);
      return new Hsl(this.h, this.s, this.l * k2, this.opacity);
    },
    rgb() {
      var h = this.h % 360 + (this.h < 0) * 360, s2 = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s2, m1 = 2 * l - m2;
      return new Rgb(
        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
        hsl2rgb(h, m1, m2),
        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
        this.opacity
      );
    },
    clamp() {
      return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));
    },
    displayable() {
      return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
    },
    formatHsl() {
      const a2 = clampa(this.opacity);
      return `${a2 === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a2 === 1 ? ")" : `, ${a2})`}`;
    }
  }));
  function clamph(value) {
    value = (value || 0) % 360;
    return value < 0 ? value + 360 : value;
  }
  function clampt(value) {
    return Math.max(0, Math.min(1, value || 0));
  }
  function hsl2rgb(h, m1, m2) {
    return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
  }

  // node_modules/d3-color/src/math.js
  var radians = Math.PI / 180;
  var degrees = 180 / Math.PI;

  // node_modules/d3-color/src/lab.js
  var K = 18;
  var Xn = 0.96422;
  var Yn = 1;
  var Zn = 0.82521;
  var t0 = 4 / 29;
  var t1 = 6 / 29;
  var t2 = 3 * t1 * t1;
  var t3 = t1 * t1 * t1;
  function labConvert(o) {
    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
    if (o instanceof Hcl) return hcl2lab(o);
    if (!(o instanceof Rgb)) o = rgbConvert(o);
    var r = rgb2lrgb(o.r), g = rgb2lrgb(o.g), b = rgb2lrgb(o.b), y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;
    if (r === g && g === b) x = z = y;
    else {
      x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
      z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
    }
    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
  }
  function lab(l, a2, b, opacity3) {
    return arguments.length === 1 ? labConvert(l) : new Lab(l, a2, b, opacity3 == null ? 1 : opacity3);
  }
  function Lab(l, a2, b, opacity3) {
    this.l = +l;
    this.a = +a2;
    this.b = +b;
    this.opacity = +opacity3;
  }
  define_default(Lab, lab, extend(Color, {
    brighter(k2) {
      return new Lab(this.l + K * (k2 == null ? 1 : k2), this.a, this.b, this.opacity);
    },
    darker(k2) {
      return new Lab(this.l - K * (k2 == null ? 1 : k2), this.a, this.b, this.opacity);
    },
    rgb() {
      var y = (this.l + 16) / 116, x = isNaN(this.a) ? y : y + this.a / 500, z = isNaN(this.b) ? y : y - this.b / 200;
      x = Xn * lab2xyz(x);
      y = Yn * lab2xyz(y);
      z = Zn * lab2xyz(z);
      return new Rgb(
        lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z),
        lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.033454 * z),
        lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z),
        this.opacity
      );
    }
  }));
  function xyz2lab(t) {
    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
  }
  function lab2xyz(t) {
    return t > t1 ? t * t * t : t2 * (t - t0);
  }
  function lrgb2rgb(x) {
    return 255 * (x <= 31308e-7 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
  }
  function rgb2lrgb(x) {
    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
  }
  function hclConvert(o) {
    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
    if (!(o instanceof Lab)) o = labConvert(o);
    if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
    var h = Math.atan2(o.b, o.a) * degrees;
    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
  }
  function hcl(h, c4, l, opacity3) {
    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c4, l, opacity3 == null ? 1 : opacity3);
  }
  function Hcl(h, c4, l, opacity3) {
    this.h = +h;
    this.c = +c4;
    this.l = +l;
    this.opacity = +opacity3;
  }
  function hcl2lab(o) {
    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
    var h = o.h * radians;
    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
  }
  define_default(Hcl, hcl, extend(Color, {
    brighter(k2) {
      return new Hcl(this.h, this.c, this.l + K * (k2 == null ? 1 : k2), this.opacity);
    },
    darker(k2) {
      return new Hcl(this.h, this.c, this.l - K * (k2 == null ? 1 : k2), this.opacity);
    },
    rgb() {
      return hcl2lab(this).rgb();
    }
  }));

  // node_modules/d3-color/src/cubehelix.js
  var A = -0.14861;
  var B = 1.78277;
  var C = -0.29227;
  var D = -0.90649;
  var E = 1.97294;
  var ED = E * D;
  var EB = E * B;
  var BC_DA = B * C - D * A;
  function cubehelixConvert(o) {
    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
    if (!(o instanceof Rgb)) o = rgbConvert(o);
    var r = o.r / 255, g = o.g / 255, b = o.b / 255, l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB), bl = b - l, k2 = (E * (g - l) - C * bl) / D, s2 = Math.sqrt(k2 * k2 + bl * bl) / (E * l * (1 - l)), h = s2 ? Math.atan2(k2, bl) * degrees - 120 : NaN;
    return new Cubehelix(h < 0 ? h + 360 : h, s2, l, o.opacity);
  }
  function cubehelix(h, s2, l, opacity3) {
    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s2, l, opacity3 == null ? 1 : opacity3);
  }
  function Cubehelix(h, s2, l, opacity3) {
    this.h = +h;
    this.s = +s2;
    this.l = +l;
    this.opacity = +opacity3;
  }
  define_default(Cubehelix, cubehelix, extend(Color, {
    brighter(k2) {
      k2 = k2 == null ? brighter : Math.pow(brighter, k2);
      return new Cubehelix(this.h, this.s, this.l * k2, this.opacity);
    },
    darker(k2) {
      k2 = k2 == null ? darker : Math.pow(darker, k2);
      return new Cubehelix(this.h, this.s, this.l * k2, this.opacity);
    },
    rgb() {
      var h = isNaN(this.h) ? 0 : (this.h + 120) * radians, l = +this.l, a2 = isNaN(this.s) ? 0 : this.s * l * (1 - l), cosh = Math.cos(h), sinh = Math.sin(h);
      return new Rgb(
        255 * (l + a2 * (A * cosh + B * sinh)),
        255 * (l + a2 * (C * cosh + D * sinh)),
        255 * (l + a2 * (E * cosh)),
        this.opacity
      );
    }
  }));

  // node_modules/d3-array/src/ascending.js
  function ascending2(a2, b) {
    return a2 == null || b == null ? NaN : a2 < b ? -1 : a2 > b ? 1 : a2 >= b ? 0 : NaN;
  }

  // node_modules/d3-array/src/descending.js
  function descending(a2, b) {
    return a2 == null || b == null ? NaN : b < a2 ? -1 : b > a2 ? 1 : b >= a2 ? 0 : NaN;
  }

  // node_modules/d3-array/src/bisector.js
  function bisector(f) {
    let compare1, compare2, delta;
    if (f.length !== 2) {
      compare1 = ascending2;
      compare2 = (d, x) => ascending2(f(d), x);
      delta = (d, x) => f(d) - x;
    } else {
      compare1 = f === ascending2 || f === descending ? f : zero;
      compare2 = f;
      delta = f;
    }
    function left2(a2, x, lo = 0, hi = a2.length) {
      if (lo < hi) {
        if (compare1(x, x) !== 0) return hi;
        do {
          const mid = lo + hi >>> 1;
          if (compare2(a2[mid], x) < 0) lo = mid + 1;
          else hi = mid;
        } while (lo < hi);
      }
      return lo;
    }
    function right2(a2, x, lo = 0, hi = a2.length) {
      if (lo < hi) {
        if (compare1(x, x) !== 0) return hi;
        do {
          const mid = lo + hi >>> 1;
          if (compare2(a2[mid], x) <= 0) lo = mid + 1;
          else hi = mid;
        } while (lo < hi);
      }
      return lo;
    }
    function center(a2, x, lo = 0, hi = a2.length) {
      const i = left2(a2, x, lo, hi - 1);
      return i > lo && delta(a2[i - 1], x) > -delta(a2[i], x) ? i - 1 : i;
    }
    return { left: left2, center, right: right2 };
  }
  function zero() {
    return 0;
  }

  // node_modules/d3-array/src/number.js
  function number(x) {
    return x === null ? NaN : +x;
  }
  function* numbers(values5, valueof) {
    if (valueof === void 0) {
      for (let value of values5) {
        if (value != null && (value = +value) >= value) {
          yield value;
        }
      }
    } else {
      let index = -1;
      for (let value of values5) {
        if ((value = valueof(value, ++index, values5)) != null && (value = +value) >= value) {
          yield value;
        }
      }
    }
  }

  // node_modules/d3-array/src/bisect.js
  var ascendingBisect = bisector(ascending2);
  var bisectRight = ascendingBisect.right;
  var bisectLeft = ascendingBisect.left;
  var bisectCenter = bisector(number).center;
  var bisect_default = bisectRight;

  // node_modules/d3-array/src/extent.js
  function extent(values5, valueof) {
    let min9;
    let max8;
    if (valueof === void 0) {
      for (const value of values5) {
        if (value != null) {
          if (min9 === void 0) {
            if (value >= value) min9 = max8 = value;
          } else {
            if (min9 > value) min9 = value;
            if (max8 < value) max8 = value;
          }
        }
      }
    } else {
      let index = -1;
      for (let value of values5) {
        if ((value = valueof(value, ++index, values5)) != null) {
          if (min9 === void 0) {
            if (value >= value) min9 = max8 = value;
          } else {
            if (min9 > value) min9 = value;
            if (max8 < value) max8 = value;
          }
        }
      }
    }
    return [min9, max8];
  }

  // node_modules/internmap/src/index.js
  var InternMap = class extends Map {
    constructor(entries3, key = keyof) {
      super();
      Object.defineProperties(this, { _intern: { value: /* @__PURE__ */ new Map() }, _key: { value: key } });
      if (entries3 != null) for (const [key2, value] of entries3) this.set(key2, value);
    }
    get(key) {
      return super.get(intern_get(this, key));
    }
    has(key) {
      return super.has(intern_get(this, key));
    }
    set(key, value) {
      return super.set(intern_set(this, key), value);
    }
    delete(key) {
      return super.delete(intern_delete(this, key));
    }
  };
  var InternSet = class extends Set {
    constructor(values5, key = keyof) {
      super();
      Object.defineProperties(this, { _intern: { value: /* @__PURE__ */ new Map() }, _key: { value: key } });
      if (values5 != null) for (const value of values5) this.add(value);
    }
    has(value) {
      return super.has(intern_get(this, value));
    }
    add(value) {
      return super.add(intern_set(this, value));
    }
    delete(value) {
      return super.delete(intern_delete(this, value));
    }
  };
  function intern_get({ _intern, _key }, value) {
    const key = _key(value);
    return _intern.has(key) ? _intern.get(key) : value;
  }
  function intern_set({ _intern, _key }, value) {
    const key = _key(value);
    if (_intern.has(key)) return _intern.get(key);
    _intern.set(key, value);
    return value;
  }
  function intern_delete({ _intern, _key }, value) {
    const key = _key(value);
    if (_intern.has(key)) {
      value = _intern.get(key);
      _intern.delete(key);
    }
    return value;
  }
  function keyof(value) {
    return value !== null && typeof value === "object" ? value.valueOf() : value;
  }

  // node_modules/d3-array/src/permute.js
  function permute(source, keys12) {
    return Array.from(keys12, (key) => source[key]);
  }

  // node_modules/d3-array/src/sort.js
  function sort(values5, ...F) {
    if (typeof values5[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
    values5 = Array.from(values5);
    let [f] = F;
    if (f && f.length !== 2 || F.length > 1) {
      const index = Uint32Array.from(values5, (d, i) => i);
      if (F.length > 1) {
        F = F.map((f2) => values5.map(f2));
        index.sort((i, j) => {
          for (const f2 of F) {
            const c4 = ascendingDefined(f2[i], f2[j]);
            if (c4) return c4;
          }
        });
      } else {
        f = values5.map(f);
        index.sort((i, j) => ascendingDefined(f[i], f[j]));
      }
      return permute(values5, index);
    }
    return values5.sort(compareDefined(f));
  }
  function compareDefined(compare = ascending2) {
    if (compare === ascending2) return ascendingDefined;
    if (typeof compare !== "function") throw new TypeError("compare is not a function");
    return (a2, b) => {
      const x = compare(a2, b);
      if (x || x === 0) return x;
      return (compare(b, b) === 0) - (compare(a2, a2) === 0);
    };
  }
  function ascendingDefined(a2, b) {
    return (a2 == null || !(a2 >= a2)) - (b == null || !(b >= b)) || (a2 < b ? -1 : a2 > b ? 1 : 0);
  }

  // node_modules/d3-array/src/ticks.js
  var e10 = Math.sqrt(50);
  var e5 = Math.sqrt(10);
  var e2 = Math.sqrt(2);
  function tickSpec(start3, stop, count) {
    const step = (stop - start3) / Math.max(0, count), power = Math.floor(Math.log10(step)), error = step / Math.pow(10, power), factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;
    let i1, i2, inc;
    if (power < 0) {
      inc = Math.pow(10, -power) / factor;
      i1 = Math.round(start3 * inc);
      i2 = Math.round(stop * inc);
      if (i1 / inc < start3) ++i1;
      if (i2 / inc > stop) --i2;
      inc = -inc;
    } else {
      inc = Math.pow(10, power) * factor;
      i1 = Math.round(start3 / inc);
      i2 = Math.round(stop / inc);
      if (i1 * inc < start3) ++i1;
      if (i2 * inc > stop) --i2;
    }
    if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start3, stop, count * 2);
    return [i1, i2, inc];
  }
  function ticks(start3, stop, count) {
    stop = +stop, start3 = +start3, count = +count;
    if (!(count > 0)) return [];
    if (start3 === stop) return [start3];
    const reverse2 = stop < start3, [i1, i2, inc] = reverse2 ? tickSpec(stop, start3, count) : tickSpec(start3, stop, count);
    if (!(i2 >= i1)) return [];
    const n = i2 - i1 + 1, ticks2 = new Array(n);
    if (reverse2) {
      if (inc < 0) for (let i = 0; i < n; ++i) ticks2[i] = (i2 - i) / -inc;
      else for (let i = 0; i < n; ++i) ticks2[i] = (i2 - i) * inc;
    } else {
      if (inc < 0) for (let i = 0; i < n; ++i) ticks2[i] = (i1 + i) / -inc;
      else for (let i = 0; i < n; ++i) ticks2[i] = (i1 + i) * inc;
    }
    return ticks2;
  }
  function tickIncrement(start3, stop, count) {
    stop = +stop, start3 = +start3, count = +count;
    return tickSpec(start3, stop, count)[2];
  }
  function tickStep(start3, stop, count) {
    stop = +stop, start3 = +start3, count = +count;
    const reverse2 = stop < start3, inc = reverse2 ? tickIncrement(stop, start3, count) : tickIncrement(start3, stop, count);
    return (reverse2 ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);
  }

  // node_modules/d3-array/src/max.js
  function max(values5, valueof) {
    let max8;
    if (valueof === void 0) {
      for (const value of values5) {
        if (value != null && (max8 < value || max8 === void 0 && value >= value)) {
          max8 = value;
        }
      }
    } else {
      let index = -1;
      for (let value of values5) {
        if ((value = valueof(value, ++index, values5)) != null && (max8 < value || max8 === void 0 && value >= value)) {
          max8 = value;
        }
      }
    }
    return max8;
  }

  // node_modules/d3-array/src/min.js
  function min(values5, valueof) {
    let min9;
    if (valueof === void 0) {
      for (const value of values5) {
        if (value != null && (min9 > value || min9 === void 0 && value >= value)) {
          min9 = value;
        }
      }
    } else {
      let index = -1;
      for (let value of values5) {
        if ((value = valueof(value, ++index, values5)) != null && (min9 > value || min9 === void 0 && value >= value)) {
          min9 = value;
        }
      }
    }
    return min9;
  }

  // node_modules/d3-array/src/quickselect.js
  function quickselect(array2, k2, left2 = 0, right2 = Infinity, compare) {
    k2 = Math.floor(k2);
    left2 = Math.floor(Math.max(0, left2));
    right2 = Math.floor(Math.min(array2.length - 1, right2));
    if (!(left2 <= k2 && k2 <= right2)) return array2;
    compare = compare === void 0 ? ascendingDefined : compareDefined(compare);
    while (right2 > left2) {
      if (right2 - left2 > 600) {
        const n = right2 - left2 + 1;
        const m = k2 - left2 + 1;
        const z = Math.log(n);
        const s2 = 0.5 * Math.exp(2 * z / 3);
        const sd = 0.5 * Math.sqrt(z * s2 * (n - s2) / n) * (m - n / 2 < 0 ? -1 : 1);
        const newLeft = Math.max(left2, Math.floor(k2 - m * s2 / n + sd));
        const newRight = Math.min(right2, Math.floor(k2 + (n - m) * s2 / n + sd));
        quickselect(array2, k2, newLeft, newRight, compare);
      }
      const t = array2[k2];
      let i = left2;
      let j = right2;
      swap(array2, left2, k2);
      if (compare(array2[right2], t) > 0) swap(array2, left2, right2);
      while (i < j) {
        swap(array2, i, j), ++i, --j;
        while (compare(array2[i], t) < 0) ++i;
        while (compare(array2[j], t) > 0) --j;
      }
      if (compare(array2[left2], t) === 0) swap(array2, left2, j);
      else ++j, swap(array2, j, right2);
      if (j <= k2) left2 = j + 1;
      if (k2 <= j) right2 = j - 1;
    }
    return array2;
  }
  function swap(array2, i, j) {
    const t = array2[i];
    array2[i] = array2[j];
    array2[j] = t;
  }

  // node_modules/d3-array/src/quantile.js
  function quantile(values5, p, valueof) {
    values5 = Float64Array.from(numbers(values5, valueof));
    if (!(n = values5.length) || isNaN(p = +p)) return;
    if (p <= 0 || n < 2) return min(values5);
    if (p >= 1) return max(values5);
    var n, i = (n - 1) * p, i0 = Math.floor(i), value0 = max(quickselect(values5, i0).subarray(0, i0 + 1)), value1 = min(values5.subarray(i0 + 1));
    return value0 + (value1 - value0) * (i - i0);
  }
  function quantileSorted(values5, p, valueof = number) {
    if (!(n = values5.length) || isNaN(p = +p)) return;
    if (p <= 0 || n < 2) return +valueof(values5[0], 0, values5);
    if (p >= 1) return +valueof(values5[n - 1], n - 1, values5);
    var n, i = (n - 1) * p, i0 = Math.floor(i), value0 = +valueof(values5[i0], i0, values5), value1 = +valueof(values5[i0 + 1], i0 + 1, values5);
    return value0 + (value1 - value0) * (i - i0);
  }

  // node_modules/d3-array/src/median.js
  function median(values5, valueof) {
    return quantile(values5, 0.5, valueof);
  }

  // node_modules/d3-array/src/range.js
  function range(start3, stop, step) {
    start3 = +start3, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start3, start3 = 0, 1) : n < 3 ? 1 : +step;
    var i = -1, n = Math.max(0, Math.ceil((stop - start3) / step)) | 0, range3 = new Array(n);
    while (++i < n) {
      range3[i] = start3 + i * step;
    }
    return range3;
  }

  // node_modules/d3-array/src/reverse.js
  function reverse(values5) {
    if (typeof values5[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
    return Array.from(values5).reverse();
  }

  // node_modules/d3-dispatch/src/dispatch.js
  var noop = { value: () => {
  } };
  function dispatch() {
    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
      if (!(t = arguments[i] + "") || t in _ || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
      _[t] = [];
    }
    return new Dispatch(_);
  }
  function Dispatch(_) {
    this._ = _;
  }
  function parseTypenames2(typenames, types) {
    return typenames.trim().split(/^|\s+/).map(function(t) {
      var name = "", i = t.indexOf(".");
      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
      if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
      return { type: t, name };
    });
  }
  Dispatch.prototype = dispatch.prototype = {
    constructor: Dispatch,
    on: function(typename, callback) {
      var _ = this._, T = parseTypenames2(typename + "", _), t, i = -1, n = T.length;
      if (arguments.length < 2) {
        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
        return;
      }
      if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
      while (++i < n) {
        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);
        else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
      }
      return this;
    },
    copy: function() {
      var copy3 = {}, _ = this._;
      for (var t in _) copy3[t] = _[t].slice();
      return new Dispatch(copy3);
    },
    call: function(type2, that) {
      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
      if (!this._.hasOwnProperty(type2)) throw new Error("unknown type: " + type2);
      for (t = this._[type2], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
    },
    apply: function(type2, that, args) {
      if (!this._.hasOwnProperty(type2)) throw new Error("unknown type: " + type2);
      for (var t = this._[type2], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
    }
  };
  function get(type2, name) {
    for (var i = 0, n = type2.length, c4; i < n; ++i) {
      if ((c4 = type2[i]).name === name) {
        return c4.value;
      }
    }
  }
  function set(type2, name, callback) {
    for (var i = 0, n = type2.length; i < n; ++i) {
      if (type2[i].name === name) {
        type2[i] = noop, type2 = type2.slice(0, i).concat(type2.slice(i + 1));
        break;
      }
    }
    if (callback != null) type2.push({ name, value: callback });
    return type2;
  }
  var dispatch_default2 = dispatch;

  // node_modules/d3-interpolate/src/basis.js
  function basis(t13, v0, v1, v2, v3) {
    var t22 = t13 * t13, t32 = t22 * t13;
    return ((1 - 3 * t13 + 3 * t22 - t32) * v0 + (4 - 6 * t22 + 3 * t32) * v1 + (1 + 3 * t13 + 3 * t22 - 3 * t32) * v2 + t32 * v3) / 6;
  }
  function basis_default(values5) {
    var n = values5.length - 1;
    return function(t) {
      var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n), v1 = values5[i], v2 = values5[i + 1], v0 = i > 0 ? values5[i - 1] : 2 * v1 - v2, v3 = i < n - 1 ? values5[i + 2] : 2 * v2 - v1;
      return basis((t - i / n) * n, v0, v1, v2, v3);
    };
  }

  // node_modules/d3-interpolate/src/basisClosed.js
  function basisClosed_default(values5) {
    var n = values5.length;
    return function(t) {
      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n), v0 = values5[(i + n - 1) % n], v1 = values5[i % n], v2 = values5[(i + 1) % n], v3 = values5[(i + 2) % n];
      return basis((t - i / n) * n, v0, v1, v2, v3);
    };
  }

  // node_modules/d3-interpolate/src/constant.js
  var constant_default2 = (x) => () => x;

  // node_modules/d3-interpolate/src/color.js
  function linear(a2, d) {
    return function(t) {
      return a2 + t * d;
    };
  }
  function exponential(a2, b, y) {
    return a2 = Math.pow(a2, y), b = Math.pow(b, y) - a2, y = 1 / y, function(t) {
      return Math.pow(a2 + t * b, y);
    };
  }
  function hue(a2, b) {
    var d = b - a2;
    return d ? linear(a2, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant_default2(isNaN(a2) ? b : a2);
  }
  function gamma(y) {
    return (y = +y) === 1 ? nogamma : function(a2, b) {
      return b - a2 ? exponential(a2, b, y) : constant_default2(isNaN(a2) ? b : a2);
    };
  }
  function nogamma(a2, b) {
    var d = b - a2;
    return d ? linear(a2, d) : constant_default2(isNaN(a2) ? b : a2);
  }

  // node_modules/d3-interpolate/src/rgb.js
  var rgb_default = (function rgbGamma(y) {
    var color4 = gamma(y);
    function rgb2(start3, end2) {
      var r = color4((start3 = rgb(start3)).r, (end2 = rgb(end2)).r), g = color4(start3.g, end2.g), b = color4(start3.b, end2.b), opacity3 = nogamma(start3.opacity, end2.opacity);
      return function(t) {
        start3.r = r(t);
        start3.g = g(t);
        start3.b = b(t);
        start3.opacity = opacity3(t);
        return start3 + "";
      };
    }
    rgb2.gamma = rgbGamma;
    return rgb2;
  })(1);
  function rgbSpline(spline) {
    return function(colors) {
      var n = colors.length, r = new Array(n), g = new Array(n), b = new Array(n), i, color4;
      for (i = 0; i < n; ++i) {
        color4 = rgb(colors[i]);
        r[i] = color4.r || 0;
        g[i] = color4.g || 0;
        b[i] = color4.b || 0;
      }
      r = spline(r);
      g = spline(g);
      b = spline(b);
      color4.opacity = 1;
      return function(t) {
        color4.r = r(t);
        color4.g = g(t);
        color4.b = b(t);
        return color4 + "";
      };
    };
  }
  var rgbBasis = rgbSpline(basis_default);
  var rgbBasisClosed = rgbSpline(basisClosed_default);

  // node_modules/d3-interpolate/src/numberArray.js
  function numberArray_default(a2, b) {
    if (!b) b = [];
    var n = a2 ? Math.min(b.length, a2.length) : 0, c4 = b.slice(), i;
    return function(t) {
      for (i = 0; i < n; ++i) c4[i] = a2[i] * (1 - t) + b[i] * t;
      return c4;
    };
  }
  function isNumberArray(x) {
    return ArrayBuffer.isView(x) && !(x instanceof DataView);
  }

  // node_modules/d3-interpolate/src/array.js
  function genericArray(a2, b) {
    var nb = b ? b.length : 0, na = a2 ? Math.min(nb, a2.length) : 0, x = new Array(na), c4 = new Array(nb), i;
    for (i = 0; i < na; ++i) x[i] = value_default(a2[i], b[i]);
    for (; i < nb; ++i) c4[i] = b[i];
    return function(t) {
      for (i = 0; i < na; ++i) c4[i] = x[i](t);
      return c4;
    };
  }

  // node_modules/d3-interpolate/src/date.js
  function date_default(a2, b) {
    var d = /* @__PURE__ */ new Date();
    return a2 = +a2, b = +b, function(t) {
      return d.setTime(a2 * (1 - t) + b * t), d;
    };
  }

  // node_modules/d3-interpolate/src/number.js
  function number_default(a2, b) {
    return a2 = +a2, b = +b, function(t) {
      return a2 * (1 - t) + b * t;
    };
  }

  // node_modules/d3-interpolate/src/object.js
  function object_default(a2, b) {
    var i = {}, c4 = {}, k2;
    if (a2 === null || typeof a2 !== "object") a2 = {};
    if (b === null || typeof b !== "object") b = {};
    for (k2 in b) {
      if (k2 in a2) {
        i[k2] = value_default(a2[k2], b[k2]);
      } else {
        c4[k2] = b[k2];
      }
    }
    return function(t) {
      for (k2 in i) c4[k2] = i[k2](t);
      return c4;
    };
  }

  // node_modules/d3-interpolate/src/string.js
  var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
  var reB = new RegExp(reA.source, "g");
  function zero2(b) {
    return function() {
      return b;
    };
  }
  function one(b) {
    return function(t) {
      return b(t) + "";
    };
  }
  function string_default(a2, b) {
    var bi = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i = -1, s2 = [], q = [];
    a2 = a2 + "", b = b + "";
    while ((am = reA.exec(a2)) && (bm = reB.exec(b))) {
      if ((bs = bm.index) > bi) {
        bs = b.slice(bi, bs);
        if (s2[i]) s2[i] += bs;
        else s2[++i] = bs;
      }
      if ((am = am[0]) === (bm = bm[0])) {
        if (s2[i]) s2[i] += bm;
        else s2[++i] = bm;
      } else {
        s2[++i] = null;
        q.push({ i, x: number_default(am, bm) });
      }
      bi = reB.lastIndex;
    }
    if (bi < b.length) {
      bs = b.slice(bi);
      if (s2[i]) s2[i] += bs;
      else s2[++i] = bs;
    }
    return s2.length < 2 ? q[0] ? one(q[0].x) : zero2(b) : (b = q.length, function(t) {
      for (var i2 = 0, o; i2 < b; ++i2) s2[(o = q[i2]).i] = o.x(t);
      return s2.join("");
    });
  }

  // node_modules/d3-interpolate/src/value.js
  function value_default(a2, b) {
    var t = typeof b, c4;
    return b == null || t === "boolean" ? constant_default2(b) : (t === "number" ? number_default : t === "string" ? (c4 = color(b)) ? (b = c4, rgb_default) : string_default : b instanceof color ? rgb_default : b instanceof Date ? date_default : isNumberArray(b) ? numberArray_default : Array.isArray(b) ? genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object_default : number_default)(a2, b);
  }

  // node_modules/d3-interpolate/src/round.js
  function round_default(a2, b) {
    return a2 = +a2, b = +b, function(t) {
      return Math.round(a2 * (1 - t) + b * t);
    };
  }

  // node_modules/d3-interpolate/src/transform/decompose.js
  var degrees2 = 180 / Math.PI;
  var identity = {
    translateX: 0,
    translateY: 0,
    rotate: 0,
    skewX: 0,
    scaleX: 1,
    scaleY: 1
  };
  function decompose_default(a2, b, c4, d, e, f) {
    var scaleX, scaleY, skewX;
    if (scaleX = Math.sqrt(a2 * a2 + b * b)) a2 /= scaleX, b /= scaleX;
    if (skewX = a2 * c4 + b * d) c4 -= a2 * skewX, d -= b * skewX;
    if (scaleY = Math.sqrt(c4 * c4 + d * d)) c4 /= scaleY, d /= scaleY, skewX /= scaleY;
    if (a2 * d < b * c4) a2 = -a2, b = -b, skewX = -skewX, scaleX = -scaleX;
    return {
      translateX: e,
      translateY: f,
      rotate: Math.atan2(b, a2) * degrees2,
      skewX: Math.atan(skewX) * degrees2,
      scaleX,
      scaleY
    };
  }

  // node_modules/d3-interpolate/src/transform/parse.js
  var svgNode;
  function parseCss(value) {
    const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
    return m.isIdentity ? identity : decompose_default(m.a, m.b, m.c, m.d, m.e, m.f);
  }
  function parseSvg(value) {
    if (value == null) return identity;
    if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
    svgNode.setAttribute("transform", value);
    if (!(value = svgNode.transform.baseVal.consolidate())) return identity;
    value = value.matrix;
    return decompose_default(value.a, value.b, value.c, value.d, value.e, value.f);
  }

  // node_modules/d3-interpolate/src/transform/index.js
  function interpolateTransform(parse3, pxComma, pxParen, degParen) {
    function pop(s2) {
      return s2.length ? s2.pop() + " " : "";
    }
    function translate(xa, ya, xb, yb, s2, q) {
      if (xa !== xb || ya !== yb) {
        var i = s2.push("translate(", null, pxComma, null, pxParen);
        q.push({ i: i - 4, x: number_default(xa, xb) }, { i: i - 2, x: number_default(ya, yb) });
      } else if (xb || yb) {
        s2.push("translate(" + xb + pxComma + yb + pxParen);
      }
    }
    function rotate(a2, b, s2, q) {
      if (a2 !== b) {
        if (a2 - b > 180) b += 360;
        else if (b - a2 > 180) a2 += 360;
        q.push({ i: s2.push(pop(s2) + "rotate(", null, degParen) - 2, x: number_default(a2, b) });
      } else if (b) {
        s2.push(pop(s2) + "rotate(" + b + degParen);
      }
    }
    function skewX(a2, b, s2, q) {
      if (a2 !== b) {
        q.push({ i: s2.push(pop(s2) + "skewX(", null, degParen) - 2, x: number_default(a2, b) });
      } else if (b) {
        s2.push(pop(s2) + "skewX(" + b + degParen);
      }
    }
    function scale3(xa, ya, xb, yb, s2, q) {
      if (xa !== xb || ya !== yb) {
        var i = s2.push(pop(s2) + "scale(", null, ",", null, ")");
        q.push({ i: i - 4, x: number_default(xa, xb) }, { i: i - 2, x: number_default(ya, yb) });
      } else if (xb !== 1 || yb !== 1) {
        s2.push(pop(s2) + "scale(" + xb + "," + yb + ")");
      }
    }
    return function(a2, b) {
      var s2 = [], q = [];
      a2 = parse3(a2), b = parse3(b);
      translate(a2.translateX, a2.translateY, b.translateX, b.translateY, s2, q);
      rotate(a2.rotate, b.rotate, s2, q);
      skewX(a2.skewX, b.skewX, s2, q);
      scale3(a2.scaleX, a2.scaleY, b.scaleX, b.scaleY, s2, q);
      a2 = b = null;
      return function(t) {
        var i = -1, n = q.length, o;
        while (++i < n) s2[(o = q[i]).i] = o.x(t);
        return s2.join("");
      };
    };
  }
  var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
  var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");

  // node_modules/d3-interpolate/src/hsl.js
  function hsl2(hue2) {
    return function(start3, end2) {
      var h = hue2((start3 = hsl(start3)).h, (end2 = hsl(end2)).h), s2 = nogamma(start3.s, end2.s), l = nogamma(start3.l, end2.l), opacity3 = nogamma(start3.opacity, end2.opacity);
      return function(t) {
        start3.h = h(t);
        start3.s = s2(t);
        start3.l = l(t);
        start3.opacity = opacity3(t);
        return start3 + "";
      };
    };
  }
  var hsl_default = hsl2(hue);
  var hslLong = hsl2(nogamma);

  // node_modules/d3-interpolate/src/lab.js
  function lab2(start3, end2) {
    var l = nogamma((start3 = lab(start3)).l, (end2 = lab(end2)).l), a2 = nogamma(start3.a, end2.a), b = nogamma(start3.b, end2.b), opacity3 = nogamma(start3.opacity, end2.opacity);
    return function(t) {
      start3.l = l(t);
      start3.a = a2(t);
      start3.b = b(t);
      start3.opacity = opacity3(t);
      return start3 + "";
    };
  }

  // node_modules/d3-interpolate/src/hcl.js
  function hcl2(hue2) {
    return function(start3, end2) {
      var h = hue2((start3 = hcl(start3)).h, (end2 = hcl(end2)).h), c4 = nogamma(start3.c, end2.c), l = nogamma(start3.l, end2.l), opacity3 = nogamma(start3.opacity, end2.opacity);
      return function(t) {
        start3.h = h(t);
        start3.c = c4(t);
        start3.l = l(t);
        start3.opacity = opacity3(t);
        return start3 + "";
      };
    };
  }
  var hcl_default = hcl2(hue);
  var hclLong = hcl2(nogamma);

  // node_modules/d3-interpolate/src/cubehelix.js
  function cubehelix2(hue2) {
    return (function cubehelixGamma(y) {
      y = +y;
      function cubehelix3(start3, end2) {
        var h = hue2((start3 = cubehelix(start3)).h, (end2 = cubehelix(end2)).h), s2 = nogamma(start3.s, end2.s), l = nogamma(start3.l, end2.l), opacity3 = nogamma(start3.opacity, end2.opacity);
        return function(t) {
          start3.h = h(t);
          start3.s = s2(t);
          start3.l = l(Math.pow(t, y));
          start3.opacity = opacity3(t);
          return start3 + "";
        };
      }
      cubehelix3.gamma = cubehelixGamma;
      return cubehelix3;
    })(1);
  }
  var cubehelix_default = cubehelix2(hue);
  var cubehelixLong = cubehelix2(nogamma);

  // node_modules/d3-interpolate/src/piecewise.js
  function piecewise(interpolate, values5) {
    if (values5 === void 0) values5 = interpolate, interpolate = value_default;
    var i = 0, n = values5.length - 1, v = values5[0], I = new Array(n < 0 ? 0 : n);
    while (i < n) I[i] = interpolate(v, v = values5[++i]);
    return function(t) {
      var i2 = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
      return I[i2](t - i2);
    };
  }

  // node_modules/d3-interpolate/src/quantize.js
  function quantize_default(interpolator, n) {
    var samples = new Array(n);
    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
    return samples;
  }

  // node_modules/d3-timer/src/timer.js
  var frame = 0;
  var timeout = 0;
  var interval = 0;
  var pokeDelay = 1e3;
  var taskHead;
  var taskTail;
  var clockLast = 0;
  var clockNow = 0;
  var clockSkew = 0;
  var clock = typeof performance === "object" && performance.now ? performance : Date;
  var setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) {
    setTimeout(f, 17);
  };
  function now() {
    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
  }
  function clearNow() {
    clockNow = 0;
  }
  function Timer() {
    this._call = this._time = this._next = null;
  }
  Timer.prototype = timer.prototype = {
    constructor: Timer,
    restart: function(callback, delay, time2) {
      if (typeof callback !== "function") throw new TypeError("callback is not a function");
      time2 = (time2 == null ? now() : +time2) + (delay == null ? 0 : +delay);
      if (!this._next && taskTail !== this) {
        if (taskTail) taskTail._next = this;
        else taskHead = this;
        taskTail = this;
      }
      this._call = callback;
      this._time = time2;
      sleep();
    },
    stop: function() {
      if (this._call) {
        this._call = null;
        this._time = Infinity;
        sleep();
      }
    }
  };
  function timer(callback, delay, time2) {
    var t = new Timer();
    t.restart(callback, delay, time2);
    return t;
  }
  function timerFlush() {
    now();
    ++frame;
    var t = taskHead, e;
    while (t) {
      if ((e = clockNow - t._time) >= 0) t._call.call(void 0, e);
      t = t._next;
    }
    --frame;
  }
  function wake() {
    clockNow = (clockLast = clock.now()) + clockSkew;
    frame = timeout = 0;
    try {
      timerFlush();
    } finally {
      frame = 0;
      nap();
      clockNow = 0;
    }
  }
  function poke() {
    var now2 = clock.now(), delay = now2 - clockLast;
    if (delay > pokeDelay) clockSkew -= delay, clockLast = now2;
  }
  function nap() {
    var t03, t13 = taskHead, t22, time2 = Infinity;
    while (t13) {
      if (t13._call) {
        if (time2 > t13._time) time2 = t13._time;
        t03 = t13, t13 = t13._next;
      } else {
        t22 = t13._next, t13._next = null;
        t13 = t03 ? t03._next = t22 : taskHead = t22;
      }
    }
    taskTail = t03;
    sleep(time2);
  }
  function sleep(time2) {
    if (frame) return;
    if (timeout) timeout = clearTimeout(timeout);
    var delay = time2 - clockNow;
    if (delay > 24) {
      if (time2 < Infinity) timeout = setTimeout(wake, time2 - clock.now() - clockSkew);
      if (interval) interval = clearInterval(interval);
    } else {
      if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
      frame = 1, setFrame(wake);
    }
  }

  // node_modules/d3-timer/src/timeout.js
  function timeout_default(callback, delay, time2) {
    var t = new Timer();
    delay = delay == null ? 0 : +delay;
    t.restart((elapsed) => {
      t.stop();
      callback(elapsed + delay);
    }, delay, time2);
    return t;
  }

  // node_modules/d3-transition/src/transition/schedule.js
  var emptyOn = dispatch_default2("start", "end", "cancel", "interrupt");
  var emptyTween = [];
  var CREATED = 0;
  var SCHEDULED = 1;
  var STARTING = 2;
  var STARTED = 3;
  var RUNNING = 4;
  var ENDING = 5;
  var ENDED = 6;
  function schedule_default(node5, name, id6, index, group, timing) {
    var schedules = node5.__transition;
    if (!schedules) node5.__transition = {};
    else if (id6 in schedules) return;
    create(node5, id6, {
      name,
      index,
      // For context during callback.
      group,
      // For context during callback.
      on: emptyOn,
      tween: emptyTween,
      time: timing.time,
      delay: timing.delay,
      duration: timing.duration,
      ease: timing.ease,
      timer: null,
      state: CREATED
    });
  }
  function init(node5, id6) {
    var schedule = get2(node5, id6);
    if (schedule.state > CREATED) throw new Error("too late; already scheduled");
    return schedule;
  }
  function set2(node5, id6) {
    var schedule = get2(node5, id6);
    if (schedule.state > STARTED) throw new Error("too late; already running");
    return schedule;
  }
  function get2(node5, id6) {
    var schedule = node5.__transition;
    if (!schedule || !(schedule = schedule[id6])) throw new Error("transition not found");
    return schedule;
  }
  function create(node5, id6, self2) {
    var schedules = node5.__transition, tween;
    schedules[id6] = self2;
    self2.timer = timer(schedule, 0, self2.time);
    function schedule(elapsed) {
      self2.state = SCHEDULED;
      self2.timer.restart(start3, self2.delay, self2.time);
      if (self2.delay <= elapsed) start3(elapsed - self2.delay);
    }
    function start3(elapsed) {
      var i, j, n, o;
      if (self2.state !== SCHEDULED) return stop();
      for (i in schedules) {
        o = schedules[i];
        if (o.name !== self2.name) continue;
        if (o.state === STARTED) return timeout_default(start3);
        if (o.state === RUNNING) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("interrupt", node5, node5.__data__, o.index, o.group);
          delete schedules[i];
        } else if (+i < id6) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("cancel", node5, node5.__data__, o.index, o.group);
          delete schedules[i];
        }
      }
      timeout_default(function() {
        if (self2.state === STARTED) {
          self2.state = RUNNING;
          self2.timer.restart(tick, self2.delay, self2.time);
          tick(elapsed);
        }
      });
      self2.state = STARTING;
      self2.on.call("start", node5, node5.__data__, self2.index, self2.group);
      if (self2.state !== STARTING) return;
      self2.state = STARTED;
      tween = new Array(n = self2.tween.length);
      for (i = 0, j = -1; i < n; ++i) {
        if (o = self2.tween[i].value.call(node5, node5.__data__, self2.index, self2.group)) {
          tween[++j] = o;
        }
      }
      tween.length = j + 1;
    }
    function tick(elapsed) {
      var t = elapsed < self2.duration ? self2.ease.call(null, elapsed / self2.duration) : (self2.timer.restart(stop), self2.state = ENDING, 1), i = -1, n = tween.length;
      while (++i < n) {
        tween[i].call(node5, t);
      }
      if (self2.state === ENDING) {
        self2.on.call("end", node5, node5.__data__, self2.index, self2.group);
        stop();
      }
    }
    function stop() {
      self2.state = ENDED;
      self2.timer.stop();
      delete schedules[id6];
      for (var i in schedules) return;
      delete node5.__transition;
    }
  }

  // node_modules/d3-transition/src/interrupt.js
  function interrupt_default(node5, name) {
    var schedules = node5.__transition, schedule, active, empty6 = true, i;
    if (!schedules) return;
    name = name == null ? null : name + "";
    for (i in schedules) {
      if ((schedule = schedules[i]).name !== name) {
        empty6 = false;
        continue;
      }
      active = schedule.state > STARTING && schedule.state < ENDING;
      schedule.state = ENDED;
      schedule.timer.stop();
      schedule.on.call(active ? "interrupt" : "cancel", node5, node5.__data__, schedule.index, schedule.group);
      delete schedules[i];
    }
    if (empty6) delete node5.__transition;
  }

  // node_modules/d3-transition/src/selection/interrupt.js
  function interrupt_default2(name) {
    return this.each(function() {
      interrupt_default(this, name);
    });
  }

  // node_modules/d3-transition/src/transition/tween.js
  function tweenRemove(id6, name) {
    var tween0, tween1;
    return function() {
      var schedule = set2(this, id6), tween = schedule.tween;
      if (tween !== tween0) {
        tween1 = tween0 = tween;
        for (var i = 0, n = tween1.length; i < n; ++i) {
          if (tween1[i].name === name) {
            tween1 = tween1.slice();
            tween1.splice(i, 1);
            break;
          }
        }
      }
      schedule.tween = tween1;
    };
  }
  function tweenFunction(id6, name, value) {
    var tween0, tween1;
    if (typeof value !== "function") throw new Error();
    return function() {
      var schedule = set2(this, id6), tween = schedule.tween;
      if (tween !== tween0) {
        tween1 = (tween0 = tween).slice();
        for (var t = { name, value }, i = 0, n = tween1.length; i < n; ++i) {
          if (tween1[i].name === name) {
            tween1[i] = t;
            break;
          }
        }
        if (i === n) tween1.push(t);
      }
      schedule.tween = tween1;
    };
  }
  function tween_default(name, value) {
    var id6 = this._id;
    name += "";
    if (arguments.length < 2) {
      var tween = get2(this.node(), id6).tween;
      for (var i = 0, n = tween.length, t; i < n; ++i) {
        if ((t = tween[i]).name === name) {
          return t.value;
        }
      }
      return null;
    }
    return this.each((value == null ? tweenRemove : tweenFunction)(id6, name, value));
  }
  function tweenValue(transition2, name, value) {
    var id6 = transition2._id;
    transition2.each(function() {
      var schedule = set2(this, id6);
      (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
    });
    return function(node5) {
      return get2(node5, id6).value[name];
    };
  }

  // node_modules/d3-transition/src/transition/interpolate.js
  function interpolate_default(a2, b) {
    var c4;
    return (typeof b === "number" ? number_default : b instanceof color ? rgb_default : (c4 = color(b)) ? (b = c4, rgb_default) : string_default)(a2, b);
  }

  // node_modules/d3-transition/src/transition/attr.js
  function attrRemove2(name) {
    return function() {
      this.removeAttribute(name);
    };
  }
  function attrRemoveNS2(fullname) {
    return function() {
      this.removeAttributeNS(fullname.space, fullname.local);
    };
  }
  function attrConstant2(name, interpolate, value1) {
    var string00, string1 = value1 + "", interpolate0;
    return function() {
      var string0 = this.getAttribute(name);
      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
    };
  }
  function attrConstantNS2(fullname, interpolate, value1) {
    var string00, string1 = value1 + "", interpolate0;
    return function() {
      var string0 = this.getAttributeNS(fullname.space, fullname.local);
      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
    };
  }
  function attrFunction2(name, interpolate, value) {
    var string00, string10, interpolate0;
    return function() {
      var string0, value1 = value(this), string1;
      if (value1 == null) return void this.removeAttribute(name);
      string0 = this.getAttribute(name);
      string1 = value1 + "";
      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
    };
  }
  function attrFunctionNS2(fullname, interpolate, value) {
    var string00, string10, interpolate0;
    return function() {
      var string0, value1 = value(this), string1;
      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
      string0 = this.getAttributeNS(fullname.space, fullname.local);
      string1 = value1 + "";
      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
    };
  }
  function attr_default2(name, value) {
    var fullname = namespace_default(name), i = fullname === "transform" ? interpolateTransformSvg : interpolate_default;
    return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS2 : attrFunction2)(fullname, i, tweenValue(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS2 : attrRemove2)(fullname) : (fullname.local ? attrConstantNS2 : attrConstant2)(fullname, i, value));
  }

  // node_modules/d3-transition/src/transition/attrTween.js
  function attrInterpolate(name, i) {
    return function(t) {
      this.setAttribute(name, i.call(this, t));
    };
  }
  function attrInterpolateNS(fullname, i) {
    return function(t) {
      this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
    };
  }
  function attrTweenNS(fullname, value) {
    var t03, i0;
    function tween() {
      var i = value.apply(this, arguments);
      if (i !== i0) t03 = (i0 = i) && attrInterpolateNS(fullname, i);
      return t03;
    }
    tween._value = value;
    return tween;
  }
  function attrTween(name, value) {
    var t03, i0;
    function tween() {
      var i = value.apply(this, arguments);
      if (i !== i0) t03 = (i0 = i) && attrInterpolate(name, i);
      return t03;
    }
    tween._value = value;
    return tween;
  }
  function attrTween_default(name, value) {
    var key = "attr." + name;
    if (arguments.length < 2) return (key = this.tween(key)) && key._value;
    if (value == null) return this.tween(key, null);
    if (typeof value !== "function") throw new Error();
    var fullname = namespace_default(name);
    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
  }

  // node_modules/d3-transition/src/transition/delay.js
  function delayFunction(id6, value) {
    return function() {
      init(this, id6).delay = +value.apply(this, arguments);
    };
  }
  function delayConstant(id6, value) {
    return value = +value, function() {
      init(this, id6).delay = value;
    };
  }
  function delay_default(value) {
    var id6 = this._id;
    return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id6, value)) : get2(this.node(), id6).delay;
  }

  // node_modules/d3-transition/src/transition/duration.js
  function durationFunction(id6, value) {
    return function() {
      set2(this, id6).duration = +value.apply(this, arguments);
    };
  }
  function durationConstant(id6, value) {
    return value = +value, function() {
      set2(this, id6).duration = value;
    };
  }
  function duration_default(value) {
    var id6 = this._id;
    return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id6, value)) : get2(this.node(), id6).duration;
  }

  // node_modules/d3-transition/src/transition/ease.js
  function easeConstant(id6, value) {
    if (typeof value !== "function") throw new Error();
    return function() {
      set2(this, id6).ease = value;
    };
  }
  function ease_default(value) {
    var id6 = this._id;
    return arguments.length ? this.each(easeConstant(id6, value)) : get2(this.node(), id6).ease;
  }

  // node_modules/d3-transition/src/transition/easeVarying.js
  function easeVarying(id6, value) {
    return function() {
      var v = value.apply(this, arguments);
      if (typeof v !== "function") throw new Error();
      set2(this, id6).ease = v;
    };
  }
  function easeVarying_default(value) {
    if (typeof value !== "function") throw new Error();
    return this.each(easeVarying(this._id, value));
  }

  // node_modules/d3-transition/src/transition/filter.js
  function filter_default2(match5) {
    if (typeof match5 !== "function") match5 = matcher_default(match5);
    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node5, i = 0; i < n; ++i) {
        if ((node5 = group[i]) && match5.call(node5, node5.__data__, i, group)) {
          subgroup.push(node5);
        }
      }
    }
    return new Transition(subgroups, this._parents, this._name, this._id);
  }

  // node_modules/d3-transition/src/transition/merge.js
  function merge_default2(transition2) {
    if (transition2._id !== this._id) throw new Error();
    for (var groups0 = this._groups, groups1 = transition2._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge3 = merges[j] = new Array(n), node5, i = 0; i < n; ++i) {
        if (node5 = group0[i] || group1[i]) {
          merge3[i] = node5;
        }
      }
    }
    for (; j < m0; ++j) {
      merges[j] = groups0[j];
    }
    return new Transition(merges, this._parents, this._name, this._id);
  }

  // node_modules/d3-transition/src/transition/on.js
  function start(name) {
    return (name + "").trim().split(/^|\s+/).every(function(t) {
      var i = t.indexOf(".");
      if (i >= 0) t = t.slice(0, i);
      return !t || t === "start";
    });
  }
  function onFunction(id6, name, listener) {
    var on0, on1, sit = start(name) ? init : set2;
    return function() {
      var schedule = sit(this, id6), on = schedule.on;
      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
      schedule.on = on1;
    };
  }
  function on_default2(name, listener) {
    var id6 = this._id;
    return arguments.length < 2 ? get2(this.node(), id6).on.on(name) : this.each(onFunction(id6, name, listener));
  }

  // node_modules/d3-transition/src/transition/remove.js
  function removeFunction(id6) {
    return function() {
      var parent = this.parentNode;
      for (var i in this.__transition) if (+i !== id6) return;
      if (parent) parent.removeChild(this);
    };
  }
  function remove_default2() {
    return this.on("end.remove", removeFunction(this._id));
  }

  // node_modules/d3-transition/src/transition/select.js
  function select_default3(select) {
    var name = this._name, id6 = this._id;
    if (typeof select !== "function") select = selector_default(select);
    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node5, subnode, i = 0; i < n; ++i) {
        if ((node5 = group[i]) && (subnode = select.call(node5, node5.__data__, i, group))) {
          if ("__data__" in node5) subnode.__data__ = node5.__data__;
          subgroup[i] = subnode;
          schedule_default(subgroup[i], name, id6, i, subgroup, get2(node5, id6));
        }
      }
    }
    return new Transition(subgroups, this._parents, name, id6);
  }

  // node_modules/d3-transition/src/transition/selectAll.js
  function selectAll_default2(select) {
    var name = this._name, id6 = this._id;
    if (typeof select !== "function") select = selectorAll_default(select);
    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, node5, i = 0; i < n; ++i) {
        if (node5 = group[i]) {
          for (var children2 = select.call(node5, node5.__data__, i, group), child, inherit2 = get2(node5, id6), k2 = 0, l = children2.length; k2 < l; ++k2) {
            if (child = children2[k2]) {
              schedule_default(child, name, id6, k2, children2, inherit2);
            }
          }
          subgroups.push(children2);
          parents.push(node5);
        }
      }
    }
    return new Transition(subgroups, parents, name, id6);
  }

  // node_modules/d3-transition/src/transition/selection.js
  var Selection2 = selection_default.prototype.constructor;
  function selection_default2() {
    return new Selection2(this._groups, this._parents);
  }

  // node_modules/d3-transition/src/transition/style.js
  function styleNull(name, interpolate) {
    var string00, string10, interpolate0;
    return function() {
      var string0 = styleValue(this, name), string1 = (this.style.removeProperty(name), styleValue(this, name));
      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
    };
  }
  function styleRemove2(name) {
    return function() {
      this.style.removeProperty(name);
    };
  }
  function styleConstant2(name, interpolate, value1) {
    var string00, string1 = value1 + "", interpolate0;
    return function() {
      var string0 = styleValue(this, name);
      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
    };
  }
  function styleFunction2(name, interpolate, value) {
    var string00, string10, interpolate0;
    return function() {
      var string0 = styleValue(this, name), value1 = value(this), string1 = value1 + "";
      if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));
      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
    };
  }
  function styleMaybeRemove(id6, name) {
    var on0, on1, listener0, key = "style." + name, event = "end." + key, remove2;
    return function() {
      var schedule = set2(this, id6), on = schedule.on, listener = schedule.value[key] == null ? remove2 || (remove2 = styleRemove2(name)) : void 0;
      if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);
      schedule.on = on1;
    };
  }
  function style_default2(name, value, priority) {
    var i = (name += "") === "transform" ? interpolateTransformCss : interpolate_default;
    return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove2(name)) : typeof value === "function" ? this.styleTween(name, styleFunction2(name, i, tweenValue(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant2(name, i, value), priority).on("end.style." + name, null);
  }

  // node_modules/d3-transition/src/transition/styleTween.js
  function styleInterpolate(name, i, priority) {
    return function(t) {
      this.style.setProperty(name, i.call(this, t), priority);
    };
  }
  function styleTween(name, value, priority) {
    var t, i0;
    function tween() {
      var i = value.apply(this, arguments);
      if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
      return t;
    }
    tween._value = value;
    return tween;
  }
  function styleTween_default(name, value, priority) {
    var key = "style." + (name += "");
    if (arguments.length < 2) return (key = this.tween(key)) && key._value;
    if (value == null) return this.tween(key, null);
    if (typeof value !== "function") throw new Error();
    return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
  }

  // node_modules/d3-transition/src/transition/text.js
  function textConstant2(value) {
    return function() {
      this.textContent = value;
    };
  }
  function textFunction2(value) {
    return function() {
      var value1 = value(this);
      this.textContent = value1 == null ? "" : value1;
    };
  }
  function text_default2(value) {
    return this.tween("text", typeof value === "function" ? textFunction2(tweenValue(this, "text", value)) : textConstant2(value == null ? "" : value + ""));
  }

  // node_modules/d3-transition/src/transition/textTween.js
  function textInterpolate(i) {
    return function(t) {
      this.textContent = i.call(this, t);
    };
  }
  function textTween(value) {
    var t03, i0;
    function tween() {
      var i = value.apply(this, arguments);
      if (i !== i0) t03 = (i0 = i) && textInterpolate(i);
      return t03;
    }
    tween._value = value;
    return tween;
  }
  function textTween_default(value) {
    var key = "text";
    if (arguments.length < 1) return (key = this.tween(key)) && key._value;
    if (value == null) return this.tween(key, null);
    if (typeof value !== "function") throw new Error();
    return this.tween(key, textTween(value));
  }

  // node_modules/d3-transition/src/transition/transition.js
  function transition_default() {
    var name = this._name, id0 = this._id, id1 = newId();
    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, node5, i = 0; i < n; ++i) {
        if (node5 = group[i]) {
          var inherit2 = get2(node5, id0);
          schedule_default(node5, name, id1, i, group, {
            time: inherit2.time + inherit2.delay + inherit2.duration,
            delay: 0,
            duration: inherit2.duration,
            ease: inherit2.ease
          });
        }
      }
    }
    return new Transition(groups, this._parents, name, id1);
  }

  // node_modules/d3-transition/src/transition/end.js
  function end_default() {
    var on0, on1, that = this, id6 = that._id, size = that.size();
    return new Promise(function(resolve5, reject5) {
      var cancel = { value: reject5 }, end2 = { value: function() {
        if (--size === 0) resolve5();
      } };
      that.each(function() {
        var schedule = set2(this, id6), on = schedule.on;
        if (on !== on0) {
          on1 = (on0 = on).copy();
          on1._.cancel.push(cancel);
          on1._.interrupt.push(cancel);
          on1._.end.push(end2);
        }
        schedule.on = on1;
      });
      if (size === 0) resolve5();
    });
  }

  // node_modules/d3-transition/src/transition/index.js
  var id = 0;
  function Transition(groups, parents, name, id6) {
    this._groups = groups;
    this._parents = parents;
    this._name = name;
    this._id = id6;
  }
  function transition(name) {
    return selection_default().transition(name);
  }
  function newId() {
    return ++id;
  }
  var selection_prototype = selection_default.prototype;
  Transition.prototype = transition.prototype = {
    constructor: Transition,
    select: select_default3,
    selectAll: selectAll_default2,
    selectChild: selection_prototype.selectChild,
    selectChildren: selection_prototype.selectChildren,
    filter: filter_default2,
    merge: merge_default2,
    selection: selection_default2,
    transition: transition_default,
    call: selection_prototype.call,
    nodes: selection_prototype.nodes,
    node: selection_prototype.node,
    size: selection_prototype.size,
    empty: selection_prototype.empty,
    each: selection_prototype.each,
    on: on_default2,
    attr: attr_default2,
    attrTween: attrTween_default,
    style: style_default2,
    styleTween: styleTween_default,
    text: text_default2,
    textTween: textTween_default,
    remove: remove_default2,
    tween: tween_default,
    delay: delay_default,
    duration: duration_default,
    ease: ease_default,
    easeVarying: easeVarying_default,
    end: end_default,
    [Symbol.iterator]: selection_prototype[Symbol.iterator]
  };

  // node_modules/d3-ease/src/cubic.js
  function cubicInOut(t) {
    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
  }

  // node_modules/d3-transition/src/selection/transition.js
  var defaultTiming = {
    time: null,
    // Set on use.
    delay: 0,
    duration: 250,
    ease: cubicInOut
  };
  function inherit(node5, id6) {
    var timing;
    while (!(timing = node5.__transition) || !(timing = timing[id6])) {
      if (!(node5 = node5.parentNode)) {
        throw new Error(`transition ${id6} not found`);
      }
    }
    return timing;
  }
  function transition_default2(name) {
    var id6, timing;
    if (name instanceof Transition) {
      id6 = name._id, name = name._name;
    } else {
      id6 = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";
    }
    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, node5, i = 0; i < n; ++i) {
        if (node5 = group[i]) {
          schedule_default(node5, name, id6, i, group, timing || inherit(node5, id6));
        }
      }
    }
    return new Transition(groups, this._parents, name, id6);
  }

  // node_modules/d3-transition/src/selection/index.js
  selection_default.prototype.interrupt = interrupt_default2;
  selection_default.prototype.transition = transition_default2;

  // node_modules/d3-brush/src/brush.js
  var { abs, max: max2, min: min2 } = Math;
  function number1(e) {
    return [+e[0], +e[1]];
  }
  function number2(e) {
    return [number1(e[0]), number1(e[1])];
  }
  var X = {
    name: "x",
    handles: ["w", "e"].map(type),
    input: function(x, e) {
      return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]];
    },
    output: function(xy) {
      return xy && [xy[0][0], xy[1][0]];
    }
  };
  var Y = {
    name: "y",
    handles: ["n", "s"].map(type),
    input: function(y, e) {
      return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]];
    },
    output: function(xy) {
      return xy && [xy[0][1], xy[1][1]];
    }
  };
  var XY = {
    name: "xy",
    handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
    input: function(xy) {
      return xy == null ? null : number2(xy);
    },
    output: function(xy) {
      return xy;
    }
  };
  function type(t) {
    return { type: t };
  }

  // node_modules/d3-dsv/src/dsv.js
  var EOL = {};
  var EOF = {};
  var QUOTE = 34;
  var NEWLINE = 10;
  var RETURN = 13;
  function objectConverter(columns) {
    return new Function("d", "return {" + columns.map(function(name, i) {
      return JSON.stringify(name) + ": d[" + i + '] || ""';
    }).join(",") + "}");
  }
  function customConverter(columns, f) {
    var object = objectConverter(columns);
    return function(row, i) {
      return f(object(row), i, columns);
    };
  }
  function inferColumns(rows) {
    var columnSet = /* @__PURE__ */ Object.create(null), columns = [];
    rows.forEach(function(row) {
      for (var column in row) {
        if (!(column in columnSet)) {
          columns.push(columnSet[column] = column);
        }
      }
    });
    return columns;
  }
  function pad(value, width) {
    var s2 = value + "", length3 = s2.length;
    return length3 < width ? new Array(width - length3 + 1).join(0) + s2 : s2;
  }
  function formatYear(year) {
    return year < 0 ? "-" + pad(-year, 6) : year > 9999 ? "+" + pad(year, 6) : pad(year, 4);
  }
  function formatDate(date2) {
    var hours = date2.getUTCHours(), minutes = date2.getUTCMinutes(), seconds2 = date2.getUTCSeconds(), milliseconds2 = date2.getUTCMilliseconds();
    return isNaN(date2) ? "Invalid Date" : formatYear(date2.getUTCFullYear(), 4) + "-" + pad(date2.getUTCMonth() + 1, 2) + "-" + pad(date2.getUTCDate(), 2) + (milliseconds2 ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds2, 2) + "." + pad(milliseconds2, 3) + "Z" : seconds2 ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds2, 2) + "Z" : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z" : "");
  }
  function dsv_default(delimiter) {
    var reFormat = new RegExp('["' + delimiter + "\n\r]"), DELIMITER = delimiter.charCodeAt(0);
    function parse3(text3, f) {
      var convert, columns, rows = parseRows(text3, function(row, i) {
        if (convert) return convert(row, i - 1);
        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
      });
      rows.columns = columns || [];
      return rows;
    }
    function parseRows(text3, f) {
      var rows = [], N = text3.length, I = 0, n = 0, t, eof = N <= 0, eol = false;
      if (text3.charCodeAt(N - 1) === NEWLINE) --N;
      if (text3.charCodeAt(N - 1) === RETURN) --N;
      function token() {
        if (eof) return EOF;
        if (eol) return eol = false, EOL;
        var i, j = I, c4;
        if (text3.charCodeAt(j) === QUOTE) {
          while (I++ < N && text3.charCodeAt(I) !== QUOTE || text3.charCodeAt(++I) === QUOTE) ;
          if ((i = I) >= N) eof = true;
          else if ((c4 = text3.charCodeAt(I++)) === NEWLINE) eol = true;
          else if (c4 === RETURN) {
            eol = true;
            if (text3.charCodeAt(I) === NEWLINE) ++I;
          }
          return text3.slice(j + 1, i - 1).replace(/""/g, '"');
        }
        while (I < N) {
          if ((c4 = text3.charCodeAt(i = I++)) === NEWLINE) eol = true;
          else if (c4 === RETURN) {
            eol = true;
            if (text3.charCodeAt(I) === NEWLINE) ++I;
          } else if (c4 !== DELIMITER) continue;
          return text3.slice(j, i);
        }
        return eof = true, text3.slice(j, N);
      }
      while ((t = token()) !== EOF) {
        var row = [];
        while (t !== EOL && t !== EOF) row.push(t), t = token();
        if (f && (row = f(row, n++)) == null) continue;
        rows.push(row);
      }
      return rows;
    }
    function preformatBody(rows, columns) {
      return rows.map(function(row) {
        return columns.map(function(column) {
          return formatValue(row[column]);
        }).join(delimiter);
      });
    }
    function format2(rows, columns) {
      if (columns == null) columns = inferColumns(rows);
      return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
    }
    function formatBody(rows, columns) {
      if (columns == null) columns = inferColumns(rows);
      return preformatBody(rows, columns).join("\n");
    }
    function formatRows(rows) {
      return rows.map(formatRow).join("\n");
    }
    function formatRow(row) {
      return row.map(formatValue).join(delimiter);
    }
    function formatValue(value) {
      return value == null ? "" : value instanceof Date ? formatDate(value) : reFormat.test(value += "") ? '"' + value.replace(/"/g, '""') + '"' : value;
    }
    return {
      parse: parse3,
      parseRows,
      format: format2,
      formatBody,
      formatRows,
      formatRow,
      formatValue
    };
  }

  // node_modules/d3-dsv/src/csv.js
  var csv = dsv_default(",");
  var csvParse = csv.parse;
  var csvParseRows = csv.parseRows;
  var csvFormat = csv.format;
  var csvFormatBody = csv.formatBody;
  var csvFormatRows = csv.formatRows;
  var csvFormatRow = csv.formatRow;
  var csvFormatValue = csv.formatValue;

  // node_modules/d3-dsv/src/tsv.js
  var tsv = dsv_default("	");
  var tsvParse = tsv.parse;
  var tsvParseRows = tsv.parseRows;
  var tsvFormat = tsv.format;
  var tsvFormatBody = tsv.formatBody;
  var tsvFormatRows = tsv.formatRows;
  var tsvFormatRow = tsv.formatRow;
  var tsvFormatValue = tsv.formatValue;

  // node_modules/d3-fetch/src/text.js
  function responseText(response) {
    if (!response.ok) throw new Error(response.status + " " + response.statusText);
    return response.text();
  }
  function text_default3(input, init2) {
    return fetch(input, init2).then(responseText);
  }

  // node_modules/d3-fetch/src/dsv.js
  function dsvParse(parse3) {
    return function(input, init2, row) {
      if (arguments.length === 2 && typeof init2 === "function") row = init2, init2 = void 0;
      return text_default3(input, init2).then(function(response) {
        return parse3(response, row);
      });
    };
  }
  function dsv(delimiter, input, init2, row) {
    if (arguments.length === 3 && typeof init2 === "function") row = init2, init2 = void 0;
    var format2 = dsv_default(delimiter);
    return text_default3(input, init2).then(function(response) {
      return format2.parse(response, row);
    });
  }
  var csv2 = dsvParse(csvParse);
  var tsv2 = dsvParse(tsvParse);

  // node_modules/d3-fetch/src/json.js
  function responseJson(response) {
    if (!response.ok) throw new Error(response.status + " " + response.statusText);
    if (response.status === 204 || response.status === 205) return;
    return response.json();
  }
  function json_default(input, init2) {
    return fetch(input, init2).then(responseJson);
  }

  // node_modules/d3-format/src/formatDecimal.js
  function formatDecimal_default(x) {
    return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString("en").replace(/,/g, "") : x.toString(10);
  }
  function formatDecimalParts(x, p) {
    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null;
    var i, coefficient = x.slice(0, i);
    return [
      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
      +x.slice(i + 1)
    ];
  }

  // node_modules/d3-format/src/exponent.js
  function exponent_default(x) {
    return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;
  }

  // node_modules/d3-format/src/formatGroup.js
  function formatGroup_default(grouping, thousands) {
    return function(value, width) {
      var i = value.length, t = [], j = 0, g = grouping[0], length3 = 0;
      while (i > 0 && g > 0) {
        if (length3 + g + 1 > width) g = Math.max(1, width - length3);
        t.push(value.substring(i -= g, i + g));
        if ((length3 += g + 1) > width) break;
        g = grouping[j = (j + 1) % grouping.length];
      }
      return t.reverse().join(thousands);
    };
  }

  // node_modules/d3-format/src/formatNumerals.js
  function formatNumerals_default(numerals) {
    return function(value) {
      return value.replace(/[0-9]/g, function(i) {
        return numerals[+i];
      });
    };
  }

  // node_modules/d3-format/src/formatSpecifier.js
  var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
  function formatSpecifier(specifier) {
    if (!(match5 = re.exec(specifier))) throw new Error("invalid format: " + specifier);
    var match5;
    return new FormatSpecifier({
      fill: match5[1],
      align: match5[2],
      sign: match5[3],
      symbol: match5[4],
      zero: match5[5],
      width: match5[6],
      comma: match5[7],
      precision: match5[8] && match5[8].slice(1),
      trim: match5[9],
      type: match5[10]
    });
  }
  formatSpecifier.prototype = FormatSpecifier.prototype;
  function FormatSpecifier(specifier) {
    this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
    this.align = specifier.align === void 0 ? ">" : specifier.align + "";
    this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
    this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
    this.zero = !!specifier.zero;
    this.width = specifier.width === void 0 ? void 0 : +specifier.width;
    this.comma = !!specifier.comma;
    this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
    this.trim = !!specifier.trim;
    this.type = specifier.type === void 0 ? "" : specifier.type + "";
  }
  FormatSpecifier.prototype.toString = function() {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
  };

  // node_modules/d3-format/src/formatTrim.js
  function formatTrim_default(s2) {
    out: for (var n = s2.length, i = 1, i0 = -1, i1; i < n; ++i) {
      switch (s2[i]) {
        case ".":
          i0 = i1 = i;
          break;
        case "0":
          if (i0 === 0) i0 = i;
          i1 = i;
          break;
        default:
          if (!+s2[i]) break out;
          if (i0 > 0) i0 = 0;
          break;
      }
    }
    return i0 > 0 ? s2.slice(0, i0) + s2.slice(i1 + 1) : s2;
  }

  // node_modules/d3-format/src/formatPrefixAuto.js
  var prefixExponent;
  function formatPrefixAuto_default(x, p) {
    var d = formatDecimalParts(x, p);
    if (!d) return x + "";
    var coefficient = d[0], exponent = d[1], i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1, n = coefficient.length;
    return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimalParts(x, Math.max(0, p + i - 1))[0];
  }

  // node_modules/d3-format/src/formatRounded.js
  function formatRounded_default(x, p) {
    var d = formatDecimalParts(x, p);
    if (!d) return x + "";
    var coefficient = d[0], exponent = d[1];
    return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
  }

  // node_modules/d3-format/src/formatTypes.js
  var formatTypes_default = {
    "%": (x, p) => (x * 100).toFixed(p),
    "b": (x) => Math.round(x).toString(2),
    "c": (x) => x + "",
    "d": formatDecimal_default,
    "e": (x, p) => x.toExponential(p),
    "f": (x, p) => x.toFixed(p),
    "g": (x, p) => x.toPrecision(p),
    "o": (x) => Math.round(x).toString(8),
    "p": (x, p) => formatRounded_default(x * 100, p),
    "r": formatRounded_default,
    "s": formatPrefixAuto_default,
    "X": (x) => Math.round(x).toString(16).toUpperCase(),
    "x": (x) => Math.round(x).toString(16)
  };

  // node_modules/d3-format/src/identity.js
  function identity_default(x) {
    return x;
  }

  // node_modules/d3-format/src/locale.js
  var map = Array.prototype.map;
  var prefixes = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
  function locale_default(locale3) {
    var group = locale3.grouping === void 0 || locale3.thousands === void 0 ? identity_default : formatGroup_default(map.call(locale3.grouping, Number), locale3.thousands + ""), currencyPrefix = locale3.currency === void 0 ? "" : locale3.currency[0] + "", currencySuffix = locale3.currency === void 0 ? "" : locale3.currency[1] + "", decimal = locale3.decimal === void 0 ? "." : locale3.decimal + "", numerals = locale3.numerals === void 0 ? identity_default : formatNumerals_default(map.call(locale3.numerals, String)), percent = locale3.percent === void 0 ? "%" : locale3.percent + "", minus = locale3.minus === void 0 ? "\u2212" : locale3.minus + "", nan = locale3.nan === void 0 ? "NaN" : locale3.nan + "";
    function newFormat(specifier) {
      specifier = formatSpecifier(specifier);
      var fill3 = specifier.fill, align = specifier.align, sign = specifier.sign, symbol3 = specifier.symbol, zero3 = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim3 = specifier.trim, type2 = specifier.type;
      if (type2 === "n") comma = true, type2 = "g";
      else if (!formatTypes_default[type2]) precision === void 0 && (precision = 12), trim3 = true, type2 = "g";
      if (zero3 || fill3 === "0" && align === "=") zero3 = true, fill3 = "0", align = "=";
      var prefix = symbol3 === "$" ? currencyPrefix : symbol3 === "#" && /[boxX]/.test(type2) ? "0" + type2.toLowerCase() : "", suffix = symbol3 === "$" ? currencySuffix : /[%p]/.test(type2) ? percent : "";
      var formatType = formatTypes_default[type2], maybeSuffix = /[defgprs%]/.test(type2);
      precision = precision === void 0 ? 6 : /[gprs]/.test(type2) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
      function format2(value) {
        var valuePrefix = prefix, valueSuffix = suffix, i, n, c4;
        if (type2 === "c") {
          valueSuffix = formatType(value) + valueSuffix;
          value = "";
        } else {
          value = +value;
          var valueNegative = value < 0 || 1 / value < 0;
          value = isNaN(value) ? nan : formatType(Math.abs(value), precision);
          if (trim3) value = formatTrim_default(value);
          if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;
          valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
          valueSuffix = (type2 === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");
          if (maybeSuffix) {
            i = -1, n = value.length;
            while (++i < n) {
              if (c4 = value.charCodeAt(i), 48 > c4 || c4 > 57) {
                valueSuffix = (c4 === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
                value = value.slice(0, i);
                break;
              }
            }
          }
        }
        if (comma && !zero3) value = group(value, Infinity);
        var length3 = valuePrefix.length + value.length + valueSuffix.length, padding = length3 < width ? new Array(width - length3 + 1).join(fill3) : "";
        if (comma && zero3) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
        switch (align) {
          case "<":
            value = valuePrefix + value + valueSuffix + padding;
            break;
          case "=":
            value = valuePrefix + padding + value + valueSuffix;
            break;
          case "^":
            value = padding.slice(0, length3 = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length3);
            break;
          default:
            value = padding + valuePrefix + value + valueSuffix;
            break;
        }
        return numerals(value);
      }
      format2.toString = function() {
        return specifier + "";
      };
      return format2;
    }
    function formatPrefix2(specifier, value) {
      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e = Math.max(-8, Math.min(8, Math.floor(exponent_default(value) / 3))) * 3, k2 = Math.pow(10, -e), prefix = prefixes[8 + e / 3];
      return function(value2) {
        return f(k2 * value2) + prefix;
      };
    }
    return {
      format: newFormat,
      formatPrefix: formatPrefix2
    };
  }

  // node_modules/d3-format/src/defaultLocale.js
  var locale;
  var format;
  var formatPrefix;
  defaultLocale({
    thousands: ",",
    grouping: [3],
    currency: ["$", ""]
  });
  function defaultLocale(definition) {
    locale = locale_default(definition);
    format = locale.format;
    formatPrefix = locale.formatPrefix;
    return locale;
  }

  // node_modules/d3-format/src/precisionFixed.js
  function precisionFixed_default(step) {
    return Math.max(0, -exponent_default(Math.abs(step)));
  }

  // node_modules/d3-format/src/precisionPrefix.js
  function precisionPrefix_default(step, value) {
    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent_default(value) / 3))) * 3 - exponent_default(Math.abs(step)));
  }

  // node_modules/d3-format/src/precisionRound.js
  function precisionRound_default(step, max8) {
    step = Math.abs(step), max8 = Math.abs(max8) - step;
    return Math.max(0, exponent_default(max8) - exponent_default(step)) + 1;
  }

  // node_modules/d3-scale/src/init.js
  function initRange(domain, range3) {
    switch (arguments.length) {
      case 0:
        break;
      case 1:
        this.range(domain);
        break;
      default:
        this.range(range3).domain(domain);
        break;
    }
    return this;
  }
  function initInterpolator(domain, interpolator) {
    switch (arguments.length) {
      case 0:
        break;
      case 1: {
        if (typeof domain === "function") this.interpolator(domain);
        else this.range(domain);
        break;
      }
      default: {
        this.domain(domain);
        if (typeof interpolator === "function") this.interpolator(interpolator);
        else this.range(interpolator);
        break;
      }
    }
    return this;
  }

  // node_modules/d3-scale/src/ordinal.js
  var implicit = Symbol("implicit");
  function ordinal() {
    var index = new InternMap(), domain = [], range3 = [], unknown = implicit;
    function scale3(d) {
      let i = index.get(d);
      if (i === void 0) {
        if (unknown !== implicit) return unknown;
        index.set(d, i = domain.push(d) - 1);
      }
      return range3[i % range3.length];
    }
    scale3.domain = function(_) {
      if (!arguments.length) return domain.slice();
      domain = [], index = new InternMap();
      for (const value of _) {
        if (index.has(value)) continue;
        index.set(value, domain.push(value) - 1);
      }
      return scale3;
    };
    scale3.range = function(_) {
      return arguments.length ? (range3 = Array.from(_), scale3) : range3.slice();
    };
    scale3.unknown = function(_) {
      return arguments.length ? (unknown = _, scale3) : unknown;
    };
    scale3.copy = function() {
      return ordinal(domain, range3).unknown(unknown);
    };
    initRange.apply(scale3, arguments);
    return scale3;
  }

  // node_modules/d3-scale/src/band.js
  function band() {
    var scale3 = ordinal().unknown(void 0), domain = scale3.domain, ordinalRange3 = scale3.range, r0 = 0, r1 = 1, step, bandwidth, round2 = false, paddingInner = 0, paddingOuter = 0, align = 0.5;
    delete scale3.unknown;
    function rescale() {
      var n = domain().length, reverse2 = r1 < r0, start3 = reverse2 ? r1 : r0, stop = reverse2 ? r0 : r1;
      step = (stop - start3) / Math.max(1, n - paddingInner + paddingOuter * 2);
      if (round2) step = Math.floor(step);
      start3 += (stop - start3 - step * (n - paddingInner)) * align;
      bandwidth = step * (1 - paddingInner);
      if (round2) start3 = Math.round(start3), bandwidth = Math.round(bandwidth);
      var values5 = range(n).map(function(i) {
        return start3 + step * i;
      });
      return ordinalRange3(reverse2 ? values5.reverse() : values5);
    }
    scale3.domain = function(_) {
      return arguments.length ? (domain(_), rescale()) : domain();
    };
    scale3.range = function(_) {
      return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
    };
    scale3.rangeRound = function(_) {
      return [r0, r1] = _, r0 = +r0, r1 = +r1, round2 = true, rescale();
    };
    scale3.bandwidth = function() {
      return bandwidth;
    };
    scale3.step = function() {
      return step;
    };
    scale3.round = function(_) {
      return arguments.length ? (round2 = !!_, rescale()) : round2;
    };
    scale3.padding = function(_) {
      return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
    };
    scale3.paddingInner = function(_) {
      return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
    };
    scale3.paddingOuter = function(_) {
      return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
    };
    scale3.align = function(_) {
      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
    };
    scale3.copy = function() {
      return band(domain(), [r0, r1]).round(round2).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
    };
    return initRange.apply(rescale(), arguments);
  }
  function pointish(scale3) {
    var copy3 = scale3.copy;
    scale3.padding = scale3.paddingOuter;
    delete scale3.paddingInner;
    delete scale3.paddingOuter;
    scale3.copy = function() {
      return pointish(copy3());
    };
    return scale3;
  }
  function point() {
    return pointish(band.apply(null, arguments).paddingInner(1));
  }

  // node_modules/d3-scale/src/constant.js
  function constants(x) {
    return function() {
      return x;
    };
  }

  // node_modules/d3-scale/src/number.js
  function number3(x) {
    return +x;
  }

  // node_modules/d3-scale/src/continuous.js
  var unit = [0, 1];
  function identity2(x) {
    return x;
  }
  function normalize(a2, b) {
    return (b -= a2 = +a2) ? function(x) {
      return (x - a2) / b;
    } : constants(isNaN(b) ? NaN : 0.5);
  }
  function clamper(a2, b) {
    var t;
    if (a2 > b) t = a2, a2 = b, b = t;
    return function(x) {
      return Math.max(a2, Math.min(b, x));
    };
  }
  function bimap(domain, range3, interpolate) {
    var d0 = domain[0], d1 = domain[1], r0 = range3[0], r1 = range3[1];
    if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
    else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
    return function(x) {
      return r0(d0(x));
    };
  }
  function polymap(domain, range3, interpolate) {
    var j = Math.min(domain.length, range3.length) - 1, d = new Array(j), r = new Array(j), i = -1;
    if (domain[j] < domain[0]) {
      domain = domain.slice().reverse();
      range3 = range3.slice().reverse();
    }
    while (++i < j) {
      d[i] = normalize(domain[i], domain[i + 1]);
      r[i] = interpolate(range3[i], range3[i + 1]);
    }
    return function(x) {
      var i2 = bisect_default(domain, x, 1, j) - 1;
      return r[i2](d[i2](x));
    };
  }
  function copy(source, target) {
    return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
  }
  function transformer() {
    var domain = unit, range3 = unit, interpolate = value_default, transform2, untransform, unknown, clamp = identity2, piecewise2, output, input;
    function rescale() {
      var n = Math.min(domain.length, range3.length);
      if (clamp !== identity2) clamp = clamper(domain[0], domain[n - 1]);
      piecewise2 = n > 2 ? polymap : bimap;
      output = input = null;
      return scale3;
    }
    function scale3(x) {
      return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise2(domain.map(transform2), range3, interpolate)))(transform2(clamp(x)));
    }
    scale3.invert = function(y) {
      return clamp(untransform((input || (input = piecewise2(range3, domain.map(transform2), number_default)))(y)));
    };
    scale3.domain = function(_) {
      return arguments.length ? (domain = Array.from(_, number3), rescale()) : domain.slice();
    };
    scale3.range = function(_) {
      return arguments.length ? (range3 = Array.from(_), rescale()) : range3.slice();
    };
    scale3.rangeRound = function(_) {
      return range3 = Array.from(_), interpolate = round_default, rescale();
    };
    scale3.clamp = function(_) {
      return arguments.length ? (clamp = _ ? true : identity2, rescale()) : clamp !== identity2;
    };
    scale3.interpolate = function(_) {
      return arguments.length ? (interpolate = _, rescale()) : interpolate;
    };
    scale3.unknown = function(_) {
      return arguments.length ? (unknown = _, scale3) : unknown;
    };
    return function(t, u) {
      transform2 = t, untransform = u;
      return rescale();
    };
  }
  function continuous() {
    return transformer()(identity2, identity2);
  }

  // node_modules/d3-scale/src/tickFormat.js
  function tickFormat(start3, stop, count, specifier) {
    var step = tickStep(start3, stop, count), precision;
    specifier = formatSpecifier(specifier == null ? ",f" : specifier);
    switch (specifier.type) {
      case "s": {
        var value = Math.max(Math.abs(start3), Math.abs(stop));
        if (specifier.precision == null && !isNaN(precision = precisionPrefix_default(step, value))) specifier.precision = precision;
        return formatPrefix(specifier, value);
      }
      case "":
      case "e":
      case "g":
      case "p":
      case "r": {
        if (specifier.precision == null && !isNaN(precision = precisionRound_default(step, Math.max(Math.abs(start3), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
        break;
      }
      case "f":
      case "%": {
        if (specifier.precision == null && !isNaN(precision = precisionFixed_default(step))) specifier.precision = precision - (specifier.type === "%") * 2;
        break;
      }
    }
    return format(specifier);
  }

  // node_modules/d3-scale/src/linear.js
  function linearish(scale3) {
    var domain = scale3.domain;
    scale3.ticks = function(count) {
      var d = domain();
      return ticks(d[0], d[d.length - 1], count == null ? 10 : count);
    };
    scale3.tickFormat = function(count, specifier) {
      var d = domain();
      return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
    };
    scale3.nice = function(count) {
      if (count == null) count = 10;
      var d = domain();
      var i0 = 0;
      var i1 = d.length - 1;
      var start3 = d[i0];
      var stop = d[i1];
      var prestep;
      var step;
      var maxIter = 10;
      if (stop < start3) {
        step = start3, start3 = stop, stop = step;
        step = i0, i0 = i1, i1 = step;
      }
      while (maxIter-- > 0) {
        step = tickIncrement(start3, stop, count);
        if (step === prestep) {
          d[i0] = start3;
          d[i1] = stop;
          return domain(d);
        } else if (step > 0) {
          start3 = Math.floor(start3 / step) * step;
          stop = Math.ceil(stop / step) * step;
        } else if (step < 0) {
          start3 = Math.ceil(start3 * step) / step;
          stop = Math.floor(stop * step) / step;
        } else {
          break;
        }
        prestep = step;
      }
      return scale3;
    };
    return scale3;
  }
  function linear2() {
    var scale3 = continuous();
    scale3.copy = function() {
      return copy(scale3, linear2());
    };
    initRange.apply(scale3, arguments);
    return linearish(scale3);
  }

  // node_modules/d3-scale/src/identity.js
  function identity3(domain) {
    var unknown;
    function scale3(x) {
      return x == null || isNaN(x = +x) ? unknown : x;
    }
    scale3.invert = scale3;
    scale3.domain = scale3.range = function(_) {
      return arguments.length ? (domain = Array.from(_, number3), scale3) : domain.slice();
    };
    scale3.unknown = function(_) {
      return arguments.length ? (unknown = _, scale3) : unknown;
    };
    scale3.copy = function() {
      return identity3(domain).unknown(unknown);
    };
    domain = arguments.length ? Array.from(domain, number3) : [0, 1];
    return linearish(scale3);
  }

  // node_modules/d3-scale/src/nice.js
  function nice(domain, interval2) {
    domain = domain.slice();
    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], t;
    if (x1 < x0) {
      t = i0, i0 = i1, i1 = t;
      t = x0, x0 = x1, x1 = t;
    }
    domain[i0] = interval2.floor(x0);
    domain[i1] = interval2.ceil(x1);
    return domain;
  }

  // node_modules/d3-scale/src/log.js
  function transformLog(x) {
    return Math.log(x);
  }
  function transformExp(x) {
    return Math.exp(x);
  }
  function transformLogn(x) {
    return -Math.log(-x);
  }
  function transformExpn(x) {
    return -Math.exp(-x);
  }
  function pow10(x) {
    return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
  }
  function powp(base) {
    return base === 10 ? pow10 : base === Math.E ? Math.exp : (x) => Math.pow(base, x);
  }
  function logp(base) {
    return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), (x) => Math.log(x) / base);
  }
  function reflect(f) {
    return (x, k2) => -f(-x, k2);
  }
  function loggish(transform2) {
    const scale3 = transform2(transformLog, transformExp);
    const domain = scale3.domain;
    let base = 10;
    let logs;
    let pows;
    function rescale() {
      logs = logp(base), pows = powp(base);
      if (domain()[0] < 0) {
        logs = reflect(logs), pows = reflect(pows);
        transform2(transformLogn, transformExpn);
      } else {
        transform2(transformLog, transformExp);
      }
      return scale3;
    }
    scale3.base = function(_) {
      return arguments.length ? (base = +_, rescale()) : base;
    };
    scale3.domain = function(_) {
      return arguments.length ? (domain(_), rescale()) : domain();
    };
    scale3.ticks = (count) => {
      const d = domain();
      let u = d[0];
      let v = d[d.length - 1];
      const r = v < u;
      if (r) [u, v] = [v, u];
      let i = logs(u);
      let j = logs(v);
      let k2;
      let t;
      const n = count == null ? 10 : +count;
      let z = [];
      if (!(base % 1) && j - i < n) {
        i = Math.floor(i), j = Math.ceil(j);
        if (u > 0) for (; i <= j; ++i) {
          for (k2 = 1; k2 < base; ++k2) {
            t = i < 0 ? k2 / pows(-i) : k2 * pows(i);
            if (t < u) continue;
            if (t > v) break;
            z.push(t);
          }
        }
        else for (; i <= j; ++i) {
          for (k2 = base - 1; k2 >= 1; --k2) {
            t = i > 0 ? k2 / pows(-i) : k2 * pows(i);
            if (t < u) continue;
            if (t > v) break;
            z.push(t);
          }
        }
        if (z.length * 2 < n) z = ticks(u, v, n);
      } else {
        z = ticks(i, j, Math.min(j - i, n)).map(pows);
      }
      return r ? z.reverse() : z;
    };
    scale3.tickFormat = (count, specifier) => {
      if (count == null) count = 10;
      if (specifier == null) specifier = base === 10 ? "s" : ",";
      if (typeof specifier !== "function") {
        if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;
        specifier = format(specifier);
      }
      if (count === Infinity) return specifier;
      const k2 = Math.max(1, base * count / scale3.ticks().length);
      return (d) => {
        let i = d / pows(Math.round(logs(d)));
        if (i * base < base - 0.5) i *= base;
        return i <= k2 ? specifier(d) : "";
      };
    };
    scale3.nice = () => {
      return domain(nice(domain(), {
        floor: (x) => pows(Math.floor(logs(x))),
        ceil: (x) => pows(Math.ceil(logs(x)))
      }));
    };
    return scale3;
  }
  function log() {
    const scale3 = loggish(transformer()).domain([1, 10]);
    scale3.copy = () => copy(scale3, log()).base(scale3.base());
    initRange.apply(scale3, arguments);
    return scale3;
  }

  // node_modules/d3-scale/src/symlog.js
  function transformSymlog(c4) {
    return function(x) {
      return Math.sign(x) * Math.log1p(Math.abs(x / c4));
    };
  }
  function transformSymexp(c4) {
    return function(x) {
      return Math.sign(x) * Math.expm1(Math.abs(x)) * c4;
    };
  }
  function symlogish(transform2) {
    var c4 = 1, scale3 = transform2(transformSymlog(c4), transformSymexp(c4));
    scale3.constant = function(_) {
      return arguments.length ? transform2(transformSymlog(c4 = +_), transformSymexp(c4)) : c4;
    };
    return linearish(scale3);
  }
  function symlog() {
    var scale3 = symlogish(transformer());
    scale3.copy = function() {
      return copy(scale3, symlog()).constant(scale3.constant());
    };
    return initRange.apply(scale3, arguments);
  }

  // node_modules/d3-scale/src/pow.js
  function transformPow(exponent) {
    return function(x) {
      return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
    };
  }
  function transformSqrt(x) {
    return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
  }
  function transformSquare(x) {
    return x < 0 ? -x * x : x * x;
  }
  function powish(transform2) {
    var scale3 = transform2(identity2, identity2), exponent = 1;
    function rescale() {
      return exponent === 1 ? transform2(identity2, identity2) : exponent === 0.5 ? transform2(transformSqrt, transformSquare) : transform2(transformPow(exponent), transformPow(1 / exponent));
    }
    scale3.exponent = function(_) {
      return arguments.length ? (exponent = +_, rescale()) : exponent;
    };
    return linearish(scale3);
  }
  function pow() {
    var scale3 = powish(transformer());
    scale3.copy = function() {
      return copy(scale3, pow()).exponent(scale3.exponent());
    };
    initRange.apply(scale3, arguments);
    return scale3;
  }

  // node_modules/d3-scale/src/quantile.js
  function quantile2() {
    var domain = [], range3 = [], thresholds = [], unknown;
    function rescale() {
      var i = 0, n = Math.max(1, range3.length);
      thresholds = new Array(n - 1);
      while (++i < n) thresholds[i - 1] = quantileSorted(domain, i / n);
      return scale3;
    }
    function scale3(x) {
      return x == null || isNaN(x = +x) ? unknown : range3[bisect_default(thresholds, x)];
    }
    scale3.invertExtent = function(y) {
      var i = range3.indexOf(y);
      return i < 0 ? [NaN, NaN] : [
        i > 0 ? thresholds[i - 1] : domain[0],
        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
      ];
    };
    scale3.domain = function(_) {
      if (!arguments.length) return domain.slice();
      domain = [];
      for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
      domain.sort(ascending2);
      return rescale();
    };
    scale3.range = function(_) {
      return arguments.length ? (range3 = Array.from(_), rescale()) : range3.slice();
    };
    scale3.unknown = function(_) {
      return arguments.length ? (unknown = _, scale3) : unknown;
    };
    scale3.quantiles = function() {
      return thresholds.slice();
    };
    scale3.copy = function() {
      return quantile2().domain(domain).range(range3).unknown(unknown);
    };
    return initRange.apply(scale3, arguments);
  }

  // node_modules/d3-scale/src/threshold.js
  function threshold() {
    var domain = [0.5], range3 = [0, 1], unknown, n = 1;
    function scale3(x) {
      return x != null && x <= x ? range3[bisect_default(domain, x, 0, n)] : unknown;
    }
    scale3.domain = function(_) {
      return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range3.length - 1), scale3) : domain.slice();
    };
    scale3.range = function(_) {
      return arguments.length ? (range3 = Array.from(_), n = Math.min(domain.length, range3.length - 1), scale3) : range3.slice();
    };
    scale3.invertExtent = function(y) {
      var i = range3.indexOf(y);
      return [domain[i - 1], domain[i]];
    };
    scale3.unknown = function(_) {
      return arguments.length ? (unknown = _, scale3) : unknown;
    };
    scale3.copy = function() {
      return threshold().domain(domain).range(range3).unknown(unknown);
    };
    return initRange.apply(scale3, arguments);
  }

  // node_modules/d3-time/src/interval.js
  var t02 = /* @__PURE__ */ new Date();
  var t12 = /* @__PURE__ */ new Date();
  function timeInterval(floori, offseti, count, field) {
    function interval2(date2) {
      return floori(date2 = arguments.length === 0 ? /* @__PURE__ */ new Date() : /* @__PURE__ */ new Date(+date2)), date2;
    }
    interval2.floor = (date2) => {
      return floori(date2 = /* @__PURE__ */ new Date(+date2)), date2;
    };
    interval2.ceil = (date2) => {
      return floori(date2 = new Date(date2 - 1)), offseti(date2, 1), floori(date2), date2;
    };
    interval2.round = (date2) => {
      const d0 = interval2(date2), d1 = interval2.ceil(date2);
      return date2 - d0 < d1 - date2 ? d0 : d1;
    };
    interval2.offset = (date2, step) => {
      return offseti(date2 = /* @__PURE__ */ new Date(+date2), step == null ? 1 : Math.floor(step)), date2;
    };
    interval2.range = (start3, stop, step) => {
      const range3 = [];
      start3 = interval2.ceil(start3);
      step = step == null ? 1 : Math.floor(step);
      if (!(start3 < stop) || !(step > 0)) return range3;
      let previous;
      do
        range3.push(previous = /* @__PURE__ */ new Date(+start3)), offseti(start3, step), floori(start3);
      while (previous < start3 && start3 < stop);
      return range3;
    };
    interval2.filter = (test5) => {
      return timeInterval((date2) => {
        if (date2 >= date2) while (floori(date2), !test5(date2)) date2.setTime(date2 - 1);
      }, (date2, step) => {
        if (date2 >= date2) {
          if (step < 0) while (++step <= 0) {
            while (offseti(date2, -1), !test5(date2)) {
            }
          }
          else while (--step >= 0) {
            while (offseti(date2, 1), !test5(date2)) {
            }
          }
        }
      });
    };
    if (count) {
      interval2.count = (start3, end2) => {
        t02.setTime(+start3), t12.setTime(+end2);
        floori(t02), floori(t12);
        return Math.floor(count(t02, t12));
      };
      interval2.every = (step) => {
        step = Math.floor(step);
        return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval2 : interval2.filter(field ? (d) => field(d) % step === 0 : (d) => interval2.count(0, d) % step === 0);
      };
    }
    return interval2;
  }

  // node_modules/d3-time/src/millisecond.js
  var millisecond = timeInterval(() => {
  }, (date2, step) => {
    date2.setTime(+date2 + step);
  }, (start3, end2) => {
    return end2 - start3;
  });
  millisecond.every = (k2) => {
    k2 = Math.floor(k2);
    if (!isFinite(k2) || !(k2 > 0)) return null;
    if (!(k2 > 1)) return millisecond;
    return timeInterval((date2) => {
      date2.setTime(Math.floor(date2 / k2) * k2);
    }, (date2, step) => {
      date2.setTime(+date2 + step * k2);
    }, (start3, end2) => {
      return (end2 - start3) / k2;
    });
  };
  var milliseconds = millisecond.range;

  // node_modules/d3-time/src/duration.js
  var durationSecond = 1e3;
  var durationMinute = durationSecond * 60;
  var durationHour = durationMinute * 60;
  var durationDay = durationHour * 24;
  var durationWeek = durationDay * 7;
  var durationMonth = durationDay * 30;
  var durationYear = durationDay * 365;

  // node_modules/d3-time/src/second.js
  var second = timeInterval((date2) => {
    date2.setTime(date2 - date2.getMilliseconds());
  }, (date2, step) => {
    date2.setTime(+date2 + step * durationSecond);
  }, (start3, end2) => {
    return (end2 - start3) / durationSecond;
  }, (date2) => {
    return date2.getUTCSeconds();
  });
  var seconds = second.range;

  // node_modules/d3-time/src/minute.js
  var timeMinute = timeInterval((date2) => {
    date2.setTime(date2 - date2.getMilliseconds() - date2.getSeconds() * durationSecond);
  }, (date2, step) => {
    date2.setTime(+date2 + step * durationMinute);
  }, (start3, end2) => {
    return (end2 - start3) / durationMinute;
  }, (date2) => {
    return date2.getMinutes();
  });
  var timeMinutes = timeMinute.range;
  var utcMinute = timeInterval((date2) => {
    date2.setUTCSeconds(0, 0);
  }, (date2, step) => {
    date2.setTime(+date2 + step * durationMinute);
  }, (start3, end2) => {
    return (end2 - start3) / durationMinute;
  }, (date2) => {
    return date2.getUTCMinutes();
  });
  var utcMinutes = utcMinute.range;

  // node_modules/d3-time/src/hour.js
  var timeHour = timeInterval((date2) => {
    date2.setTime(date2 - date2.getMilliseconds() - date2.getSeconds() * durationSecond - date2.getMinutes() * durationMinute);
  }, (date2, step) => {
    date2.setTime(+date2 + step * durationHour);
  }, (start3, end2) => {
    return (end2 - start3) / durationHour;
  }, (date2) => {
    return date2.getHours();
  });
  var timeHours = timeHour.range;
  var utcHour = timeInterval((date2) => {
    date2.setUTCMinutes(0, 0, 0);
  }, (date2, step) => {
    date2.setTime(+date2 + step * durationHour);
  }, (start3, end2) => {
    return (end2 - start3) / durationHour;
  }, (date2) => {
    return date2.getUTCHours();
  });
  var utcHours = utcHour.range;

  // node_modules/d3-time/src/day.js
  var timeDay = timeInterval(
    (date2) => date2.setHours(0, 0, 0, 0),
    (date2, step) => date2.setDate(date2.getDate() + step),
    (start3, end2) => (end2 - start3 - (end2.getTimezoneOffset() - start3.getTimezoneOffset()) * durationMinute) / durationDay,
    (date2) => date2.getDate() - 1
  );
  var timeDays = timeDay.range;
  var utcDay = timeInterval((date2) => {
    date2.setUTCHours(0, 0, 0, 0);
  }, (date2, step) => {
    date2.setUTCDate(date2.getUTCDate() + step);
  }, (start3, end2) => {
    return (end2 - start3) / durationDay;
  }, (date2) => {
    return date2.getUTCDate() - 1;
  });
  var utcDays = utcDay.range;
  var unixDay = timeInterval((date2) => {
    date2.setUTCHours(0, 0, 0, 0);
  }, (date2, step) => {
    date2.setUTCDate(date2.getUTCDate() + step);
  }, (start3, end2) => {
    return (end2 - start3) / durationDay;
  }, (date2) => {
    return Math.floor(date2 / durationDay);
  });
  var unixDays = unixDay.range;

  // node_modules/d3-time/src/week.js
  function timeWeekday(i) {
    return timeInterval((date2) => {
      date2.setDate(date2.getDate() - (date2.getDay() + 7 - i) % 7);
      date2.setHours(0, 0, 0, 0);
    }, (date2, step) => {
      date2.setDate(date2.getDate() + step * 7);
    }, (start3, end2) => {
      return (end2 - start3 - (end2.getTimezoneOffset() - start3.getTimezoneOffset()) * durationMinute) / durationWeek;
    });
  }
  var timeSunday = timeWeekday(0);
  var timeMonday = timeWeekday(1);
  var timeTuesday = timeWeekday(2);
  var timeWednesday = timeWeekday(3);
  var timeThursday = timeWeekday(4);
  var timeFriday = timeWeekday(5);
  var timeSaturday = timeWeekday(6);
  var timeSundays = timeSunday.range;
  var timeMondays = timeMonday.range;
  var timeTuesdays = timeTuesday.range;
  var timeWednesdays = timeWednesday.range;
  var timeThursdays = timeThursday.range;
  var timeFridays = timeFriday.range;
  var timeSaturdays = timeSaturday.range;
  function utcWeekday(i) {
    return timeInterval((date2) => {
      date2.setUTCDate(date2.getUTCDate() - (date2.getUTCDay() + 7 - i) % 7);
      date2.setUTCHours(0, 0, 0, 0);
    }, (date2, step) => {
      date2.setUTCDate(date2.getUTCDate() + step * 7);
    }, (start3, end2) => {
      return (end2 - start3) / durationWeek;
    });
  }
  var utcSunday = utcWeekday(0);
  var utcMonday = utcWeekday(1);
  var utcTuesday = utcWeekday(2);
  var utcWednesday = utcWeekday(3);
  var utcThursday = utcWeekday(4);
  var utcFriday = utcWeekday(5);
  var utcSaturday = utcWeekday(6);
  var utcSundays = utcSunday.range;
  var utcMondays = utcMonday.range;
  var utcTuesdays = utcTuesday.range;
  var utcWednesdays = utcWednesday.range;
  var utcThursdays = utcThursday.range;
  var utcFridays = utcFriday.range;
  var utcSaturdays = utcSaturday.range;

  // node_modules/d3-time/src/month.js
  var timeMonth = timeInterval((date2) => {
    date2.setDate(1);
    date2.setHours(0, 0, 0, 0);
  }, (date2, step) => {
    date2.setMonth(date2.getMonth() + step);
  }, (start3, end2) => {
    return end2.getMonth() - start3.getMonth() + (end2.getFullYear() - start3.getFullYear()) * 12;
  }, (date2) => {
    return date2.getMonth();
  });
  var timeMonths = timeMonth.range;
  var utcMonth = timeInterval((date2) => {
    date2.setUTCDate(1);
    date2.setUTCHours(0, 0, 0, 0);
  }, (date2, step) => {
    date2.setUTCMonth(date2.getUTCMonth() + step);
  }, (start3, end2) => {
    return end2.getUTCMonth() - start3.getUTCMonth() + (end2.getUTCFullYear() - start3.getUTCFullYear()) * 12;
  }, (date2) => {
    return date2.getUTCMonth();
  });
  var utcMonths = utcMonth.range;

  // node_modules/d3-time/src/year.js
  var timeYear = timeInterval((date2) => {
    date2.setMonth(0, 1);
    date2.setHours(0, 0, 0, 0);
  }, (date2, step) => {
    date2.setFullYear(date2.getFullYear() + step);
  }, (start3, end2) => {
    return end2.getFullYear() - start3.getFullYear();
  }, (date2) => {
    return date2.getFullYear();
  });
  timeYear.every = (k2) => {
    return !isFinite(k2 = Math.floor(k2)) || !(k2 > 0) ? null : timeInterval((date2) => {
      date2.setFullYear(Math.floor(date2.getFullYear() / k2) * k2);
      date2.setMonth(0, 1);
      date2.setHours(0, 0, 0, 0);
    }, (date2, step) => {
      date2.setFullYear(date2.getFullYear() + step * k2);
    });
  };
  var timeYears = timeYear.range;
  var utcYear = timeInterval((date2) => {
    date2.setUTCMonth(0, 1);
    date2.setUTCHours(0, 0, 0, 0);
  }, (date2, step) => {
    date2.setUTCFullYear(date2.getUTCFullYear() + step);
  }, (start3, end2) => {
    return end2.getUTCFullYear() - start3.getUTCFullYear();
  }, (date2) => {
    return date2.getUTCFullYear();
  });
  utcYear.every = (k2) => {
    return !isFinite(k2 = Math.floor(k2)) || !(k2 > 0) ? null : timeInterval((date2) => {
      date2.setUTCFullYear(Math.floor(date2.getUTCFullYear() / k2) * k2);
      date2.setUTCMonth(0, 1);
      date2.setUTCHours(0, 0, 0, 0);
    }, (date2, step) => {
      date2.setUTCFullYear(date2.getUTCFullYear() + step * k2);
    });
  };
  var utcYears = utcYear.range;

  // node_modules/d3-time/src/ticks.js
  function ticker(year, month, week, day, hour, minute) {
    const tickIntervals = [
      [second, 1, durationSecond],
      [second, 5, 5 * durationSecond],
      [second, 15, 15 * durationSecond],
      [second, 30, 30 * durationSecond],
      [minute, 1, durationMinute],
      [minute, 5, 5 * durationMinute],
      [minute, 15, 15 * durationMinute],
      [minute, 30, 30 * durationMinute],
      [hour, 1, durationHour],
      [hour, 3, 3 * durationHour],
      [hour, 6, 6 * durationHour],
      [hour, 12, 12 * durationHour],
      [day, 1, durationDay],
      [day, 2, 2 * durationDay],
      [week, 1, durationWeek],
      [month, 1, durationMonth],
      [month, 3, 3 * durationMonth],
      [year, 1, durationYear]
    ];
    function ticks2(start3, stop, count) {
      const reverse2 = stop < start3;
      if (reverse2) [start3, stop] = [stop, start3];
      const interval2 = count && typeof count.range === "function" ? count : tickInterval(start3, stop, count);
      const ticks3 = interval2 ? interval2.range(start3, +stop + 1) : [];
      return reverse2 ? ticks3.reverse() : ticks3;
    }
    function tickInterval(start3, stop, count) {
      const target = Math.abs(stop - start3) / count;
      const i = bisector(([, , step2]) => step2).right(tickIntervals, target);
      if (i === tickIntervals.length) return year.every(tickStep(start3 / durationYear, stop / durationYear, count));
      if (i === 0) return millisecond.every(Math.max(tickStep(start3, stop, count), 1));
      const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
      return t.every(step);
    }
    return [ticks2, tickInterval];
  }
  var [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcSunday, unixDay, utcHour, utcMinute);
  var [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute);

  // node_modules/d3-time-format/src/locale.js
  function localDate(d) {
    if (0 <= d.y && d.y < 100) {
      var date2 = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
      date2.setFullYear(d.y);
      return date2;
    }
    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
  }
  function utcDate(d) {
    if (0 <= d.y && d.y < 100) {
      var date2 = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
      date2.setUTCFullYear(d.y);
      return date2;
    }
    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
  }
  function newDate(y, m, d) {
    return { y, m, d, H: 0, M: 0, S: 0, L: 0 };
  }
  function formatLocale(locale3) {
    var locale_dateTime = locale3.dateTime, locale_date = locale3.date, locale_time = locale3.time, locale_periods = locale3.periods, locale_weekdays = locale3.days, locale_shortWeekdays = locale3.shortDays, locale_months = locale3.months, locale_shortMonths = locale3.shortMonths;
    var periodRe = formatRe(locale_periods), periodLookup = formatLookup(locale_periods), weekdayRe = formatRe(locale_weekdays), weekdayLookup = formatLookup(locale_weekdays), shortWeekdayRe = formatRe(locale_shortWeekdays), shortWeekdayLookup = formatLookup(locale_shortWeekdays), monthRe = formatRe(locale_months), monthLookup = formatLookup(locale_months), shortMonthRe = formatRe(locale_shortMonths), shortMonthLookup = formatLookup(locale_shortMonths);
    var formats = {
      "a": formatShortWeekday,
      "A": formatWeekday,
      "b": formatShortMonth,
      "B": formatMonth,
      "c": null,
      "d": formatDayOfMonth,
      "e": formatDayOfMonth,
      "f": formatMicroseconds,
      "g": formatYearISO,
      "G": formatFullYearISO,
      "H": formatHour24,
      "I": formatHour12,
      "j": formatDayOfYear,
      "L": formatMilliseconds,
      "m": formatMonthNumber,
      "M": formatMinutes,
      "p": formatPeriod,
      "q": formatQuarter,
      "Q": formatUnixTimestamp,
      "s": formatUnixTimestampSeconds,
      "S": formatSeconds,
      "u": formatWeekdayNumberMonday,
      "U": formatWeekNumberSunday,
      "V": formatWeekNumberISO,
      "w": formatWeekdayNumberSunday,
      "W": formatWeekNumberMonday,
      "x": null,
      "X": null,
      "y": formatYear2,
      "Y": formatFullYear,
      "Z": formatZone,
      "%": formatLiteralPercent
    };
    var utcFormats = {
      "a": formatUTCShortWeekday,
      "A": formatUTCWeekday,
      "b": formatUTCShortMonth,
      "B": formatUTCMonth,
      "c": null,
      "d": formatUTCDayOfMonth,
      "e": formatUTCDayOfMonth,
      "f": formatUTCMicroseconds,
      "g": formatUTCYearISO,
      "G": formatUTCFullYearISO,
      "H": formatUTCHour24,
      "I": formatUTCHour12,
      "j": formatUTCDayOfYear,
      "L": formatUTCMilliseconds,
      "m": formatUTCMonthNumber,
      "M": formatUTCMinutes,
      "p": formatUTCPeriod,
      "q": formatUTCQuarter,
      "Q": formatUnixTimestamp,
      "s": formatUnixTimestampSeconds,
      "S": formatUTCSeconds,
      "u": formatUTCWeekdayNumberMonday,
      "U": formatUTCWeekNumberSunday,
      "V": formatUTCWeekNumberISO,
      "w": formatUTCWeekdayNumberSunday,
      "W": formatUTCWeekNumberMonday,
      "x": null,
      "X": null,
      "y": formatUTCYear,
      "Y": formatUTCFullYear,
      "Z": formatUTCZone,
      "%": formatLiteralPercent
    };
    var parses = {
      "a": parseShortWeekday,
      "A": parseWeekday,
      "b": parseShortMonth,
      "B": parseMonth,
      "c": parseLocaleDateTime,
      "d": parseDayOfMonth,
      "e": parseDayOfMonth,
      "f": parseMicroseconds,
      "g": parseYear,
      "G": parseFullYear,
      "H": parseHour24,
      "I": parseHour24,
      "j": parseDayOfYear,
      "L": parseMilliseconds,
      "m": parseMonthNumber,
      "M": parseMinutes,
      "p": parsePeriod,
      "q": parseQuarter,
      "Q": parseUnixTimestamp,
      "s": parseUnixTimestampSeconds,
      "S": parseSeconds,
      "u": parseWeekdayNumberMonday,
      "U": parseWeekNumberSunday,
      "V": parseWeekNumberISO,
      "w": parseWeekdayNumberSunday,
      "W": parseWeekNumberMonday,
      "x": parseLocaleDate,
      "X": parseLocaleTime,
      "y": parseYear,
      "Y": parseFullYear,
      "Z": parseZone,
      "%": parseLiteralPercent
    };
    formats.x = newFormat(locale_date, formats);
    formats.X = newFormat(locale_time, formats);
    formats.c = newFormat(locale_dateTime, formats);
    utcFormats.x = newFormat(locale_date, utcFormats);
    utcFormats.X = newFormat(locale_time, utcFormats);
    utcFormats.c = newFormat(locale_dateTime, utcFormats);
    function newFormat(specifier, formats2) {
      return function(date2) {
        var string = [], i = -1, j = 0, n = specifier.length, c4, pad3, format2;
        if (!(date2 instanceof Date)) date2 = /* @__PURE__ */ new Date(+date2);
        while (++i < n) {
          if (specifier.charCodeAt(i) === 37) {
            string.push(specifier.slice(j, i));
            if ((pad3 = pads[c4 = specifier.charAt(++i)]) != null) c4 = specifier.charAt(++i);
            else pad3 = c4 === "e" ? " " : "0";
            if (format2 = formats2[c4]) c4 = format2(date2, pad3);
            string.push(c4);
            j = i + 1;
          }
        }
        string.push(specifier.slice(j, i));
        return string.join("");
      };
    }
    function newParse(specifier, Z) {
      return function(string) {
        var d = newDate(1900, void 0, 1), i = parseSpecifier(d, specifier, string += "", 0), week, day;
        if (i != string.length) return null;
        if ("Q" in d) return new Date(d.Q);
        if ("s" in d) return new Date(d.s * 1e3 + ("L" in d ? d.L : 0));
        if (Z && !("Z" in d)) d.Z = 0;
        if ("p" in d) d.H = d.H % 12 + d.p * 12;
        if (d.m === void 0) d.m = "q" in d ? d.q : 0;
        if ("V" in d) {
          if (d.V < 1 || d.V > 53) return null;
          if (!("w" in d)) d.w = 1;
          if ("Z" in d) {
            week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
            week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);
            week = utcDay.offset(week, (d.V - 1) * 7);
            d.y = week.getUTCFullYear();
            d.m = week.getUTCMonth();
            d.d = week.getUTCDate() + (d.w + 6) % 7;
          } else {
            week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
            week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);
            week = timeDay.offset(week, (d.V - 1) * 7);
            d.y = week.getFullYear();
            d.m = week.getMonth();
            d.d = week.getDate() + (d.w + 6) % 7;
          }
        } else if ("W" in d || "U" in d) {
          if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
          day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
          d.m = 0;
          d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
        }
        if ("Z" in d) {
          d.H += d.Z / 100 | 0;
          d.M += d.Z % 100;
          return utcDate(d);
        }
        return localDate(d);
      };
    }
    function parseSpecifier(d, specifier, string, j) {
      var i = 0, n = specifier.length, m = string.length, c4, parse3;
      while (i < n) {
        if (j >= m) return -1;
        c4 = specifier.charCodeAt(i++);
        if (c4 === 37) {
          c4 = specifier.charAt(i++);
          parse3 = parses[c4 in pads ? specifier.charAt(i++) : c4];
          if (!parse3 || (j = parse3(d, string, j)) < 0) return -1;
        } else if (c4 != string.charCodeAt(j++)) {
          return -1;
        }
      }
      return j;
    }
    function parsePeriod(d, string, i) {
      var n = periodRe.exec(string.slice(i));
      return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseShortWeekday(d, string, i) {
      var n = shortWeekdayRe.exec(string.slice(i));
      return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseWeekday(d, string, i) {
      var n = weekdayRe.exec(string.slice(i));
      return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseShortMonth(d, string, i) {
      var n = shortMonthRe.exec(string.slice(i));
      return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseMonth(d, string, i) {
      var n = monthRe.exec(string.slice(i));
      return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseLocaleDateTime(d, string, i) {
      return parseSpecifier(d, locale_dateTime, string, i);
    }
    function parseLocaleDate(d, string, i) {
      return parseSpecifier(d, locale_date, string, i);
    }
    function parseLocaleTime(d, string, i) {
      return parseSpecifier(d, locale_time, string, i);
    }
    function formatShortWeekday(d) {
      return locale_shortWeekdays[d.getDay()];
    }
    function formatWeekday(d) {
      return locale_weekdays[d.getDay()];
    }
    function formatShortMonth(d) {
      return locale_shortMonths[d.getMonth()];
    }
    function formatMonth(d) {
      return locale_months[d.getMonth()];
    }
    function formatPeriod(d) {
      return locale_periods[+(d.getHours() >= 12)];
    }
    function formatQuarter(d) {
      return 1 + ~~(d.getMonth() / 3);
    }
    function formatUTCShortWeekday(d) {
      return locale_shortWeekdays[d.getUTCDay()];
    }
    function formatUTCWeekday(d) {
      return locale_weekdays[d.getUTCDay()];
    }
    function formatUTCShortMonth(d) {
      return locale_shortMonths[d.getUTCMonth()];
    }
    function formatUTCMonth(d) {
      return locale_months[d.getUTCMonth()];
    }
    function formatUTCPeriod(d) {
      return locale_periods[+(d.getUTCHours() >= 12)];
    }
    function formatUTCQuarter(d) {
      return 1 + ~~(d.getUTCMonth() / 3);
    }
    return {
      format: function(specifier) {
        var f = newFormat(specifier += "", formats);
        f.toString = function() {
          return specifier;
        };
        return f;
      },
      parse: function(specifier) {
        var p = newParse(specifier += "", false);
        p.toString = function() {
          return specifier;
        };
        return p;
      },
      utcFormat: function(specifier) {
        var f = newFormat(specifier += "", utcFormats);
        f.toString = function() {
          return specifier;
        };
        return f;
      },
      utcParse: function(specifier) {
        var p = newParse(specifier += "", true);
        p.toString = function() {
          return specifier;
        };
        return p;
      }
    };
  }
  var pads = { "-": "", "_": " ", "0": "0" };
  var numberRe = /^\s*\d+/;
  var percentRe = /^%/;
  var requoteRe = /[\\^$*+?|[\]().{}]/g;
  function pad2(value, fill3, width) {
    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length3 = string.length;
    return sign + (length3 < width ? new Array(width - length3 + 1).join(fill3) + string : string);
  }
  function requote(s2) {
    return s2.replace(requoteRe, "\\$&");
  }
  function formatRe(names) {
    return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
  }
  function formatLookup(names) {
    return new Map(names.map((name, i) => [name.toLowerCase(), i]));
  }
  function parseWeekdayNumberSunday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 1));
    return n ? (d.w = +n[0], i + n[0].length) : -1;
  }
  function parseWeekdayNumberMonday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 1));
    return n ? (d.u = +n[0], i + n[0].length) : -1;
  }
  function parseWeekNumberSunday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.U = +n[0], i + n[0].length) : -1;
  }
  function parseWeekNumberISO(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.V = +n[0], i + n[0].length) : -1;
  }
  function parseWeekNumberMonday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.W = +n[0], i + n[0].length) : -1;
  }
  function parseFullYear(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 4));
    return n ? (d.y = +n[0], i + n[0].length) : -1;
  }
  function parseYear(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2e3), i + n[0].length) : -1;
  }
  function parseZone(d, string, i) {
    var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
  }
  function parseQuarter(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 1));
    return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
  }
  function parseMonthNumber(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
  }
  function parseDayOfMonth(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.d = +n[0], i + n[0].length) : -1;
  }
  function parseDayOfYear(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 3));
    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
  }
  function parseHour24(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.H = +n[0], i + n[0].length) : -1;
  }
  function parseMinutes(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.M = +n[0], i + n[0].length) : -1;
  }
  function parseSeconds(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.S = +n[0], i + n[0].length) : -1;
  }
  function parseMilliseconds(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 3));
    return n ? (d.L = +n[0], i + n[0].length) : -1;
  }
  function parseMicroseconds(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 6));
    return n ? (d.L = Math.floor(n[0] / 1e3), i + n[0].length) : -1;
  }
  function parseLiteralPercent(d, string, i) {
    var n = percentRe.exec(string.slice(i, i + 1));
    return n ? i + n[0].length : -1;
  }
  function parseUnixTimestamp(d, string, i) {
    var n = numberRe.exec(string.slice(i));
    return n ? (d.Q = +n[0], i + n[0].length) : -1;
  }
  function parseUnixTimestampSeconds(d, string, i) {
    var n = numberRe.exec(string.slice(i));
    return n ? (d.s = +n[0], i + n[0].length) : -1;
  }
  function formatDayOfMonth(d, p) {
    return pad2(d.getDate(), p, 2);
  }
  function formatHour24(d, p) {
    return pad2(d.getHours(), p, 2);
  }
  function formatHour12(d, p) {
    return pad2(d.getHours() % 12 || 12, p, 2);
  }
  function formatDayOfYear(d, p) {
    return pad2(1 + timeDay.count(timeYear(d), d), p, 3);
  }
  function formatMilliseconds(d, p) {
    return pad2(d.getMilliseconds(), p, 3);
  }
  function formatMicroseconds(d, p) {
    return formatMilliseconds(d, p) + "000";
  }
  function formatMonthNumber(d, p) {
    return pad2(d.getMonth() + 1, p, 2);
  }
  function formatMinutes(d, p) {
    return pad2(d.getMinutes(), p, 2);
  }
  function formatSeconds(d, p) {
    return pad2(d.getSeconds(), p, 2);
  }
  function formatWeekdayNumberMonday(d) {
    var day = d.getDay();
    return day === 0 ? 7 : day;
  }
  function formatWeekNumberSunday(d, p) {
    return pad2(timeSunday.count(timeYear(d) - 1, d), p, 2);
  }
  function dISO(d) {
    var day = d.getDay();
    return day >= 4 || day === 0 ? timeThursday(d) : timeThursday.ceil(d);
  }
  function formatWeekNumberISO(d, p) {
    d = dISO(d);
    return pad2(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);
  }
  function formatWeekdayNumberSunday(d) {
    return d.getDay();
  }
  function formatWeekNumberMonday(d, p) {
    return pad2(timeMonday.count(timeYear(d) - 1, d), p, 2);
  }
  function formatYear2(d, p) {
    return pad2(d.getFullYear() % 100, p, 2);
  }
  function formatYearISO(d, p) {
    d = dISO(d);
    return pad2(d.getFullYear() % 100, p, 2);
  }
  function formatFullYear(d, p) {
    return pad2(d.getFullYear() % 1e4, p, 4);
  }
  function formatFullYearISO(d, p) {
    var day = d.getDay();
    d = day >= 4 || day === 0 ? timeThursday(d) : timeThursday.ceil(d);
    return pad2(d.getFullYear() % 1e4, p, 4);
  }
  function formatZone(d) {
    var z = d.getTimezoneOffset();
    return (z > 0 ? "-" : (z *= -1, "+")) + pad2(z / 60 | 0, "0", 2) + pad2(z % 60, "0", 2);
  }
  function formatUTCDayOfMonth(d, p) {
    return pad2(d.getUTCDate(), p, 2);
  }
  function formatUTCHour24(d, p) {
    return pad2(d.getUTCHours(), p, 2);
  }
  function formatUTCHour12(d, p) {
    return pad2(d.getUTCHours() % 12 || 12, p, 2);
  }
  function formatUTCDayOfYear(d, p) {
    return pad2(1 + utcDay.count(utcYear(d), d), p, 3);
  }
  function formatUTCMilliseconds(d, p) {
    return pad2(d.getUTCMilliseconds(), p, 3);
  }
  function formatUTCMicroseconds(d, p) {
    return formatUTCMilliseconds(d, p) + "000";
  }
  function formatUTCMonthNumber(d, p) {
    return pad2(d.getUTCMonth() + 1, p, 2);
  }
  function formatUTCMinutes(d, p) {
    return pad2(d.getUTCMinutes(), p, 2);
  }
  function formatUTCSeconds(d, p) {
    return pad2(d.getUTCSeconds(), p, 2);
  }
  function formatUTCWeekdayNumberMonday(d) {
    var dow = d.getUTCDay();
    return dow === 0 ? 7 : dow;
  }
  function formatUTCWeekNumberSunday(d, p) {
    return pad2(utcSunday.count(utcYear(d) - 1, d), p, 2);
  }
  function UTCdISO(d) {
    var day = d.getUTCDay();
    return day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);
  }
  function formatUTCWeekNumberISO(d, p) {
    d = UTCdISO(d);
    return pad2(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);
  }
  function formatUTCWeekdayNumberSunday(d) {
    return d.getUTCDay();
  }
  function formatUTCWeekNumberMonday(d, p) {
    return pad2(utcMonday.count(utcYear(d) - 1, d), p, 2);
  }
  function formatUTCYear(d, p) {
    return pad2(d.getUTCFullYear() % 100, p, 2);
  }
  function formatUTCYearISO(d, p) {
    d = UTCdISO(d);
    return pad2(d.getUTCFullYear() % 100, p, 2);
  }
  function formatUTCFullYear(d, p) {
    return pad2(d.getUTCFullYear() % 1e4, p, 4);
  }
  function formatUTCFullYearISO(d, p) {
    var day = d.getUTCDay();
    d = day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);
    return pad2(d.getUTCFullYear() % 1e4, p, 4);
  }
  function formatUTCZone() {
    return "+0000";
  }
  function formatLiteralPercent() {
    return "%";
  }
  function formatUnixTimestamp(d) {
    return +d;
  }
  function formatUnixTimestampSeconds(d) {
    return Math.floor(+d / 1e3);
  }

  // node_modules/d3-time-format/src/defaultLocale.js
  var locale2;
  var timeFormat;
  var timeParse;
  var utcFormat;
  var utcParse;
  defaultLocale2({
    dateTime: "%x, %X",
    date: "%-m/%-d/%Y",
    time: "%-I:%M:%S %p",
    periods: ["AM", "PM"],
    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
  });
  function defaultLocale2(definition) {
    locale2 = formatLocale(definition);
    timeFormat = locale2.format;
    timeParse = locale2.parse;
    utcFormat = locale2.utcFormat;
    utcParse = locale2.utcParse;
    return locale2;
  }

  // node_modules/d3-scale/src/time.js
  function date(t) {
    return new Date(t);
  }
  function number4(t) {
    return t instanceof Date ? +t : +/* @__PURE__ */ new Date(+t);
  }
  function calendar(ticks2, tickInterval, year, month, week, day, hour, minute, second2, format2) {
    var scale3 = continuous(), invert = scale3.invert, domain = scale3.domain;
    var formatMillisecond = format2(".%L"), formatSecond = format2(":%S"), formatMinute = format2("%I:%M"), formatHour = format2("%I %p"), formatDay = format2("%a %d"), formatWeek = format2("%b %d"), formatMonth = format2("%B"), formatYear3 = format2("%Y");
    function tickFormat2(date2) {
      return (second2(date2) < date2 ? formatMillisecond : minute(date2) < date2 ? formatSecond : hour(date2) < date2 ? formatMinute : day(date2) < date2 ? formatHour : month(date2) < date2 ? week(date2) < date2 ? formatDay : formatWeek : year(date2) < date2 ? formatMonth : formatYear3)(date2);
    }
    scale3.invert = function(y) {
      return new Date(invert(y));
    };
    scale3.domain = function(_) {
      return arguments.length ? domain(Array.from(_, number4)) : domain().map(date);
    };
    scale3.ticks = function(interval2) {
      var d = domain();
      return ticks2(d[0], d[d.length - 1], interval2 == null ? 10 : interval2);
    };
    scale3.tickFormat = function(count, specifier) {
      return specifier == null ? tickFormat2 : format2(specifier);
    };
    scale3.nice = function(interval2) {
      var d = domain();
      if (!interval2 || typeof interval2.range !== "function") interval2 = tickInterval(d[0], d[d.length - 1], interval2 == null ? 10 : interval2);
      return interval2 ? domain(nice(d, interval2)) : scale3;
    };
    scale3.copy = function() {
      return copy(scale3, calendar(ticks2, tickInterval, year, month, week, day, hour, minute, second2, format2));
    };
    return scale3;
  }
  function time() {
    return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute, second, timeFormat).domain([new Date(2e3, 0, 1), new Date(2e3, 0, 2)]), arguments);
  }

  // node_modules/d3-scale/src/utcTime.js
  function utcTime() {
    return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, utcFormat).domain([Date.UTC(2e3, 0, 1), Date.UTC(2e3, 0, 2)]), arguments);
  }

  // node_modules/d3-scale/src/sequential.js
  function copy2(source, target) {
    return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
  }

  // node_modules/d3-scale/src/diverging.js
  function transformer2() {
    var x0 = 0, x1 = 0.5, x2 = 1, s2 = 1, t03, t13, t22, k10, k21, interpolator = identity2, transform2, clamp = false, unknown;
    function scale3(x) {
      return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform2(x)) - t13) * (s2 * x < s2 * t13 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
    }
    scale3.domain = function(_) {
      return arguments.length ? ([x0, x1, x2] = _, t03 = transform2(x0 = +x0), t13 = transform2(x1 = +x1), t22 = transform2(x2 = +x2), k10 = t03 === t13 ? 0 : 0.5 / (t13 - t03), k21 = t13 === t22 ? 0 : 0.5 / (t22 - t13), s2 = t13 < t03 ? -1 : 1, scale3) : [x0, x1, x2];
    };
    scale3.clamp = function(_) {
      return arguments.length ? (clamp = !!_, scale3) : clamp;
    };
    scale3.interpolator = function(_) {
      return arguments.length ? (interpolator = _, scale3) : interpolator;
    };
    function range3(interpolate) {
      return function(_) {
        var r0, r1, r2;
        return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate, [r0, r1, r2]), scale3) : [interpolator(0), interpolator(0.5), interpolator(1)];
      };
    }
    scale3.range = range3(value_default);
    scale3.rangeRound = range3(round_default);
    scale3.unknown = function(_) {
      return arguments.length ? (unknown = _, scale3) : unknown;
    };
    return function(t) {
      transform2 = t, t03 = t(x0), t13 = t(x1), t22 = t(x2), k10 = t03 === t13 ? 0 : 0.5 / (t13 - t03), k21 = t13 === t22 ? 0 : 0.5 / (t22 - t13), s2 = t13 < t03 ? -1 : 1;
      return scale3;
    };
  }
  function diverging() {
    var scale3 = linearish(transformer2()(identity2));
    scale3.copy = function() {
      return copy2(scale3, diverging());
    };
    return initInterpolator.apply(scale3, arguments);
  }
  function divergingLog() {
    var scale3 = loggish(transformer2()).domain([0.1, 1, 10]);
    scale3.copy = function() {
      return copy2(scale3, divergingLog()).base(scale3.base());
    };
    return initInterpolator.apply(scale3, arguments);
  }
  function divergingSymlog() {
    var scale3 = symlogish(transformer2());
    scale3.copy = function() {
      return copy2(scale3, divergingSymlog()).constant(scale3.constant());
    };
    return initInterpolator.apply(scale3, arguments);
  }
  function divergingPow() {
    var scale3 = powish(transformer2());
    scale3.copy = function() {
      return copy2(scale3, divergingPow()).exponent(scale3.exponent());
    };
    return initInterpolator.apply(scale3, arguments);
  }

  // node_modules/d3-scale-chromatic/src/colors.js
  function colors_default(specifier) {
    var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;
    while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);
    return colors;
  }

  // node_modules/d3-scale-chromatic/src/categorical/category10.js
  var category10_default = colors_default("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

  // node_modules/d3-scale-chromatic/src/categorical/Accent.js
  var Accent_default = colors_default("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");

  // node_modules/d3-scale-chromatic/src/categorical/Dark2.js
  var Dark2_default = colors_default("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");

  // node_modules/d3-scale-chromatic/src/categorical/Paired.js
  var Paired_default = colors_default("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");

  // node_modules/d3-scale-chromatic/src/categorical/Pastel1.js
  var Pastel1_default = colors_default("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");

  // node_modules/d3-scale-chromatic/src/categorical/Pastel2.js
  var Pastel2_default = colors_default("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");

  // node_modules/d3-scale-chromatic/src/categorical/Set1.js
  var Set1_default = colors_default("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");

  // node_modules/d3-scale-chromatic/src/categorical/Set2.js
  var Set2_default = colors_default("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");

  // node_modules/d3-scale-chromatic/src/categorical/Set3.js
  var Set3_default = colors_default("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");

  // node_modules/d3-scale-chromatic/src/categorical/Tableau10.js
  var Tableau10_default = colors_default("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");

  // node_modules/d3-scale-chromatic/src/ramp.js
  var ramp_default = (scheme28) => rgbBasis(scheme28[scheme28.length - 1]);

  // node_modules/d3-scale-chromatic/src/diverging/BrBG.js
  var scheme = new Array(3).concat(
    "d8b365f5f5f55ab4ac",
    "a6611adfc27d80cdc1018571",
    "a6611adfc27df5f5f580cdc1018571",
    "8c510ad8b365f6e8c3c7eae55ab4ac01665e",
    "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e",
    "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e",
    "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e",
    "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30",
    "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30"
  ).map(colors_default);
  var BrBG_default = ramp_default(scheme);

  // node_modules/d3-scale-chromatic/src/diverging/PRGn.js
  var scheme2 = new Array(3).concat(
    "af8dc3f7f7f77fbf7b",
    "7b3294c2a5cfa6dba0008837",
    "7b3294c2a5cff7f7f7a6dba0008837",
    "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837",
    "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837",
    "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837",
    "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837",
    "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b",
    "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b"
  ).map(colors_default);
  var PRGn_default = ramp_default(scheme2);

  // node_modules/d3-scale-chromatic/src/diverging/PiYG.js
  var scheme3 = new Array(3).concat(
    "e9a3c9f7f7f7a1d76a",
    "d01c8bf1b6dab8e1864dac26",
    "d01c8bf1b6daf7f7f7b8e1864dac26",
    "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221",
    "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221",
    "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221",
    "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221",
    "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419",
    "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419"
  ).map(colors_default);
  var PiYG_default = ramp_default(scheme3);

  // node_modules/d3-scale-chromatic/src/diverging/PuOr.js
  var scheme4 = new Array(3).concat(
    "998ec3f7f7f7f1a340",
    "5e3c99b2abd2fdb863e66101",
    "5e3c99b2abd2f7f7f7fdb863e66101",
    "542788998ec3d8daebfee0b6f1a340b35806",
    "542788998ec3d8daebf7f7f7fee0b6f1a340b35806",
    "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806",
    "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806",
    "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08",
    "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08"
  ).map(colors_default);
  var PuOr_default = ramp_default(scheme4);

  // node_modules/d3-scale-chromatic/src/diverging/RdBu.js
  var scheme5 = new Array(3).concat(
    "ef8a62f7f7f767a9cf",
    "ca0020f4a58292c5de0571b0",
    "ca0020f4a582f7f7f792c5de0571b0",
    "b2182bef8a62fddbc7d1e5f067a9cf2166ac",
    "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac",
    "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac",
    "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac",
    "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061",
    "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061"
  ).map(colors_default);
  var RdBu_default = ramp_default(scheme5);

  // node_modules/d3-scale-chromatic/src/diverging/RdGy.js
  var scheme6 = new Array(3).concat(
    "ef8a62ffffff999999",
    "ca0020f4a582bababa404040",
    "ca0020f4a582ffffffbababa404040",
    "b2182bef8a62fddbc7e0e0e09999994d4d4d",
    "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d",
    "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d",
    "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d",
    "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a",
    "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a"
  ).map(colors_default);
  var RdGy_default = ramp_default(scheme6);

  // node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js
  var scheme7 = new Array(3).concat(
    "fc8d59ffffbf91bfdb",
    "d7191cfdae61abd9e92c7bb6",
    "d7191cfdae61ffffbfabd9e92c7bb6",
    "d73027fc8d59fee090e0f3f891bfdb4575b4",
    "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4",
    "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4",
    "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4",
    "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695",
    "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695"
  ).map(colors_default);
  var RdYlBu_default = ramp_default(scheme7);

  // node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js
  var scheme8 = new Array(3).concat(
    "fc8d59ffffbf91cf60",
    "d7191cfdae61a6d96a1a9641",
    "d7191cfdae61ffffbfa6d96a1a9641",
    "d73027fc8d59fee08bd9ef8b91cf601a9850",
    "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850",
    "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850",
    "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850",
    "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837",
    "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837"
  ).map(colors_default);
  var RdYlGn_default = ramp_default(scheme8);

  // node_modules/d3-scale-chromatic/src/diverging/Spectral.js
  var scheme9 = new Array(3).concat(
    "fc8d59ffffbf99d594",
    "d7191cfdae61abdda42b83ba",
    "d7191cfdae61ffffbfabdda42b83ba",
    "d53e4ffc8d59fee08be6f59899d5943288bd",
    "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd",
    "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd",
    "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd",
    "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2",
    "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2"
  ).map(colors_default);
  var Spectral_default = ramp_default(scheme9);

  // node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js
  var scheme10 = new Array(3).concat(
    "e5f5f999d8c92ca25f",
    "edf8fbb2e2e266c2a4238b45",
    "edf8fbb2e2e266c2a42ca25f006d2c",
    "edf8fbccece699d8c966c2a42ca25f006d2c",
    "edf8fbccece699d8c966c2a441ae76238b45005824",
    "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824",
    "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b"
  ).map(colors_default);
  var BuGn_default = ramp_default(scheme10);

  // node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js
  var scheme11 = new Array(3).concat(
    "e0ecf49ebcda8856a7",
    "edf8fbb3cde38c96c688419d",
    "edf8fbb3cde38c96c68856a7810f7c",
    "edf8fbbfd3e69ebcda8c96c68856a7810f7c",
    "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b",
    "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b",
    "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b"
  ).map(colors_default);
  var BuPu_default = ramp_default(scheme11);

  // node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js
  var scheme12 = new Array(3).concat(
    "e0f3dba8ddb543a2ca",
    "f0f9e8bae4bc7bccc42b8cbe",
    "f0f9e8bae4bc7bccc443a2ca0868ac",
    "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac",
    "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e",
    "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e",
    "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081"
  ).map(colors_default);
  var GnBu_default = ramp_default(scheme12);

  // node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js
  var scheme13 = new Array(3).concat(
    "fee8c8fdbb84e34a33",
    "fef0d9fdcc8afc8d59d7301f",
    "fef0d9fdcc8afc8d59e34a33b30000",
    "fef0d9fdd49efdbb84fc8d59e34a33b30000",
    "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000",
    "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000",
    "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000"
  ).map(colors_default);
  var OrRd_default = ramp_default(scheme13);

  // node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js
  var scheme14 = new Array(3).concat(
    "ece2f0a6bddb1c9099",
    "f6eff7bdc9e167a9cf02818a",
    "f6eff7bdc9e167a9cf1c9099016c59",
    "f6eff7d0d1e6a6bddb67a9cf1c9099016c59",
    "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450",
    "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450",
    "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636"
  ).map(colors_default);
  var PuBuGn_default = ramp_default(scheme14);

  // node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js
  var scheme15 = new Array(3).concat(
    "ece7f2a6bddb2b8cbe",
    "f1eef6bdc9e174a9cf0570b0",
    "f1eef6bdc9e174a9cf2b8cbe045a8d",
    "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d",
    "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b",
    "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b",
    "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858"
  ).map(colors_default);
  var PuBu_default = ramp_default(scheme15);

  // node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js
  var scheme16 = new Array(3).concat(
    "e7e1efc994c7dd1c77",
    "f1eef6d7b5d8df65b0ce1256",
    "f1eef6d7b5d8df65b0dd1c77980043",
    "f1eef6d4b9dac994c7df65b0dd1c77980043",
    "f1eef6d4b9dac994c7df65b0e7298ace125691003f",
    "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f",
    "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f"
  ).map(colors_default);
  var PuRd_default = ramp_default(scheme16);

  // node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js
  var scheme17 = new Array(3).concat(
    "fde0ddfa9fb5c51b8a",
    "feebe2fbb4b9f768a1ae017e",
    "feebe2fbb4b9f768a1c51b8a7a0177",
    "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177",
    "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177",
    "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177",
    "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a"
  ).map(colors_default);
  var RdPu_default = ramp_default(scheme17);

  // node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js
  var scheme18 = new Array(3).concat(
    "edf8b17fcdbb2c7fb8",
    "ffffcca1dab441b6c4225ea8",
    "ffffcca1dab441b6c42c7fb8253494",
    "ffffccc7e9b47fcdbb41b6c42c7fb8253494",
    "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84",
    "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84",
    "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58"
  ).map(colors_default);
  var YlGnBu_default = ramp_default(scheme18);

  // node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js
  var scheme19 = new Array(3).concat(
    "f7fcb9addd8e31a354",
    "ffffccc2e69978c679238443",
    "ffffccc2e69978c67931a354006837",
    "ffffccd9f0a3addd8e78c67931a354006837",
    "ffffccd9f0a3addd8e78c67941ab5d238443005a32",
    "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32",
    "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529"
  ).map(colors_default);
  var YlGn_default = ramp_default(scheme19);

  // node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js
  var scheme20 = new Array(3).concat(
    "fff7bcfec44fd95f0e",
    "ffffd4fed98efe9929cc4c02",
    "ffffd4fed98efe9929d95f0e993404",
    "ffffd4fee391fec44ffe9929d95f0e993404",
    "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04",
    "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04",
    "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506"
  ).map(colors_default);
  var YlOrBr_default = ramp_default(scheme20);

  // node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js
  var scheme21 = new Array(3).concat(
    "ffeda0feb24cf03b20",
    "ffffb2fecc5cfd8d3ce31a1c",
    "ffffb2fecc5cfd8d3cf03b20bd0026",
    "ffffb2fed976feb24cfd8d3cf03b20bd0026",
    "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026",
    "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026",
    "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026"
  ).map(colors_default);
  var YlOrRd_default = ramp_default(scheme21);

  // node_modules/d3-scale-chromatic/src/sequential-single/Blues.js
  var scheme22 = new Array(3).concat(
    "deebf79ecae13182bd",
    "eff3ffbdd7e76baed62171b5",
    "eff3ffbdd7e76baed63182bd08519c",
    "eff3ffc6dbef9ecae16baed63182bd08519c",
    "eff3ffc6dbef9ecae16baed64292c62171b5084594",
    "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594",
    "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b"
  ).map(colors_default);
  var Blues_default = ramp_default(scheme22);

  // node_modules/d3-scale-chromatic/src/sequential-single/Greens.js
  var scheme23 = new Array(3).concat(
    "e5f5e0a1d99b31a354",
    "edf8e9bae4b374c476238b45",
    "edf8e9bae4b374c47631a354006d2c",
    "edf8e9c7e9c0a1d99b74c47631a354006d2c",
    "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32",
    "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32",
    "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b"
  ).map(colors_default);
  var Greens_default = ramp_default(scheme23);

  // node_modules/d3-scale-chromatic/src/sequential-single/Greys.js
  var scheme24 = new Array(3).concat(
    "f0f0f0bdbdbd636363",
    "f7f7f7cccccc969696525252",
    "f7f7f7cccccc969696636363252525",
    "f7f7f7d9d9d9bdbdbd969696636363252525",
    "f7f7f7d9d9d9bdbdbd969696737373525252252525",
    "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525",
    "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000"
  ).map(colors_default);
  var Greys_default = ramp_default(scheme24);

  // node_modules/d3-scale-chromatic/src/sequential-single/Purples.js
  var scheme25 = new Array(3).concat(
    "efedf5bcbddc756bb1",
    "f2f0f7cbc9e29e9ac86a51a3",
    "f2f0f7cbc9e29e9ac8756bb154278f",
    "f2f0f7dadaebbcbddc9e9ac8756bb154278f",
    "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486",
    "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486",
    "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d"
  ).map(colors_default);
  var Purples_default = ramp_default(scheme25);

  // node_modules/d3-scale-chromatic/src/sequential-single/Reds.js
  var scheme26 = new Array(3).concat(
    "fee0d2fc9272de2d26",
    "fee5d9fcae91fb6a4acb181d",
    "fee5d9fcae91fb6a4ade2d26a50f15",
    "fee5d9fcbba1fc9272fb6a4ade2d26a50f15",
    "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d",
    "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d",
    "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d"
  ).map(colors_default);
  var Reds_default = ramp_default(scheme26);

  // node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js
  var scheme27 = new Array(3).concat(
    "fee6cefdae6be6550d",
    "feeddefdbe85fd8d3cd94701",
    "feeddefdbe85fd8d3ce6550da63603",
    "feeddefdd0a2fdae6bfd8d3ce6550da63603",
    "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04",
    "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04",
    "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704"
  ).map(colors_default);
  var Oranges_default = ramp_default(scheme27);

  // node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js
  function cividis_default(t) {
    t = Math.max(0, Math.min(1, t));
    return "rgb(" + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", " + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", " + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67))))))) + ")";
  }

  // node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js
  var cubehelix_default2 = cubehelixLong(cubehelix(300, 0.5, 0), cubehelix(-240, 0.5, 1));

  // node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js
  var warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.5, 0.8));
  var cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.5, 0.8));
  var c = cubehelix();
  function rainbow_default(t) {
    if (t < 0 || t > 1) t -= Math.floor(t);
    var ts = Math.abs(t - 0.5);
    c.h = 360 * t - 100;
    c.s = 1.5 - 1.5 * ts;
    c.l = 0.8 - 0.9 * ts;
    return c + "";
  }

  // node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js
  var c2 = rgb();
  var pi_1_3 = Math.PI / 3;
  var pi_2_3 = Math.PI * 2 / 3;
  function sinebow_default(t) {
    var x;
    t = (0.5 - t) * Math.PI;
    c2.r = 255 * (x = Math.sin(t)) * x;
    c2.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
    c2.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
    return c2 + "";
  }

  // node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js
  function turbo_default(t) {
    t = Math.max(0, Math.min(1, t));
    return "rgb(" + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", " + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", " + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66))))))) + ")";
  }

  // node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js
  function ramp(range3) {
    var n = range3.length;
    return function(t) {
      return range3[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
    };
  }
  var viridis_default = ramp(colors_default("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
  var magma = ramp(colors_default("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
  var inferno = ramp(colors_default("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
  var plasma = ramp(colors_default("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

  // node_modules/d3-shape/src/math.js
  var cos = Math.cos;
  var min3 = Math.min;
  var sin = Math.sin;
  var sqrt2 = Math.sqrt;
  var pi = Math.PI;
  var halfPi = pi / 2;
  var tau = 2 * pi;

  // node_modules/d3-shape/src/symbol/asterisk.js
  var sqrt3 = sqrt2(3);
  var asterisk_default = {
    draw(context, size) {
      const r = sqrt2(size + min3(size / 28, 0.75)) * 0.59436;
      const t = r / 2;
      const u = t * sqrt3;
      context.moveTo(0, r);
      context.lineTo(0, -r);
      context.moveTo(-u, -t);
      context.lineTo(u, t);
      context.moveTo(-u, t);
      context.lineTo(u, -t);
    }
  };

  // node_modules/d3-shape/src/symbol/circle.js
  var circle_default = {
    draw(context, size) {
      const r = sqrt2(size / pi);
      context.moveTo(r, 0);
      context.arc(0, 0, r, 0, tau);
    }
  };

  // node_modules/d3-shape/src/symbol/cross.js
  var cross_default = {
    draw(context, size) {
      const r = sqrt2(size / 5) / 2;
      context.moveTo(-3 * r, -r);
      context.lineTo(-r, -r);
      context.lineTo(-r, -3 * r);
      context.lineTo(r, -3 * r);
      context.lineTo(r, -r);
      context.lineTo(3 * r, -r);
      context.lineTo(3 * r, r);
      context.lineTo(r, r);
      context.lineTo(r, 3 * r);
      context.lineTo(-r, 3 * r);
      context.lineTo(-r, r);
      context.lineTo(-3 * r, r);
      context.closePath();
    }
  };

  // node_modules/d3-shape/src/symbol/diamond.js
  var tan30 = sqrt2(1 / 3);
  var tan30_2 = tan30 * 2;
  var diamond_default = {
    draw(context, size) {
      const y = sqrt2(size / tan30_2);
      const x = y * tan30;
      context.moveTo(0, -y);
      context.lineTo(x, 0);
      context.lineTo(0, y);
      context.lineTo(-x, 0);
      context.closePath();
    }
  };

  // node_modules/d3-shape/src/symbol/diamond2.js
  var diamond2_default = {
    draw(context, size) {
      const r = sqrt2(size) * 0.62625;
      context.moveTo(0, -r);
      context.lineTo(r, 0);
      context.lineTo(0, r);
      context.lineTo(-r, 0);
      context.closePath();
    }
  };

  // node_modules/d3-shape/src/symbol/plus.js
  var plus_default = {
    draw(context, size) {
      const r = sqrt2(size - min3(size / 7, 2)) * 0.87559;
      context.moveTo(-r, 0);
      context.lineTo(r, 0);
      context.moveTo(0, r);
      context.lineTo(0, -r);
    }
  };

  // node_modules/d3-shape/src/symbol/square.js
  var square_default = {
    draw(context, size) {
      const w = sqrt2(size);
      const x = -w / 2;
      context.rect(x, x, w, w);
    }
  };

  // node_modules/d3-shape/src/symbol/square2.js
  var square2_default = {
    draw(context, size) {
      const r = sqrt2(size) * 0.4431;
      context.moveTo(r, r);
      context.lineTo(r, -r);
      context.lineTo(-r, -r);
      context.lineTo(-r, r);
      context.closePath();
    }
  };

  // node_modules/d3-shape/src/symbol/star.js
  var ka = 0.8908130915292852;
  var kr = sin(pi / 10) / sin(7 * pi / 10);
  var kx = sin(tau / 10) * kr;
  var ky = -cos(tau / 10) * kr;
  var star_default = {
    draw(context, size) {
      const r = sqrt2(size * ka);
      const x = kx * r;
      const y = ky * r;
      context.moveTo(0, -r);
      context.lineTo(x, y);
      for (let i = 1; i < 5; ++i) {
        const a2 = tau * i / 5;
        const c4 = cos(a2);
        const s2 = sin(a2);
        context.lineTo(s2 * r, -c4 * r);
        context.lineTo(c4 * x - s2 * y, s2 * x + c4 * y);
      }
      context.closePath();
    }
  };

  // node_modules/d3-shape/src/symbol/triangle.js
  var sqrt32 = sqrt2(3);
  var triangle_default = {
    draw(context, size) {
      const y = -sqrt2(size / (sqrt32 * 3));
      context.moveTo(0, y * 2);
      context.lineTo(-sqrt32 * y, -y);
      context.lineTo(sqrt32 * y, -y);
      context.closePath();
    }
  };

  // node_modules/d3-shape/src/symbol/triangle2.js
  var sqrt33 = sqrt2(3);
  var triangle2_default = {
    draw(context, size) {
      const s2 = sqrt2(size) * 0.6824;
      const t = s2 / 2;
      const u = s2 * sqrt33 / 2;
      context.moveTo(0, -s2);
      context.lineTo(u, t);
      context.lineTo(-u, t);
      context.closePath();
    }
  };

  // node_modules/d3-shape/src/symbol/wye.js
  var c3 = -0.5;
  var s = sqrt2(3) / 2;
  var k = 1 / sqrt2(12);
  var a = (k / 2 + 1) * 3;
  var wye_default = {
    draw(context, size) {
      const r = sqrt2(size / a);
      const x0 = r / 2, y0 = r * k;
      const x1 = x0, y1 = r * k + r;
      const x2 = -x1, y2 = y1;
      context.moveTo(x0, y0);
      context.lineTo(x1, y1);
      context.lineTo(x2, y2);
      context.lineTo(c3 * x0 - s * y0, s * x0 + c3 * y0);
      context.lineTo(c3 * x1 - s * y1, s * x1 + c3 * y1);
      context.lineTo(c3 * x2 - s * y2, s * x2 + c3 * y2);
      context.lineTo(c3 * x0 + s * y0, c3 * y0 - s * x0);
      context.lineTo(c3 * x1 + s * y1, c3 * y1 - s * x1);
      context.lineTo(c3 * x2 + s * y2, c3 * y2 - s * x2);
      context.closePath();
    }
  };

  // node_modules/d3-shape/src/symbol/times.js
  var times_default = {
    draw(context, size) {
      const r = sqrt2(size - min3(size / 6, 1.7)) * 0.6189;
      context.moveTo(-r, -r);
      context.lineTo(r, r);
      context.moveTo(-r, r);
      context.lineTo(r, -r);
    }
  };

  // node_modules/d3-shape/src/symbol.js
  var symbolsFill = [
    circle_default,
    cross_default,
    diamond_default,
    square_default,
    star_default,
    triangle_default,
    wye_default
  ];
  var symbolsStroke = [
    circle_default,
    plus_default,
    times_default,
    triangle2_default,
    asterisk_default,
    square2_default,
    diamond2_default
  ];

  // node_modules/d3-zoom/src/transform.js
  function Transform(k2, x, y) {
    this.k = k2;
    this.x = x;
    this.y = y;
  }
  Transform.prototype = {
    constructor: Transform,
    scale: function(k2) {
      return k2 === 1 ? this : new Transform(this.k * k2, this.x, this.y);
    },
    translate: function(x, y) {
      return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
    },
    apply: function(point2) {
      return [point2[0] * this.k + this.x, point2[1] * this.k + this.y];
    },
    applyX: function(x) {
      return x * this.k + this.x;
    },
    applyY: function(y) {
      return y * this.k + this.y;
    },
    invert: function(location) {
      return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
    },
    invertX: function(x) {
      return (x - this.x) / this.k;
    },
    invertY: function(y) {
      return (y - this.y) / this.k;
    },
    rescaleX: function(x) {
      return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
    },
    rescaleY: function(y) {
      return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
    },
    toString: function() {
      return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
    }
  };
  var identity4 = new Transform(1, 0, 0);
  transform.prototype = Transform.prototype;
  function transform(node5) {
    while (!node5.__zoom) if (!(node5 = node5.parentNode)) return identity4;
    return node5.__zoom;
  }

  // node_modules/cal-heatmap/dist/cal-heatmap.esm.js
  function _iterableToArrayLimit(arr, i) {
    var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
    if (null != _i) {
      var _s, _e, _x, _r, _arr = [], _n = true, _d = false;
      try {
        if (_x = (_i = _i.call(arr)).next, 0 === i) {
          if (Object(_i) !== _i) return;
          _n = false;
        } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = true) ;
      } catch (err) {
        _d = true, _e = err;
      } finally {
        try {
          if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
        } finally {
          if (_d) throw _e;
        }
      }
      return _arr;
    }
  }
  function _regeneratorRuntime() {
    _regeneratorRuntime = function() {
      return exports2;
    };
    var exports2 = {}, Op = Object.prototype, hasOwn9 = Op.hasOwnProperty, defineProperty13 = Object.defineProperty || function(obj, key, desc) {
      obj[key] = desc.value;
    }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
    function define(obj, key, value) {
      return Object.defineProperty(obj, key, {
        value,
        enumerable: true,
        configurable: true,
        writable: true
      }), obj[key];
    }
    try {
      define({}, "");
    } catch (err) {
      define = function(obj, key, value) {
        return obj[key] = value;
      };
    }
    function wrap(innerFn, outerFn, self2, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);
      return defineProperty13(generator, "_invoke", {
        value: makeInvokeMethod(innerFn, self2, context)
      }), generator;
    }
    function tryCatch(fn2, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn2.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }
    exports2.wrap = wrap;
    var ContinueSentinel = {};
    function Generator() {
    }
    function GeneratorFunction() {
    }
    function GeneratorFunctionPrototype() {
    }
    var IteratorPrototype5 = {};
    define(IteratorPrototype5, iteratorSymbol, function() {
      return this;
    });
    var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values5([])));
    NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn9.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype5 = NativeIteratorPrototype);
    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype5);
    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function(method) {
        define(prototype, method, function(arg) {
          return this._invoke(method, arg);
        });
      });
    }
    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve5, reject5) {
        var record = tryCatch(generator[method], generator, arg);
        if ("throw" !== record.type) {
          var result = record.arg, value = result.value;
          return value && "object" == typeof value && hasOwn9.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function(value2) {
            invoke("next", value2, resolve5, reject5);
          }, function(err) {
            invoke("throw", err, resolve5, reject5);
          }) : PromiseImpl.resolve(value).then(function(unwrapped) {
            result.value = unwrapped, resolve5(result);
          }, function(error) {
            return invoke("throw", error, resolve5, reject5);
          });
        }
        reject5(record.arg);
      }
      var previousPromise;
      defineProperty13(this, "_invoke", {
        value: function(method, arg) {
          function callInvokeWithMethodAndArg() {
            return new PromiseImpl(function(resolve5, reject5) {
              invoke(method, arg, resolve5, reject5);
            });
          }
          return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        }
      });
    }
    function makeInvokeMethod(innerFn, self2, context) {
      var state = "suspendedStart";
      return function(method, arg) {
        if ("executing" === state) throw new Error("Generator is already running");
        if ("completed" === state) {
          if ("throw" === method) throw arg;
          return doneResult();
        }
        for (context.method = method, context.arg = arg; ; ) {
          var delegate = context.delegate;
          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);
            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }
          if ("next" === context.method) context.sent = context._sent = context.arg;
          else if ("throw" === context.method) {
            if ("suspendedStart" === state) throw state = "completed", context.arg;
            context.dispatchException(context.arg);
          } else "return" === context.method && context.abrupt("return", context.arg);
          state = "executing";
          var record = tryCatch(innerFn, self2, context);
          if ("normal" === record.type) {
            if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
            return {
              value: record.arg,
              done: context.done
            };
          }
          "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
        }
      };
    }
    function maybeInvokeDelegate(delegate, context) {
      var methodName = context.method, method = delegate.iterator[methodName];
      if (void 0 === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = void 0, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel;
      var record = tryCatch(method, delegate.iterator, context.arg);
      if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
      var info = record.arg;
      return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = void 0), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
    }
    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };
      1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
    }
    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal", delete record.arg, entry.completion = record;
    }
    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }], tryLocsList.forEach(pushTryEntry, this), this.reset(true);
    }
    function values5(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];
        if (iteratorMethod) return iteratorMethod.call(iterable);
        if ("function" == typeof iterable.next) return iterable;
        if (!isNaN(iterable.length)) {
          var i = -1, next5 = function next6() {
            for (; ++i < iterable.length; ) if (hasOwn9.call(iterable, i)) return next6.value = iterable[i], next6.done = false, next6;
            return next6.value = void 0, next6.done = true, next6;
          };
          return next5.next = next5;
        }
      }
      return {
        next: doneResult
      };
    }
    function doneResult() {
      return {
        value: void 0,
        done: true
      };
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty13(Gp, "constructor", {
      value: GeneratorFunctionPrototype,
      configurable: true
    }), defineProperty13(GeneratorFunctionPrototype, "constructor", {
      value: GeneratorFunction,
      configurable: true
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports2.isGeneratorFunction = function(genFun) {
      var ctor = "function" == typeof genFun && genFun.constructor;
      return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
    }, exports2.mark = function(genFun) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
    }, exports2.awrap = function(arg) {
      return {
        __await: arg
      };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function() {
      return this;
    }), exports2.AsyncIterator = AsyncIterator, exports2.async = function(innerFn, outerFn, self2, tryLocsList, PromiseImpl) {
      void 0 === PromiseImpl && (PromiseImpl = Promise);
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self2, tryLocsList), PromiseImpl);
      return exports2.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {
        return result.done ? result.value : iter.next();
      });
    }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function() {
      return this;
    }), define(Gp, "toString", function() {
      return "[object Generator]";
    }), exports2.keys = function(val) {
      var object = Object(val), keys12 = [];
      for (var key in object) keys12.push(key);
      return keys12.reverse(), function next5() {
        for (; keys12.length; ) {
          var key2 = keys12.pop();
          if (key2 in object) return next5.value = key2, next5.done = false, next5;
        }
        return next5.done = true, next5;
      };
    }, exports2.values = values5, Context.prototype = {
      constructor: Context,
      reset: function(skipTempReset) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn9.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = void 0);
      },
      stop: function() {
        this.done = true;
        var rootRecord = this.tryEntries[0].completion;
        if ("throw" === rootRecord.type) throw rootRecord.arg;
        return this.rval;
      },
      dispatchException: function(exception) {
        if (this.done) throw exception;
        var context = this;
        function handle(loc, caught) {
          return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = void 0), !!caught;
        }
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i], record = entry.completion;
          if ("root" === entry.tryLoc) return handle("end");
          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn9.call(entry, "catchLoc"), hasFinally = hasOwn9.call(entry, "finallyLoc");
            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
              if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
            } else {
              if (!hasFinally) throw new Error("try statement without catch or finally");
              if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
            }
          }
        }
      },
      abrupt: function(type2, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc <= this.prev && hasOwn9.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }
        finallyEntry && ("break" === type2 || "continue" === type2) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
        var record = finallyEntry ? finallyEntry.completion : {};
        return record.type = type2, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
      },
      complete: function(record, afterLoc) {
        if ("throw" === record.type) throw record.arg;
        return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
      },
      finish: function(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
        }
      },
      catch: function(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;
            if ("throw" === record.type) {
              var thrown = record.arg;
              resetTryEntry(entry);
            }
            return thrown;
          }
        }
        throw new Error("illegal catch attempt");
      },
      delegateYield: function(iterable, resultName, nextLoc) {
        return this.delegate = {
          iterator: values5(iterable),
          resultName,
          nextLoc
        }, "next" === this.method && (this.arg = void 0), ContinueSentinel;
      }
    }, exports2;
  }
  function _typeof(obj) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
      writable: false
    });
    return Constructor;
  }
  function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }
  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
  }
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
  }
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }
  function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }
  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _toPrimitive(input, hint) {
    if (typeof input !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== void 0) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
  function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return typeof key === "symbol" ? key : String(key);
  }
  var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
  function getDefaultExportFromCjs(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
  }
  var check = function(it) {
    return it && it.Math === Math && it;
  };
  var global$n = (
    // eslint-disable-next-line es/no-global-this -- safe
    check(typeof globalThis == "object" && globalThis) || check(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
    check(typeof self == "object" && self) || check(typeof commonjsGlobal == "object" && commonjsGlobal) || check(typeof commonjsGlobal == "object" && commonjsGlobal) || // eslint-disable-next-line no-new-func -- fallback
    /* @__PURE__ */ (function() {
      return this;
    })() || Function("return this")()
  );
  var shared$4 = { exports: {} };
  var global$m = global$n;
  var defineProperty$9 = Object.defineProperty;
  var defineGlobalProperty$3 = function(key, value) {
    try {
      defineProperty$9(global$m, key, { value, configurable: true, writable: true });
    } catch (error) {
      global$m[key] = value;
    }
    return value;
  };
  var global$l = global$n;
  var defineGlobalProperty$2 = defineGlobalProperty$3;
  var SHARED = "__core-js_shared__";
  var store$3 = global$l[SHARED] || defineGlobalProperty$2(SHARED, {});
  var sharedStore = store$3;
  var store$2 = sharedStore;
  (shared$4.exports = function(key, value) {
    return store$2[key] || (store$2[key] = value !== void 0 ? value : {});
  })("versions", []).push({
    version: "3.34.0",
    mode: "global",
    copyright: "\xA9 2014-2023 Denis Pushkarev (zloirock.ru)",
    license: "https://github.com/zloirock/core-js/blob/v3.34.0/LICENSE",
    source: "https://github.com/zloirock/core-js"
  });
  var sharedExports = shared$4.exports;
  var fails$u = function(exec5) {
    try {
      return !!exec5();
    } catch (error) {
      return true;
    }
  };
  var fails$t = fails$u;
  var functionBindNative = !fails$t(function() {
    var test5 = (function() {
    }).bind();
    return typeof test5 != "function" || test5.hasOwnProperty("prototype");
  });
  var NATIVE_BIND$3 = functionBindNative;
  var FunctionPrototype$3 = Function.prototype;
  var call$j = FunctionPrototype$3.call;
  var uncurryThisWithBind = NATIVE_BIND$3 && FunctionPrototype$3.bind.bind(call$j, call$j);
  var functionUncurryThis = NATIVE_BIND$3 ? uncurryThisWithBind : function(fn2) {
    return function() {
      return call$j.apply(fn2, arguments);
    };
  };
  var isNullOrUndefined$8 = function(it) {
    return it === null || it === void 0;
  };
  var isNullOrUndefined$7 = isNullOrUndefined$8;
  var $TypeError$g = TypeError;
  var requireObjectCoercible$7 = function(it) {
    if (isNullOrUndefined$7(it)) throw new $TypeError$g("Can't call method on " + it);
    return it;
  };
  var requireObjectCoercible$6 = requireObjectCoercible$7;
  var $Object$4 = Object;
  var toObject$a = function(argument) {
    return $Object$4(requireObjectCoercible$6(argument));
  };
  var uncurryThis$u = functionUncurryThis;
  var toObject$9 = toObject$a;
  var hasOwnProperty$d = uncurryThis$u({}.hasOwnProperty);
  var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
    return hasOwnProperty$d(toObject$9(it), key);
  };
  var uncurryThis$t = functionUncurryThis;
  var id$2 = 0;
  var postfix = Math.random();
  var toString$c = uncurryThis$t(1 .toString);
  var uid$3 = function(key) {
    return "Symbol(" + (key === void 0 ? "" : key) + ")_" + toString$c(++id$2 + postfix, 36);
  };
  var engineUserAgent = typeof navigator != "undefined" && String(navigator.userAgent) || "";
  var global$k = global$n;
  var userAgent$5 = engineUserAgent;
  var process$3 = global$k.process;
  var Deno$1 = global$k.Deno;
  var versions = process$3 && process$3.versions || Deno$1 && Deno$1.version;
  var v8 = versions && versions.v8;
  var match;
  var version;
  if (v8) {
    match = v8.split(".");
    version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
  }
  if (!version && userAgent$5) {
    match = userAgent$5.match(/Edge\/(\d+)/);
    if (!match || match[1] >= 74) {
      match = userAgent$5.match(/Chrome\/(\d+)/);
      if (match) version = +match[1];
    }
  }
  var engineV8Version = version;
  var V8_VERSION$3 = engineV8Version;
  var fails$s = fails$u;
  var global$j = global$n;
  var $String$5 = global$j.String;
  var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$s(function() {
    var symbol3 = Symbol("symbol detection");
    return !$String$5(symbol3) || !(Object(symbol3) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION$3 && V8_VERSION$3 < 41;
  });
  var NATIVE_SYMBOL$1 = symbolConstructorDetection;
  var useSymbolAsUid = NATIVE_SYMBOL$1 && !Symbol.sham && typeof Symbol.iterator == "symbol";
  var global$i = global$n;
  var shared$3 = sharedExports;
  var hasOwn$b = hasOwnProperty_1;
  var uid$2 = uid$3;
  var NATIVE_SYMBOL = symbolConstructorDetection;
  var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;
  var Symbol$3 = global$i.Symbol;
  var WellKnownSymbolsStore = shared$3("wks");
  var createWellKnownSymbol = USE_SYMBOL_AS_UID$1 ? Symbol$3["for"] || Symbol$3 : Symbol$3 && Symbol$3.withoutSetter || uid$2;
  var wellKnownSymbol$m = function(name) {
    if (!hasOwn$b(WellKnownSymbolsStore, name)) {
      WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn$b(Symbol$3, name) ? Symbol$3[name] : createWellKnownSymbol("Symbol." + name);
    }
    return WellKnownSymbolsStore[name];
  };
  var wellKnownSymbol$l = wellKnownSymbol$m;
  var TO_STRING_TAG$2 = wellKnownSymbol$l("toStringTag");
  var test$1 = {};
  test$1[TO_STRING_TAG$2] = "z";
  var toStringTagSupport = String(test$1) === "[object z]";
  var documentAll$2 = typeof document == "object" && document.all;
  var IS_HTMLDDA = typeof documentAll$2 == "undefined" && documentAll$2 !== void 0;
  var documentAll_1 = {
    all: documentAll$2,
    IS_HTMLDDA
  };
  var $documentAll$1 = documentAll_1;
  var documentAll$1 = $documentAll$1.all;
  var isCallable$o = $documentAll$1.IS_HTMLDDA ? function(argument) {
    return typeof argument == "function" || argument === documentAll$1;
  } : function(argument) {
    return typeof argument == "function";
  };
  var objectDefineProperty = {};
  var fails$r = fails$u;
  var descriptors = !fails$r(function() {
    return Object.defineProperty({}, 1, { get: function() {
      return 7;
    } })[1] !== 7;
  });
  var isCallable$n = isCallable$o;
  var $documentAll = documentAll_1;
  var documentAll = $documentAll.all;
  var isObject$j = $documentAll.IS_HTMLDDA ? function(it) {
    return typeof it == "object" ? it !== null : isCallable$n(it) || it === documentAll;
  } : function(it) {
    return typeof it == "object" ? it !== null : isCallable$n(it);
  };
  var global$h = global$n;
  var isObject$i = isObject$j;
  var document$3 = global$h.document;
  var EXISTS$1 = isObject$i(document$3) && isObject$i(document$3.createElement);
  var documentCreateElement$2 = function(it) {
    return EXISTS$1 ? document$3.createElement(it) : {};
  };
  var DESCRIPTORS$d = descriptors;
  var fails$q = fails$u;
  var createElement$1 = documentCreateElement$2;
  var ie8DomDefine = !DESCRIPTORS$d && !fails$q(function() {
    return Object.defineProperty(createElement$1("div"), "a", {
      get: function() {
        return 7;
      }
    }).a !== 7;
  });
  var DESCRIPTORS$c = descriptors;
  var fails$p = fails$u;
  var v8PrototypeDefineBug = DESCRIPTORS$c && fails$p(function() {
    return Object.defineProperty(function() {
    }, "prototype", {
      value: 42,
      writable: false
    }).prototype !== 42;
  });
  var isObject$h = isObject$j;
  var $String$4 = String;
  var $TypeError$f = TypeError;
  var anObject$f = function(argument) {
    if (isObject$h(argument)) return argument;
    throw new $TypeError$f($String$4(argument) + " is not an object");
  };
  var NATIVE_BIND$2 = functionBindNative;
  var call$i = Function.prototype.call;
  var functionCall = NATIVE_BIND$2 ? call$i.bind(call$i) : function() {
    return call$i.apply(call$i, arguments);
  };
  var global$g = global$n;
  var isCallable$m = isCallable$o;
  var aFunction = function(argument) {
    return isCallable$m(argument) ? argument : void 0;
  };
  var getBuiltIn$7 = function(namespace, method) {
    return arguments.length < 2 ? aFunction(global$g[namespace]) : global$g[namespace] && global$g[namespace][method];
  };
  var uncurryThis$s = functionUncurryThis;
  var objectIsPrototypeOf = uncurryThis$s({}.isPrototypeOf);
  var getBuiltIn$6 = getBuiltIn$7;
  var isCallable$l = isCallable$o;
  var isPrototypeOf$2 = objectIsPrototypeOf;
  var USE_SYMBOL_AS_UID = useSymbolAsUid;
  var $Object$3 = Object;
  var isSymbol$3 = USE_SYMBOL_AS_UID ? function(it) {
    return typeof it == "symbol";
  } : function(it) {
    var $Symbol = getBuiltIn$6("Symbol");
    return isCallable$l($Symbol) && isPrototypeOf$2($Symbol.prototype, $Object$3(it));
  };
  var $String$3 = String;
  var tryToString$5 = function(argument) {
    try {
      return $String$3(argument);
    } catch (error) {
      return "Object";
    }
  };
  var isCallable$k = isCallable$o;
  var tryToString$4 = tryToString$5;
  var $TypeError$e = TypeError;
  var aCallable$a = function(argument) {
    if (isCallable$k(argument)) return argument;
    throw new $TypeError$e(tryToString$4(argument) + " is not a function");
  };
  var aCallable$9 = aCallable$a;
  var isNullOrUndefined$6 = isNullOrUndefined$8;
  var getMethod$4 = function(V, P) {
    var func = V[P];
    return isNullOrUndefined$6(func) ? void 0 : aCallable$9(func);
  };
  var call$h = functionCall;
  var isCallable$j = isCallable$o;
  var isObject$g = isObject$j;
  var $TypeError$d = TypeError;
  var ordinaryToPrimitive$1 = function(input, pref) {
    var fn2, val;
    if (pref === "string" && isCallable$j(fn2 = input.toString) && !isObject$g(val = call$h(fn2, input))) return val;
    if (isCallable$j(fn2 = input.valueOf) && !isObject$g(val = call$h(fn2, input))) return val;
    if (pref !== "string" && isCallable$j(fn2 = input.toString) && !isObject$g(val = call$h(fn2, input))) return val;
    throw new $TypeError$d("Can't convert object to primitive value");
  };
  var call$g = functionCall;
  var isObject$f = isObject$j;
  var isSymbol$2 = isSymbol$3;
  var getMethod$3 = getMethod$4;
  var ordinaryToPrimitive = ordinaryToPrimitive$1;
  var wellKnownSymbol$k = wellKnownSymbol$m;
  var $TypeError$c = TypeError;
  var TO_PRIMITIVE = wellKnownSymbol$k("toPrimitive");
  var toPrimitive$1 = function(input, pref) {
    if (!isObject$f(input) || isSymbol$2(input)) return input;
    var exoticToPrim = getMethod$3(input, TO_PRIMITIVE);
    var result;
    if (exoticToPrim) {
      if (pref === void 0) pref = "default";
      result = call$g(exoticToPrim, input, pref);
      if (!isObject$f(result) || isSymbol$2(result)) return result;
      throw new $TypeError$c("Can't convert object to primitive value");
    }
    if (pref === void 0) pref = "number";
    return ordinaryToPrimitive(input, pref);
  };
  var toPrimitive = toPrimitive$1;
  var isSymbol$1 = isSymbol$3;
  var toPropertyKey$3 = function(argument) {
    var key = toPrimitive(argument, "string");
    return isSymbol$1(key) ? key : key + "";
  };
  var DESCRIPTORS$b = descriptors;
  var IE8_DOM_DEFINE$1 = ie8DomDefine;
  var V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;
  var anObject$e = anObject$f;
  var toPropertyKey$2 = toPropertyKey$3;
  var $TypeError$b = TypeError;
  var $defineProperty = Object.defineProperty;
  var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;
  var ENUMERABLE = "enumerable";
  var CONFIGURABLE$1 = "configurable";
  var WRITABLE = "writable";
  objectDefineProperty.f = DESCRIPTORS$b ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty(O, P, Attributes) {
    anObject$e(O);
    P = toPropertyKey$2(P);
    anObject$e(Attributes);
    if (typeof O === "function" && P === "prototype" && "value" in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
      var current = $getOwnPropertyDescriptor$1(O, P);
      if (current && current[WRITABLE]) {
        O[P] = Attributes.value;
        Attributes = {
          configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
          enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
          writable: false
        };
      }
    }
    return $defineProperty(O, P, Attributes);
  } : $defineProperty : function defineProperty2(O, P, Attributes) {
    anObject$e(O);
    P = toPropertyKey$2(P);
    anObject$e(Attributes);
    if (IE8_DOM_DEFINE$1) try {
      return $defineProperty(O, P, Attributes);
    } catch (error) {
    }
    if ("get" in Attributes || "set" in Attributes) throw new $TypeError$b("Accessors not supported");
    if ("value" in Attributes) O[P] = Attributes.value;
    return O;
  };
  var makeBuiltIn$3 = { exports: {} };
  var DESCRIPTORS$a = descriptors;
  var hasOwn$a = hasOwnProperty_1;
  var FunctionPrototype$2 = Function.prototype;
  var getDescriptor = DESCRIPTORS$a && Object.getOwnPropertyDescriptor;
  var EXISTS = hasOwn$a(FunctionPrototype$2, "name");
  var PROPER = EXISTS && (function something() {
  }).name === "something";
  var CONFIGURABLE = EXISTS && (!DESCRIPTORS$a || DESCRIPTORS$a && getDescriptor(FunctionPrototype$2, "name").configurable);
  var functionName = {
    EXISTS,
    PROPER,
    CONFIGURABLE
  };
  var uncurryThis$r = functionUncurryThis;
  var isCallable$i = isCallable$o;
  var store$1 = sharedStore;
  var functionToString$1 = uncurryThis$r(Function.toString);
  if (!isCallable$i(store$1.inspectSource)) {
    store$1.inspectSource = function(it) {
      return functionToString$1(it);
    };
  }
  var inspectSource$3 = store$1.inspectSource;
  var global$f = global$n;
  var isCallable$h = isCallable$o;
  var WeakMap$3 = global$f.WeakMap;
  var weakMapBasicDetection = isCallable$h(WeakMap$3) && /native code/.test(String(WeakMap$3));
  var createPropertyDescriptor$4 = function(bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value
    };
  };
  var DESCRIPTORS$9 = descriptors;
  var definePropertyModule$4 = objectDefineProperty;
  var createPropertyDescriptor$3 = createPropertyDescriptor$4;
  var createNonEnumerableProperty$6 = DESCRIPTORS$9 ? function(object, key, value) {
    return definePropertyModule$4.f(object, key, createPropertyDescriptor$3(1, value));
  } : function(object, key, value) {
    object[key] = value;
    return object;
  };
  var shared$2 = sharedExports;
  var uid$1 = uid$3;
  var keys$1 = shared$2("keys");
  var sharedKey$3 = function(key) {
    return keys$1[key] || (keys$1[key] = uid$1(key));
  };
  var hiddenKeys$5 = {};
  var NATIVE_WEAK_MAP = weakMapBasicDetection;
  var global$e = global$n;
  var isObject$e = isObject$j;
  var createNonEnumerableProperty$5 = createNonEnumerableProperty$6;
  var hasOwn$9 = hasOwnProperty_1;
  var shared$1 = sharedStore;
  var sharedKey$2 = sharedKey$3;
  var hiddenKeys$4 = hiddenKeys$5;
  var OBJECT_ALREADY_INITIALIZED = "Object already initialized";
  var TypeError$2 = global$e.TypeError;
  var WeakMap$2 = global$e.WeakMap;
  var set$2;
  var get$1;
  var has$1;
  var enforce = function(it) {
    return has$1(it) ? get$1(it) : set$2(it, {});
  };
  var getterFor = function(TYPE) {
    return function(it) {
      var state;
      if (!isObject$e(it) || (state = get$1(it)).type !== TYPE) {
        throw new TypeError$2("Incompatible receiver, " + TYPE + " required");
      }
      return state;
    };
  };
  if (NATIVE_WEAK_MAP || shared$1.state) {
    store = shared$1.state || (shared$1.state = new WeakMap$2());
    store.get = store.get;
    store.has = store.has;
    store.set = store.set;
    set$2 = function(it, metadata) {
      if (store.has(it)) throw new TypeError$2(OBJECT_ALREADY_INITIALIZED);
      metadata.facade = it;
      store.set(it, metadata);
      return metadata;
    };
    get$1 = function(it) {
      return store.get(it) || {};
    };
    has$1 = function(it) {
      return store.has(it);
    };
  } else {
    STATE = sharedKey$2("state");
    hiddenKeys$4[STATE] = true;
    set$2 = function(it, metadata) {
      if (hasOwn$9(it, STATE)) throw new TypeError$2(OBJECT_ALREADY_INITIALIZED);
      metadata.facade = it;
      createNonEnumerableProperty$5(it, STATE, metadata);
      return metadata;
    };
    get$1 = function(it) {
      return hasOwn$9(it, STATE) ? it[STATE] : {};
    };
    has$1 = function(it) {
      return hasOwn$9(it, STATE);
    };
  }
  var store;
  var STATE;
  var internalState = {
    set: set$2,
    get: get$1,
    has: has$1,
    enforce,
    getterFor
  };
  var uncurryThis$q = functionUncurryThis;
  var fails$o = fails$u;
  var isCallable$g = isCallable$o;
  var hasOwn$8 = hasOwnProperty_1;
  var DESCRIPTORS$8 = descriptors;
  var CONFIGURABLE_FUNCTION_NAME$1 = functionName.CONFIGURABLE;
  var inspectSource$2 = inspectSource$3;
  var InternalStateModule$5 = internalState;
  var enforceInternalState = InternalStateModule$5.enforce;
  var getInternalState$3 = InternalStateModule$5.get;
  var $String$2 = String;
  var defineProperty$8 = Object.defineProperty;
  var stringSlice$6 = uncurryThis$q("".slice);
  var replace$3 = uncurryThis$q("".replace);
  var join = uncurryThis$q([].join);
  var CONFIGURABLE_LENGTH = DESCRIPTORS$8 && !fails$o(function() {
    return defineProperty$8(function() {
    }, "length", { value: 8 }).length !== 8;
  });
  var TEMPLATE = String(String).split("String");
  var makeBuiltIn$2 = makeBuiltIn$3.exports = function(value, name, options) {
    if (stringSlice$6($String$2(name), 0, 7) === "Symbol(") {
      name = "[" + replace$3($String$2(name), /^Symbol\(([^)]*)\)/, "$1") + "]";
    }
    if (options && options.getter) name = "get " + name;
    if (options && options.setter) name = "set " + name;
    if (!hasOwn$8(value, "name") || CONFIGURABLE_FUNCTION_NAME$1 && value.name !== name) {
      if (DESCRIPTORS$8) defineProperty$8(value, "name", { value: name, configurable: true });
      else value.name = name;
    }
    if (CONFIGURABLE_LENGTH && options && hasOwn$8(options, "arity") && value.length !== options.arity) {
      defineProperty$8(value, "length", { value: options.arity });
    }
    try {
      if (options && hasOwn$8(options, "constructor") && options.constructor) {
        if (DESCRIPTORS$8) defineProperty$8(value, "prototype", { writable: false });
      } else if (value.prototype) value.prototype = void 0;
    } catch (error) {
    }
    var state = enforceInternalState(value);
    if (!hasOwn$8(state, "source")) {
      state.source = join(TEMPLATE, typeof name == "string" ? name : "");
    }
    return value;
  };
  Function.prototype.toString = makeBuiltIn$2(function toString() {
    return isCallable$g(this) && getInternalState$3(this).source || inspectSource$2(this);
  }, "toString");
  var makeBuiltInExports = makeBuiltIn$3.exports;
  var isCallable$f = isCallable$o;
  var definePropertyModule$3 = objectDefineProperty;
  var makeBuiltIn$1 = makeBuiltInExports;
  var defineGlobalProperty$1 = defineGlobalProperty$3;
  var defineBuiltIn$9 = function(O, key, value, options) {
    if (!options) options = {};
    var simple = options.enumerable;
    var name = options.name !== void 0 ? options.name : key;
    if (isCallable$f(value)) makeBuiltIn$1(value, name, options);
    if (options.global) {
      if (simple) O[key] = value;
      else defineGlobalProperty$1(key, value);
    } else {
      try {
        if (!options.unsafe) delete O[key];
        else if (O[key]) simple = true;
      } catch (error) {
      }
      if (simple) O[key] = value;
      else definePropertyModule$3.f(O, key, {
        value,
        enumerable: false,
        configurable: !options.nonConfigurable,
        writable: !options.nonWritable
      });
    }
    return O;
  };
  var uncurryThis$p = functionUncurryThis;
  var toString$b = uncurryThis$p({}.toString);
  var stringSlice$5 = uncurryThis$p("".slice);
  var classofRaw$2 = function(it) {
    return stringSlice$5(toString$b(it), 8, -1);
  };
  var TO_STRING_TAG_SUPPORT$2 = toStringTagSupport;
  var isCallable$e = isCallable$o;
  var classofRaw$1 = classofRaw$2;
  var wellKnownSymbol$j = wellKnownSymbol$m;
  var TO_STRING_TAG$1 = wellKnownSymbol$j("toStringTag");
  var $Object$2 = Object;
  var CORRECT_ARGUMENTS = classofRaw$1(/* @__PURE__ */ (function() {
    return arguments;
  })()) === "Arguments";
  var tryGet = function(it, key) {
    try {
      return it[key];
    } catch (error) {
    }
  };
  var classof$b = TO_STRING_TAG_SUPPORT$2 ? classofRaw$1 : function(it) {
    var O, tag, result;
    return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet(O = $Object$2(it), TO_STRING_TAG$1)) == "string" ? tag : CORRECT_ARGUMENTS ? classofRaw$1(O) : (result = classofRaw$1(O)) === "Object" && isCallable$e(O.callee) ? "Arguments" : result;
  };
  var TO_STRING_TAG_SUPPORT$1 = toStringTagSupport;
  var classof$a = classof$b;
  var objectToString$2 = TO_STRING_TAG_SUPPORT$1 ? {}.toString : function toString2() {
    return "[object " + classof$a(this) + "]";
  };
  var TO_STRING_TAG_SUPPORT = toStringTagSupport;
  var defineBuiltIn$8 = defineBuiltIn$9;
  var toString$a = objectToString$2;
  if (!TO_STRING_TAG_SUPPORT) {
    defineBuiltIn$8(Object.prototype, "toString", toString$a, { unsafe: true });
  }
  var objectGetOwnPropertyDescriptor = {};
  var objectPropertyIsEnumerable = {};
  var $propertyIsEnumerable$1 = {}.propertyIsEnumerable;
  var getOwnPropertyDescriptor$3 = Object.getOwnPropertyDescriptor;
  var NASHORN_BUG = getOwnPropertyDescriptor$3 && !$propertyIsEnumerable$1.call({ 1: 2 }, 1);
  objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
    var descriptor = getOwnPropertyDescriptor$3(this, V);
    return !!descriptor && descriptor.enumerable;
  } : $propertyIsEnumerable$1;
  var uncurryThis$o = functionUncurryThis;
  var fails$n = fails$u;
  var classof$9 = classofRaw$2;
  var $Object$1 = Object;
  var split = uncurryThis$o("".split);
  var indexedObject = fails$n(function() {
    return !$Object$1("z").propertyIsEnumerable(0);
  }) ? function(it) {
    return classof$9(it) === "String" ? split(it, "") : $Object$1(it);
  } : $Object$1;
  var IndexedObject$3 = indexedObject;
  var requireObjectCoercible$5 = requireObjectCoercible$7;
  var toIndexedObject$9 = function(it) {
    return IndexedObject$3(requireObjectCoercible$5(it));
  };
  var DESCRIPTORS$7 = descriptors;
  var call$f = functionCall;
  var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
  var createPropertyDescriptor$2 = createPropertyDescriptor$4;
  var toIndexedObject$8 = toIndexedObject$9;
  var toPropertyKey$1 = toPropertyKey$3;
  var hasOwn$7 = hasOwnProperty_1;
  var IE8_DOM_DEFINE = ie8DomDefine;
  var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  objectGetOwnPropertyDescriptor.f = DESCRIPTORS$7 ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
    O = toIndexedObject$8(O);
    P = toPropertyKey$1(P);
    if (IE8_DOM_DEFINE) try {
      return $getOwnPropertyDescriptor(O, P);
    } catch (error) {
    }
    if (hasOwn$7(O, P)) return createPropertyDescriptor$2(!call$f(propertyIsEnumerableModule$1.f, O, P), O[P]);
  };
  var objectGetOwnPropertyNames = {};
  var ceil = Math.ceil;
  var floor$2 = Math.floor;
  var mathTrunc = Math.trunc || function trunc(x) {
    var n = +x;
    return (n > 0 ? floor$2 : ceil)(n);
  };
  var trunc2 = mathTrunc;
  var toIntegerOrInfinity$4 = function(argument) {
    var number5 = +argument;
    return number5 !== number5 || number5 === 0 ? 0 : trunc2(number5);
  };
  var toIntegerOrInfinity$3 = toIntegerOrInfinity$4;
  var max$3 = Math.max;
  var min$3 = Math.min;
  var toAbsoluteIndex$4 = function(index, length3) {
    var integer = toIntegerOrInfinity$3(index);
    return integer < 0 ? max$3(integer + length3, 0) : min$3(integer, length3);
  };
  var toIntegerOrInfinity$2 = toIntegerOrInfinity$4;
  var min$2 = Math.min;
  var toLength$3 = function(argument) {
    return argument > 0 ? min$2(toIntegerOrInfinity$2(argument), 9007199254740991) : 0;
  };
  var toLength$2 = toLength$3;
  var lengthOfArrayLike$9 = function(obj) {
    return toLength$2(obj.length);
  };
  var toIndexedObject$7 = toIndexedObject$9;
  var toAbsoluteIndex$3 = toAbsoluteIndex$4;
  var lengthOfArrayLike$8 = lengthOfArrayLike$9;
  var createMethod$4 = function(IS_INCLUDES) {
    return function($this, el, fromIndex) {
      var O = toIndexedObject$7($this);
      var length3 = lengthOfArrayLike$8(O);
      var index = toAbsoluteIndex$3(fromIndex, length3);
      var value;
      if (IS_INCLUDES && el !== el) while (length3 > index) {
        value = O[index++];
        if (value !== value) return true;
      }
      else for (; length3 > index; index++) {
        if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
      }
      return !IS_INCLUDES && -1;
    };
  };
  var arrayIncludes = {
    // `Array.prototype.includes` method
    // https://tc39.es/ecma262/#sec-array.prototype.includes
    includes: createMethod$4(true),
    // `Array.prototype.indexOf` method
    // https://tc39.es/ecma262/#sec-array.prototype.indexof
    indexOf: createMethod$4(false)
  };
  var uncurryThis$n = functionUncurryThis;
  var hasOwn$6 = hasOwnProperty_1;
  var toIndexedObject$6 = toIndexedObject$9;
  var indexOf$1 = arrayIncludes.indexOf;
  var hiddenKeys$3 = hiddenKeys$5;
  var push$4 = uncurryThis$n([].push);
  var objectKeysInternal = function(object, names) {
    var O = toIndexedObject$6(object);
    var i = 0;
    var result = [];
    var key;
    for (key in O) !hasOwn$6(hiddenKeys$3, key) && hasOwn$6(O, key) && push$4(result, key);
    while (names.length > i) if (hasOwn$6(O, key = names[i++])) {
      ~indexOf$1(result, key) || push$4(result, key);
    }
    return result;
  };
  var enumBugKeys$3 = [
    "constructor",
    "hasOwnProperty",
    "isPrototypeOf",
    "propertyIsEnumerable",
    "toLocaleString",
    "toString",
    "valueOf"
  ];
  var internalObjectKeys$1 = objectKeysInternal;
  var enumBugKeys$2 = enumBugKeys$3;
  var hiddenKeys$2 = enumBugKeys$2.concat("length", "prototype");
  objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return internalObjectKeys$1(O, hiddenKeys$2);
  };
  var objectGetOwnPropertySymbols = {};
  objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;
  var getBuiltIn$5 = getBuiltIn$7;
  var uncurryThis$m = functionUncurryThis;
  var getOwnPropertyNamesModule$1 = objectGetOwnPropertyNames;
  var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
  var anObject$d = anObject$f;
  var concat$2 = uncurryThis$m([].concat);
  var ownKeys$1 = getBuiltIn$5("Reflect", "ownKeys") || function ownKeys(it) {
    var keys12 = getOwnPropertyNamesModule$1.f(anObject$d(it));
    var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
    return getOwnPropertySymbols ? concat$2(keys12, getOwnPropertySymbols(it)) : keys12;
  };
  var hasOwn$5 = hasOwnProperty_1;
  var ownKeys2 = ownKeys$1;
  var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
  var definePropertyModule$2 = objectDefineProperty;
  var copyConstructorProperties$1 = function(target, source, exceptions) {
    var keys12 = ownKeys2(source);
    var defineProperty13 = definePropertyModule$2.f;
    var getOwnPropertyDescriptor9 = getOwnPropertyDescriptorModule.f;
    for (var i = 0; i < keys12.length; i++) {
      var key = keys12[i];
      if (!hasOwn$5(target, key) && !(exceptions && hasOwn$5(exceptions, key))) {
        defineProperty13(target, key, getOwnPropertyDescriptor9(source, key));
      }
    }
  };
  var fails$m = fails$u;
  var isCallable$d = isCallable$o;
  var replacement = /#|\.prototype\./;
  var isForced$3 = function(feature, detection) {
    var value = data2[normalize2(feature)];
    return value === POLYFILL ? true : value === NATIVE ? false : isCallable$d(detection) ? fails$m(detection) : !!detection;
  };
  var normalize2 = isForced$3.normalize = function(string) {
    return String(string).replace(replacement, ".").toLowerCase();
  };
  var data2 = isForced$3.data = {};
  var NATIVE = isForced$3.NATIVE = "N";
  var POLYFILL = isForced$3.POLYFILL = "P";
  var isForced_1 = isForced$3;
  var global$d = global$n;
  var getOwnPropertyDescriptor$2 = objectGetOwnPropertyDescriptor.f;
  var createNonEnumerableProperty$4 = createNonEnumerableProperty$6;
  var defineBuiltIn$7 = defineBuiltIn$9;
  var defineGlobalProperty = defineGlobalProperty$3;
  var copyConstructorProperties = copyConstructorProperties$1;
  var isForced$2 = isForced_1;
  var _export = function(options, source) {
    var TARGET = options.target;
    var GLOBAL = options.global;
    var STATIC = options.stat;
    var FORCED5, target, key, targetProperty, sourceProperty, descriptor;
    if (GLOBAL) {
      target = global$d;
    } else if (STATIC) {
      target = global$d[TARGET] || defineGlobalProperty(TARGET, {});
    } else {
      target = (global$d[TARGET] || {}).prototype;
    }
    if (target) for (key in source) {
      sourceProperty = source[key];
      if (options.dontCallGetSet) {
        descriptor = getOwnPropertyDescriptor$2(target, key);
        targetProperty = descriptor && descriptor.value;
      } else targetProperty = target[key];
      FORCED5 = isForced$2(GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key, options.forced);
      if (!FORCED5 && targetProperty !== void 0) {
        if (typeof sourceProperty == typeof targetProperty) continue;
        copyConstructorProperties(sourceProperty, targetProperty);
      }
      if (options.sham || targetProperty && targetProperty.sham) {
        createNonEnumerableProperty$4(sourceProperty, "sham", true);
      }
      defineBuiltIn$7(target, key, sourceProperty, options);
    }
  };
  var global$c = global$n;
  var classof$8 = classofRaw$2;
  var engineIsNode = classof$8(global$c.process) === "process";
  var uncurryThis$l = functionUncurryThis;
  var aCallable$8 = aCallable$a;
  var functionUncurryThisAccessor = function(object, key, method) {
    try {
      return uncurryThis$l(aCallable$8(Object.getOwnPropertyDescriptor(object, key)[method]));
    } catch (error) {
    }
  };
  var isCallable$c = isCallable$o;
  var $String$1 = String;
  var $TypeError$a = TypeError;
  var aPossiblePrototype$1 = function(argument) {
    if (typeof argument == "object" || isCallable$c(argument)) return argument;
    throw new $TypeError$a("Can't set " + $String$1(argument) + " as a prototype");
  };
  var uncurryThisAccessor = functionUncurryThisAccessor;
  var anObject$c = anObject$f;
  var aPossiblePrototype = aPossiblePrototype$1;
  var objectSetPrototypeOf = Object.setPrototypeOf || ("__proto__" in {} ? (function() {
    var CORRECT_SETTER = false;
    var test5 = {};
    var setter;
    try {
      setter = uncurryThisAccessor(Object.prototype, "__proto__", "set");
      setter(test5, []);
      CORRECT_SETTER = test5 instanceof Array;
    } catch (error) {
    }
    return function setPrototypeOf5(O, proto) {
      anObject$c(O);
      aPossiblePrototype(proto);
      if (CORRECT_SETTER) setter(O, proto);
      else O.__proto__ = proto;
      return O;
    };
  })() : void 0);
  var defineProperty$7 = objectDefineProperty.f;
  var hasOwn$4 = hasOwnProperty_1;
  var wellKnownSymbol$i = wellKnownSymbol$m;
  var TO_STRING_TAG = wellKnownSymbol$i("toStringTag");
  var setToStringTag$5 = function(target, TAG, STATIC) {
    if (target && !STATIC) target = target.prototype;
    if (target && !hasOwn$4(target, TO_STRING_TAG)) {
      defineProperty$7(target, TO_STRING_TAG, { configurable: true, value: TAG });
    }
  };
  var makeBuiltIn = makeBuiltInExports;
  var defineProperty$6 = objectDefineProperty;
  var defineBuiltInAccessor$3 = function(target, name, descriptor) {
    if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });
    if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });
    return defineProperty$6.f(target, name, descriptor);
  };
  var getBuiltIn$4 = getBuiltIn$7;
  var defineBuiltInAccessor$2 = defineBuiltInAccessor$3;
  var wellKnownSymbol$h = wellKnownSymbol$m;
  var DESCRIPTORS$6 = descriptors;
  var SPECIES$6 = wellKnownSymbol$h("species");
  var setSpecies$2 = function(CONSTRUCTOR_NAME) {
    var Constructor = getBuiltIn$4(CONSTRUCTOR_NAME);
    if (DESCRIPTORS$6 && Constructor && !Constructor[SPECIES$6]) {
      defineBuiltInAccessor$2(Constructor, SPECIES$6, {
        configurable: true,
        get: function() {
          return this;
        }
      });
    }
  };
  var isPrototypeOf$1 = objectIsPrototypeOf;
  var $TypeError$9 = TypeError;
  var anInstance$4 = function(it, Prototype) {
    if (isPrototypeOf$1(Prototype, it)) return it;
    throw new $TypeError$9("Incorrect invocation");
  };
  var uncurryThis$k = functionUncurryThis;
  var fails$l = fails$u;
  var isCallable$b = isCallable$o;
  var classof$7 = classof$b;
  var getBuiltIn$3 = getBuiltIn$7;
  var inspectSource$1 = inspectSource$3;
  var noop2 = function() {
  };
  var empty2 = [];
  var construct = getBuiltIn$3("Reflect", "construct");
  var constructorRegExp = /^\s*(?:class|function)\b/;
  var exec$1 = uncurryThis$k(constructorRegExp.exec);
  var INCORRECT_TO_STRING = !constructorRegExp.test(noop2);
  var isConstructorModern = function isConstructor(argument) {
    if (!isCallable$b(argument)) return false;
    try {
      construct(noop2, empty2, argument);
      return true;
    } catch (error) {
      return false;
    }
  };
  var isConstructorLegacy = function isConstructor2(argument) {
    if (!isCallable$b(argument)) return false;
    switch (classof$7(argument)) {
      case "AsyncFunction":
      case "GeneratorFunction":
      case "AsyncGeneratorFunction":
        return false;
    }
    try {
      return INCORRECT_TO_STRING || !!exec$1(constructorRegExp, inspectSource$1(argument));
    } catch (error) {
      return true;
    }
  };
  isConstructorLegacy.sham = true;
  var isConstructor$4 = !construct || fails$l(function() {
    var called;
    return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function() {
      called = true;
    }) || called;
  }) ? isConstructorLegacy : isConstructorModern;
  var isConstructor$3 = isConstructor$4;
  var tryToString$3 = tryToString$5;
  var $TypeError$8 = TypeError;
  var aConstructor$1 = function(argument) {
    if (isConstructor$3(argument)) return argument;
    throw new $TypeError$8(tryToString$3(argument) + " is not a constructor");
  };
  var anObject$b = anObject$f;
  var aConstructor = aConstructor$1;
  var isNullOrUndefined$5 = isNullOrUndefined$8;
  var wellKnownSymbol$g = wellKnownSymbol$m;
  var SPECIES$5 = wellKnownSymbol$g("species");
  var speciesConstructor$1 = function(O, defaultConstructor) {
    var C2 = anObject$b(O).constructor;
    var S;
    return C2 === void 0 || isNullOrUndefined$5(S = anObject$b(C2)[SPECIES$5]) ? defaultConstructor : aConstructor(S);
  };
  var NATIVE_BIND$1 = functionBindNative;
  var FunctionPrototype$1 = Function.prototype;
  var apply$3 = FunctionPrototype$1.apply;
  var call$e = FunctionPrototype$1.call;
  var functionApply = typeof Reflect == "object" && Reflect.apply || (NATIVE_BIND$1 ? call$e.bind(apply$3) : function() {
    return call$e.apply(apply$3, arguments);
  });
  var classofRaw = classofRaw$2;
  var uncurryThis$j = functionUncurryThis;
  var functionUncurryThisClause = function(fn2) {
    if (classofRaw(fn2) === "Function") return uncurryThis$j(fn2);
  };
  var uncurryThis$i = functionUncurryThisClause;
  var aCallable$7 = aCallable$a;
  var NATIVE_BIND = functionBindNative;
  var bind$7 = uncurryThis$i(uncurryThis$i.bind);
  var functionBindContext = function(fn2, that) {
    aCallable$7(fn2);
    return that === void 0 ? fn2 : NATIVE_BIND ? bind$7(fn2, that) : function() {
      return fn2.apply(that, arguments);
    };
  };
  var getBuiltIn$2 = getBuiltIn$7;
  var html$2 = getBuiltIn$2("document", "documentElement");
  var uncurryThis$h = functionUncurryThis;
  var arraySlice$3 = uncurryThis$h([].slice);
  var $TypeError$7 = TypeError;
  var validateArgumentsLength$1 = function(passed, required) {
    if (passed < required) throw new $TypeError$7("Not enough arguments");
    return passed;
  };
  var userAgent$4 = engineUserAgent;
  var engineIsIos = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$4);
  var global$b = global$n;
  var apply$2 = functionApply;
  var bind$6 = functionBindContext;
  var isCallable$a = isCallable$o;
  var hasOwn$3 = hasOwnProperty_1;
  var fails$k = fails$u;
  var html$1 = html$2;
  var arraySlice$2 = arraySlice$3;
  var createElement = documentCreateElement$2;
  var validateArgumentsLength = validateArgumentsLength$1;
  var IS_IOS$1 = engineIsIos;
  var IS_NODE$3 = engineIsNode;
  var set$1 = global$b.setImmediate;
  var clear = global$b.clearImmediate;
  var process$2 = global$b.process;
  var Dispatch2 = global$b.Dispatch;
  var Function$1 = global$b.Function;
  var MessageChannel = global$b.MessageChannel;
  var String$1 = global$b.String;
  var counter = 0;
  var queue$2 = {};
  var ONREADYSTATECHANGE = "onreadystatechange";
  var $location;
  var defer;
  var channel;
  var port;
  fails$k(function() {
    $location = global$b.location;
  });
  var run = function(id6) {
    if (hasOwn$3(queue$2, id6)) {
      var fn2 = queue$2[id6];
      delete queue$2[id6];
      fn2();
    }
  };
  var runner = function(id6) {
    return function() {
      run(id6);
    };
  };
  var eventListener = function(event) {
    run(event.data);
  };
  var globalPostMessageDefer = function(id6) {
    global$b.postMessage(String$1(id6), $location.protocol + "//" + $location.host);
  };
  if (!set$1 || !clear) {
    set$1 = function setImmediate(handler) {
      validateArgumentsLength(arguments.length, 1);
      var fn2 = isCallable$a(handler) ? handler : Function$1(handler);
      var args = arraySlice$2(arguments, 1);
      queue$2[++counter] = function() {
        apply$2(fn2, void 0, args);
      };
      defer(counter);
      return counter;
    };
    clear = function clearImmediate(id6) {
      delete queue$2[id6];
    };
    if (IS_NODE$3) {
      defer = function(id6) {
        process$2.nextTick(runner(id6));
      };
    } else if (Dispatch2 && Dispatch2.now) {
      defer = function(id6) {
        Dispatch2.now(runner(id6));
      };
    } else if (MessageChannel && !IS_IOS$1) {
      channel = new MessageChannel();
      port = channel.port2;
      channel.port1.onmessage = eventListener;
      defer = bind$6(port.postMessage, port);
    } else if (global$b.addEventListener && isCallable$a(global$b.postMessage) && !global$b.importScripts && $location && $location.protocol !== "file:" && !fails$k(globalPostMessageDefer)) {
      defer = globalPostMessageDefer;
      global$b.addEventListener("message", eventListener, false);
    } else if (ONREADYSTATECHANGE in createElement("script")) {
      defer = function(id6) {
        html$1.appendChild(createElement("script"))[ONREADYSTATECHANGE] = function() {
          html$1.removeChild(this);
          run(id6);
        };
      };
    } else {
      defer = function(id6) {
        setTimeout(runner(id6), 0);
      };
    }
  }
  var task$1 = {
    set: set$1,
    clear
  };
  var Queue$2 = function() {
    this.head = null;
    this.tail = null;
  };
  Queue$2.prototype = {
    add: function(item) {
      var entry = { item, next: null };
      var tail = this.tail;
      if (tail) tail.next = entry;
      else this.head = entry;
      this.tail = entry;
    },
    get: function() {
      var entry = this.head;
      if (entry) {
        var next5 = this.head = entry.next;
        if (next5 === null) this.tail = null;
        return entry.item;
      }
    }
  };
  var queue$1 = Queue$2;
  var userAgent$3 = engineUserAgent;
  var engineIsIosPebble = /ipad|iphone|ipod/i.test(userAgent$3) && typeof Pebble != "undefined";
  var userAgent$2 = engineUserAgent;
  var engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(userAgent$2);
  var global$a = global$n;
  var bind$5 = functionBindContext;
  var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
  var macrotask = task$1.set;
  var Queue$1 = queue$1;
  var IS_IOS = engineIsIos;
  var IS_IOS_PEBBLE = engineIsIosPebble;
  var IS_WEBOS_WEBKIT = engineIsWebosWebkit;
  var IS_NODE$2 = engineIsNode;
  var MutationObserver = global$a.MutationObserver || global$a.WebKitMutationObserver;
  var document$2 = global$a.document;
  var process$1 = global$a.process;
  var Promise$3 = global$a.Promise;
  var queueMicrotaskDescriptor = getOwnPropertyDescriptor$1(global$a, "queueMicrotask");
  var microtask$1 = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
  var notify$1;
  var toggle;
  var node;
  var promise;
  var then;
  if (!microtask$1) {
    queue = new Queue$1();
    flush = function() {
      var parent, fn2;
      if (IS_NODE$2 && (parent = process$1.domain)) parent.exit();
      while (fn2 = queue.get()) try {
        fn2();
      } catch (error) {
        if (queue.head) notify$1();
        throw error;
      }
      if (parent) parent.enter();
    };
    if (!IS_IOS && !IS_NODE$2 && !IS_WEBOS_WEBKIT && MutationObserver && document$2) {
      toggle = true;
      node = document$2.createTextNode("");
      new MutationObserver(flush).observe(node, { characterData: true });
      notify$1 = function() {
        node.data = toggle = !toggle;
      };
    } else if (!IS_IOS_PEBBLE && Promise$3 && Promise$3.resolve) {
      promise = Promise$3.resolve(void 0);
      promise.constructor = Promise$3;
      then = bind$5(promise.then, promise);
      notify$1 = function() {
        then(flush);
      };
    } else if (IS_NODE$2) {
      notify$1 = function() {
        process$1.nextTick(flush);
      };
    } else {
      macrotask = bind$5(macrotask, global$a);
      notify$1 = function() {
        macrotask(flush);
      };
    }
    microtask$1 = function(fn2) {
      if (!queue.head) notify$1();
      queue.add(fn2);
    };
  }
  var queue;
  var flush;
  var microtask_1 = microtask$1;
  var hostReportErrors$1 = function(a2, b) {
    try {
      arguments.length === 1 ? console.error(a2) : console.error(a2, b);
    } catch (error) {
    }
  };
  var perform$4 = function(exec5) {
    try {
      return { error: false, value: exec5() };
    } catch (error) {
      return { error: true, value: error };
    }
  };
  var global$9 = global$n;
  var promiseNativeConstructor = global$9.Promise;
  var engineIsDeno = typeof Deno == "object" && Deno && typeof Deno.version == "object";
  var IS_DENO$1 = engineIsDeno;
  var IS_NODE$1 = engineIsNode;
  var engineIsBrowser = !IS_DENO$1 && !IS_NODE$1 && typeof window == "object" && typeof document == "object";
  var global$8 = global$n;
  var NativePromiseConstructor$3 = promiseNativeConstructor;
  var isCallable$9 = isCallable$o;
  var isForced$1 = isForced_1;
  var inspectSource = inspectSource$3;
  var wellKnownSymbol$f = wellKnownSymbol$m;
  var IS_BROWSER = engineIsBrowser;
  var IS_DENO = engineIsDeno;
  var V8_VERSION$2 = engineV8Version;
  NativePromiseConstructor$3 && NativePromiseConstructor$3.prototype;
  var SPECIES$4 = wellKnownSymbol$f("species");
  var SUBCLASSING = false;
  var NATIVE_PROMISE_REJECTION_EVENT$1 = isCallable$9(global$8.PromiseRejectionEvent);
  var FORCED_PROMISE_CONSTRUCTOR$5 = isForced$1("Promise", function() {
    var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor$3);
    var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor$3);
    if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION$2 === 66) return true;
    if (!V8_VERSION$2 || V8_VERSION$2 < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
      var promise5 = new NativePromiseConstructor$3(function(resolve5) {
        resolve5(1);
      });
      var FakePromise = function(exec5) {
        exec5(function() {
        }, function() {
        });
      };
      var constructor = promise5.constructor = {};
      constructor[SPECIES$4] = FakePromise;
      SUBCLASSING = promise5.then(function() {
      }) instanceof FakePromise;
      if (!SUBCLASSING) return true;
    }
    return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER || IS_DENO) && !NATIVE_PROMISE_REJECTION_EVENT$1;
  });
  var promiseConstructorDetection = {
    CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$5,
    REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$1,
    SUBCLASSING
  };
  var newPromiseCapability$2 = {};
  var aCallable$6 = aCallable$a;
  var $TypeError$6 = TypeError;
  var PromiseCapability = function(C2) {
    var resolve5, reject5;
    this.promise = new C2(function($$resolve, $$reject) {
      if (resolve5 !== void 0 || reject5 !== void 0) throw new $TypeError$6("Bad Promise constructor");
      resolve5 = $$resolve;
      reject5 = $$reject;
    });
    this.resolve = aCallable$6(resolve5);
    this.reject = aCallable$6(reject5);
  };
  newPromiseCapability$2.f = function(C2) {
    return new PromiseCapability(C2);
  };
  var $$p = _export;
  var IS_NODE = engineIsNode;
  var global$7 = global$n;
  var call$d = functionCall;
  var defineBuiltIn$6 = defineBuiltIn$9;
  var setPrototypeOf$2 = objectSetPrototypeOf;
  var setToStringTag$4 = setToStringTag$5;
  var setSpecies$1 = setSpecies$2;
  var aCallable$5 = aCallable$a;
  var isCallable$8 = isCallable$o;
  var isObject$d = isObject$j;
  var anInstance$3 = anInstance$4;
  var speciesConstructor = speciesConstructor$1;
  var task = task$1.set;
  var microtask = microtask_1;
  var hostReportErrors = hostReportErrors$1;
  var perform$3 = perform$4;
  var Queue = queue$1;
  var InternalStateModule$4 = internalState;
  var NativePromiseConstructor$2 = promiseNativeConstructor;
  var PromiseConstructorDetection = promiseConstructorDetection;
  var newPromiseCapabilityModule$4 = newPromiseCapability$2;
  var PROMISE = "Promise";
  var FORCED_PROMISE_CONSTRUCTOR$4 = PromiseConstructorDetection.CONSTRUCTOR;
  var NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;
  var NATIVE_PROMISE_SUBCLASSING = PromiseConstructorDetection.SUBCLASSING;
  var getInternalPromiseState = InternalStateModule$4.getterFor(PROMISE);
  var setInternalState$4 = InternalStateModule$4.set;
  var NativePromisePrototype$1 = NativePromiseConstructor$2 && NativePromiseConstructor$2.prototype;
  var PromiseConstructor = NativePromiseConstructor$2;
  var PromisePrototype = NativePromisePrototype$1;
  var TypeError$1 = global$7.TypeError;
  var document$1 = global$7.document;
  var process = global$7.process;
  var newPromiseCapability$1 = newPromiseCapabilityModule$4.f;
  var newGenericPromiseCapability = newPromiseCapability$1;
  var DISPATCH_EVENT = !!(document$1 && document$1.createEvent && global$7.dispatchEvent);
  var UNHANDLED_REJECTION = "unhandledrejection";
  var REJECTION_HANDLED = "rejectionhandled";
  var PENDING = 0;
  var FULFILLED = 1;
  var REJECTED = 2;
  var HANDLED = 1;
  var UNHANDLED = 2;
  var Internal;
  var OwnPromiseCapability;
  var PromiseWrapper;
  var nativeThen;
  var isThenable = function(it) {
    var then5;
    return isObject$d(it) && isCallable$8(then5 = it.then) ? then5 : false;
  };
  var callReaction = function(reaction, state) {
    var value = state.value;
    var ok = state.state === FULFILLED;
    var handler = ok ? reaction.ok : reaction.fail;
    var resolve5 = reaction.resolve;
    var reject5 = reaction.reject;
    var domain = reaction.domain;
    var result, then5, exited;
    try {
      if (handler) {
        if (!ok) {
          if (state.rejection === UNHANDLED) onHandleUnhandled(state);
          state.rejection = HANDLED;
        }
        if (handler === true) result = value;
        else {
          if (domain) domain.enter();
          result = handler(value);
          if (domain) {
            domain.exit();
            exited = true;
          }
        }
        if (result === reaction.promise) {
          reject5(new TypeError$1("Promise-chain cycle"));
        } else if (then5 = isThenable(result)) {
          call$d(then5, result, resolve5, reject5);
        } else resolve5(result);
      } else reject5(value);
    } catch (error) {
      if (domain && !exited) domain.exit();
      reject5(error);
    }
  };
  var notify = function(state, isReject) {
    if (state.notified) return;
    state.notified = true;
    microtask(function() {
      var reactions = state.reactions;
      var reaction;
      while (reaction = reactions.get()) {
        callReaction(reaction, state);
      }
      state.notified = false;
      if (isReject && !state.rejection) onUnhandled(state);
    });
  };
  var dispatchEvent2 = function(name, promise5, reason) {
    var event, handler;
    if (DISPATCH_EVENT) {
      event = document$1.createEvent("Event");
      event.promise = promise5;
      event.reason = reason;
      event.initEvent(name, false, true);
      global$7.dispatchEvent(event);
    } else event = { promise: promise5, reason };
    if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global$7["on" + name])) handler(event);
    else if (name === UNHANDLED_REJECTION) hostReportErrors("Unhandled promise rejection", reason);
  };
  var onUnhandled = function(state) {
    call$d(task, global$7, function() {
      var promise5 = state.facade;
      var value = state.value;
      var IS_UNHANDLED = isUnhandled(state);
      var result;
      if (IS_UNHANDLED) {
        result = perform$3(function() {
          if (IS_NODE) {
            process.emit("unhandledRejection", value, promise5);
          } else dispatchEvent2(UNHANDLED_REJECTION, promise5, value);
        });
        state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
        if (result.error) throw result.value;
      }
    });
  };
  var isUnhandled = function(state) {
    return state.rejection !== HANDLED && !state.parent;
  };
  var onHandleUnhandled = function(state) {
    call$d(task, global$7, function() {
      var promise5 = state.facade;
      if (IS_NODE) {
        process.emit("rejectionHandled", promise5);
      } else dispatchEvent2(REJECTION_HANDLED, promise5, state.value);
    });
  };
  var bind$4 = function(fn2, state, unwrap) {
    return function(value) {
      fn2(state, value, unwrap);
    };
  };
  var internalReject = function(state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    state.value = value;
    state.state = REJECTED;
    notify(state, true);
  };
  var internalResolve = function(state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    try {
      if (state.facade === value) throw new TypeError$1("Promise can't be resolved itself");
      var then5 = isThenable(value);
      if (then5) {
        microtask(function() {
          var wrapper = { done: false };
          try {
            call$d(
              then5,
              value,
              bind$4(internalResolve, wrapper, state),
              bind$4(internalReject, wrapper, state)
            );
          } catch (error) {
            internalReject(wrapper, error, state);
          }
        });
      } else {
        state.value = value;
        state.state = FULFILLED;
        notify(state, false);
      }
    } catch (error) {
      internalReject({ done: false }, error, state);
    }
  };
  if (FORCED_PROMISE_CONSTRUCTOR$4) {
    PromiseConstructor = function Promise2(executor) {
      anInstance$3(this, PromisePrototype);
      aCallable$5(executor);
      call$d(Internal, this);
      var state = getInternalPromiseState(this);
      try {
        executor(bind$4(internalResolve, state), bind$4(internalReject, state));
      } catch (error) {
        internalReject(state, error);
      }
    };
    PromisePrototype = PromiseConstructor.prototype;
    Internal = function Promise2(executor) {
      setInternalState$4(this, {
        type: PROMISE,
        done: false,
        notified: false,
        parent: false,
        reactions: new Queue(),
        rejection: false,
        state: PENDING,
        value: void 0
      });
    };
    Internal.prototype = defineBuiltIn$6(PromisePrototype, "then", function then5(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability$1(speciesConstructor(this, PromiseConstructor));
      state.parent = true;
      reaction.ok = isCallable$8(onFulfilled) ? onFulfilled : true;
      reaction.fail = isCallable$8(onRejected) && onRejected;
      reaction.domain = IS_NODE ? process.domain : void 0;
      if (state.state === PENDING) state.reactions.add(reaction);
      else microtask(function() {
        callReaction(reaction, state);
      });
      return reaction.promise;
    });
    OwnPromiseCapability = function() {
      var promise5 = new Internal();
      var state = getInternalPromiseState(promise5);
      this.promise = promise5;
      this.resolve = bind$4(internalResolve, state);
      this.reject = bind$4(internalReject, state);
    };
    newPromiseCapabilityModule$4.f = newPromiseCapability$1 = function(C2) {
      return C2 === PromiseConstructor || C2 === PromiseWrapper ? new OwnPromiseCapability(C2) : newGenericPromiseCapability(C2);
    };
    if (isCallable$8(NativePromiseConstructor$2) && NativePromisePrototype$1 !== Object.prototype) {
      nativeThen = NativePromisePrototype$1.then;
      if (!NATIVE_PROMISE_SUBCLASSING) {
        defineBuiltIn$6(NativePromisePrototype$1, "then", function then5(onFulfilled, onRejected) {
          var that = this;
          return new PromiseConstructor(function(resolve5, reject5) {
            call$d(nativeThen, that, resolve5, reject5);
          }).then(onFulfilled, onRejected);
        }, { unsafe: true });
      }
      try {
        delete NativePromisePrototype$1.constructor;
      } catch (error) {
      }
      if (setPrototypeOf$2) {
        setPrototypeOf$2(NativePromisePrototype$1, PromisePrototype);
      }
    }
  }
  $$p({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR$4 }, {
    Promise: PromiseConstructor
  });
  setToStringTag$4(PromiseConstructor, PROMISE, false);
  setSpecies$1(PROMISE);
  var iterators = {};
  var wellKnownSymbol$e = wellKnownSymbol$m;
  var Iterators$4 = iterators;
  var ITERATOR$5 = wellKnownSymbol$e("iterator");
  var ArrayPrototype$1 = Array.prototype;
  var isArrayIteratorMethod$2 = function(it) {
    return it !== void 0 && (Iterators$4.Array === it || ArrayPrototype$1[ITERATOR$5] === it);
  };
  var classof$6 = classof$b;
  var getMethod$2 = getMethod$4;
  var isNullOrUndefined$4 = isNullOrUndefined$8;
  var Iterators$3 = iterators;
  var wellKnownSymbol$d = wellKnownSymbol$m;
  var ITERATOR$4 = wellKnownSymbol$d("iterator");
  var getIteratorMethod$3 = function(it) {
    if (!isNullOrUndefined$4(it)) return getMethod$2(it, ITERATOR$4) || getMethod$2(it, "@@iterator") || Iterators$3[classof$6(it)];
  };
  var call$c = functionCall;
  var aCallable$4 = aCallable$a;
  var anObject$a = anObject$f;
  var tryToString$2 = tryToString$5;
  var getIteratorMethod$2 = getIteratorMethod$3;
  var $TypeError$5 = TypeError;
  var getIterator$2 = function(argument, usingIterator) {
    var iteratorMethod = arguments.length < 2 ? getIteratorMethod$2(argument) : usingIterator;
    if (aCallable$4(iteratorMethod)) return anObject$a(call$c(iteratorMethod, argument));
    throw new $TypeError$5(tryToString$2(argument) + " is not iterable");
  };
  var call$b = functionCall;
  var anObject$9 = anObject$f;
  var getMethod$1 = getMethod$4;
  var iteratorClose$2 = function(iterator, kind, value) {
    var innerResult, innerError;
    anObject$9(iterator);
    try {
      innerResult = getMethod$1(iterator, "return");
      if (!innerResult) {
        if (kind === "throw") throw value;
        return value;
      }
      innerResult = call$b(innerResult, iterator);
    } catch (error) {
      innerError = true;
      innerResult = error;
    }
    if (kind === "throw") throw value;
    if (innerError) throw innerResult;
    anObject$9(innerResult);
    return value;
  };
  var bind$3 = functionBindContext;
  var call$a = functionCall;
  var anObject$8 = anObject$f;
  var tryToString$1 = tryToString$5;
  var isArrayIteratorMethod$1 = isArrayIteratorMethod$2;
  var lengthOfArrayLike$7 = lengthOfArrayLike$9;
  var isPrototypeOf = objectIsPrototypeOf;
  var getIterator$1 = getIterator$2;
  var getIteratorMethod$1 = getIteratorMethod$3;
  var iteratorClose$1 = iteratorClose$2;
  var $TypeError$4 = TypeError;
  var Result = function(stopped, result) {
    this.stopped = stopped;
    this.result = result;
  };
  var ResultPrototype = Result.prototype;
  var iterate$6 = function(iterable, unboundFunction, options) {
    var that = options && options.that;
    var AS_ENTRIES = !!(options && options.AS_ENTRIES);
    var IS_RECORD = !!(options && options.IS_RECORD);
    var IS_ITERATOR = !!(options && options.IS_ITERATOR);
    var INTERRUPTED = !!(options && options.INTERRUPTED);
    var fn2 = bind$3(unboundFunction, that);
    var iterator, iterFn, index, length3, result, next5, step;
    var stop = function(condition) {
      if (iterator) iteratorClose$1(iterator, "normal", condition);
      return new Result(true, condition);
    };
    var callFn = function(value) {
      if (AS_ENTRIES) {
        anObject$8(value);
        return INTERRUPTED ? fn2(value[0], value[1], stop) : fn2(value[0], value[1]);
      }
      return INTERRUPTED ? fn2(value, stop) : fn2(value);
    };
    if (IS_RECORD) {
      iterator = iterable.iterator;
    } else if (IS_ITERATOR) {
      iterator = iterable;
    } else {
      iterFn = getIteratorMethod$1(iterable);
      if (!iterFn) throw new $TypeError$4(tryToString$1(iterable) + " is not iterable");
      if (isArrayIteratorMethod$1(iterFn)) {
        for (index = 0, length3 = lengthOfArrayLike$7(iterable); length3 > index; index++) {
          result = callFn(iterable[index]);
          if (result && isPrototypeOf(ResultPrototype, result)) return result;
        }
        return new Result(false);
      }
      iterator = getIterator$1(iterable, iterFn);
    }
    next5 = IS_RECORD ? iterable.next : iterator.next;
    while (!(step = call$a(next5, iterator)).done) {
      try {
        result = callFn(step.value);
      } catch (error) {
        iteratorClose$1(iterator, "throw", error);
      }
      if (typeof result == "object" && result && isPrototypeOf(ResultPrototype, result)) return result;
    }
    return new Result(false);
  };
  var wellKnownSymbol$c = wellKnownSymbol$m;
  var ITERATOR$3 = wellKnownSymbol$c("iterator");
  var SAFE_CLOSING = false;
  try {
    called = 0;
    iteratorWithReturn = {
      next: function() {
        return { done: !!called++ };
      },
      "return": function() {
        SAFE_CLOSING = true;
      }
    };
    iteratorWithReturn[ITERATOR$3] = function() {
      return this;
    };
    Array.from(iteratorWithReturn, function() {
      throw 2;
    });
  } catch (error) {
  }
  var called;
  var iteratorWithReturn;
  var checkCorrectnessOfIteration$3 = function(exec5, SKIP_CLOSING) {
    try {
      if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
    } catch (error) {
      return false;
    }
    var ITERATION_SUPPORT = false;
    try {
      var object = {};
      object[ITERATOR$3] = function() {
        return {
          next: function() {
            return { done: ITERATION_SUPPORT = true };
          }
        };
      };
      exec5(object);
    } catch (error) {
    }
    return ITERATION_SUPPORT;
  };
  var NativePromiseConstructor$1 = promiseNativeConstructor;
  var checkCorrectnessOfIteration$2 = checkCorrectnessOfIteration$3;
  var FORCED_PROMISE_CONSTRUCTOR$3 = promiseConstructorDetection.CONSTRUCTOR;
  var promiseStaticsIncorrectIteration = FORCED_PROMISE_CONSTRUCTOR$3 || !checkCorrectnessOfIteration$2(function(iterable) {
    NativePromiseConstructor$1.all(iterable).then(void 0, function() {
    });
  });
  var $$o = _export;
  var call$9 = functionCall;
  var aCallable$3 = aCallable$a;
  var newPromiseCapabilityModule$3 = newPromiseCapability$2;
  var perform$2 = perform$4;
  var iterate$5 = iterate$6;
  var PROMISE_STATICS_INCORRECT_ITERATION$2 = promiseStaticsIncorrectIteration;
  $$o({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$2 }, {
    all: function all(iterable) {
      var C2 = this;
      var capability = newPromiseCapabilityModule$3.f(C2);
      var resolve5 = capability.resolve;
      var reject5 = capability.reject;
      var result = perform$2(function() {
        var $promiseResolve = aCallable$3(C2.resolve);
        var values5 = [];
        var counter5 = 0;
        var remaining = 1;
        iterate$5(iterable, function(promise5) {
          var index = counter5++;
          var alreadyCalled = false;
          remaining++;
          call$9($promiseResolve, C2, promise5).then(function(value) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values5[index] = value;
            --remaining || resolve5(values5);
          }, reject5);
        });
        --remaining || resolve5(values5);
      });
      if (result.error) reject5(result.value);
      return capability.promise;
    }
  });
  var $$n = _export;
  var FORCED_PROMISE_CONSTRUCTOR$2 = promiseConstructorDetection.CONSTRUCTOR;
  var NativePromiseConstructor = promiseNativeConstructor;
  var getBuiltIn$1 = getBuiltIn$7;
  var isCallable$7 = isCallable$o;
  var defineBuiltIn$5 = defineBuiltIn$9;
  var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
  $$n({ target: "Promise", proto: true, forced: FORCED_PROMISE_CONSTRUCTOR$2, real: true }, {
    "catch": function(onRejected) {
      return this.then(void 0, onRejected);
    }
  });
  if (isCallable$7(NativePromiseConstructor)) {
    method = getBuiltIn$1("Promise").prototype["catch"];
    if (NativePromisePrototype["catch"] !== method) {
      defineBuiltIn$5(NativePromisePrototype, "catch", method, { unsafe: true });
    }
  }
  var method;
  var $$m = _export;
  var call$8 = functionCall;
  var aCallable$2 = aCallable$a;
  var newPromiseCapabilityModule$2 = newPromiseCapability$2;
  var perform$1 = perform$4;
  var iterate$4 = iterate$6;
  var PROMISE_STATICS_INCORRECT_ITERATION$1 = promiseStaticsIncorrectIteration;
  $$m({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$1 }, {
    race: function race(iterable) {
      var C2 = this;
      var capability = newPromiseCapabilityModule$2.f(C2);
      var reject5 = capability.reject;
      var result = perform$1(function() {
        var $promiseResolve = aCallable$2(C2.resolve);
        iterate$4(iterable, function(promise5) {
          call$8($promiseResolve, C2, promise5).then(capability.resolve, reject5);
        });
      });
      if (result.error) reject5(result.value);
      return capability.promise;
    }
  });
  var $$l = _export;
  var call$7 = functionCall;
  var newPromiseCapabilityModule$1 = newPromiseCapability$2;
  var FORCED_PROMISE_CONSTRUCTOR$1 = promiseConstructorDetection.CONSTRUCTOR;
  $$l({ target: "Promise", stat: true, forced: FORCED_PROMISE_CONSTRUCTOR$1 }, {
    reject: function reject(r) {
      var capability = newPromiseCapabilityModule$1.f(this);
      call$7(capability.reject, void 0, r);
      return capability.promise;
    }
  });
  var anObject$7 = anObject$f;
  var isObject$c = isObject$j;
  var newPromiseCapability = newPromiseCapability$2;
  var promiseResolve$1 = function(C2, x) {
    anObject$7(C2);
    if (isObject$c(x) && x.constructor === C2) return x;
    var promiseCapability = newPromiseCapability.f(C2);
    var resolve5 = promiseCapability.resolve;
    resolve5(x);
    return promiseCapability.promise;
  };
  var $$k = _export;
  var getBuiltIn = getBuiltIn$7;
  var FORCED_PROMISE_CONSTRUCTOR = promiseConstructorDetection.CONSTRUCTOR;
  var promiseResolve = promiseResolve$1;
  getBuiltIn("Promise");
  $$k({ target: "Promise", stat: true, forced: FORCED_PROMISE_CONSTRUCTOR }, {
    resolve: function resolve(x) {
      return promiseResolve(this, x);
    }
  });
  var objectDefineProperties = {};
  var internalObjectKeys = objectKeysInternal;
  var enumBugKeys$1 = enumBugKeys$3;
  var objectKeys$3 = Object.keys || function keys(O) {
    return internalObjectKeys(O, enumBugKeys$1);
  };
  var DESCRIPTORS$5 = descriptors;
  var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
  var definePropertyModule$1 = objectDefineProperty;
  var anObject$6 = anObject$f;
  var toIndexedObject$5 = toIndexedObject$9;
  var objectKeys$2 = objectKeys$3;
  objectDefineProperties.f = DESCRIPTORS$5 && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
    anObject$6(O);
    var props = toIndexedObject$5(Properties);
    var keys12 = objectKeys$2(Properties);
    var length3 = keys12.length;
    var index = 0;
    var key;
    while (length3 > index) definePropertyModule$1.f(O, key = keys12[index++], props[key]);
    return O;
  };
  var anObject$5 = anObject$f;
  var definePropertiesModule = objectDefineProperties;
  var enumBugKeys = enumBugKeys$3;
  var hiddenKeys$1 = hiddenKeys$5;
  var html = html$2;
  var documentCreateElement$1 = documentCreateElement$2;
  var sharedKey$1 = sharedKey$3;
  var GT = ">";
  var LT = "<";
  var PROTOTYPE = "prototype";
  var SCRIPT = "script";
  var IE_PROTO$1 = sharedKey$1("IE_PROTO");
  var EmptyConstructor = function() {
  };
  var scriptTag = function(content) {
    return LT + SCRIPT + GT + content + LT + "/" + SCRIPT + GT;
  };
  var NullProtoObjectViaActiveX = function(activeXDocument5) {
    activeXDocument5.write(scriptTag(""));
    activeXDocument5.close();
    var temp = activeXDocument5.parentWindow.Object;
    activeXDocument5 = null;
    return temp;
  };
  var NullProtoObjectViaIFrame = function() {
    var iframe = documentCreateElement$1("iframe");
    var JS = "java" + SCRIPT + ":";
    var iframeDocument;
    iframe.style.display = "none";
    html.appendChild(iframe);
    iframe.src = String(JS);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(scriptTag("document.F=Object"));
    iframeDocument.close();
    return iframeDocument.F;
  };
  var activeXDocument;
  var NullProtoObject = function() {
    try {
      activeXDocument = new ActiveXObject("htmlfile");
    } catch (error) {
    }
    NullProtoObject = typeof document != "undefined" ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);
    var length3 = enumBugKeys.length;
    while (length3--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length3]];
    return NullProtoObject();
  };
  hiddenKeys$1[IE_PROTO$1] = true;
  var objectCreate$1 = Object.create || function create2(O, Properties) {
    var result;
    if (O !== null) {
      EmptyConstructor[PROTOTYPE] = anObject$5(O);
      result = new EmptyConstructor();
      EmptyConstructor[PROTOTYPE] = null;
      result[IE_PROTO$1] = O;
    } else result = NullProtoObject();
    return Properties === void 0 ? result : definePropertiesModule.f(result, Properties);
  };
  var wellKnownSymbol$b = wellKnownSymbol$m;
  var create$3 = objectCreate$1;
  var defineProperty$5 = objectDefineProperty.f;
  var UNSCOPABLES = wellKnownSymbol$b("unscopables");
  var ArrayPrototype = Array.prototype;
  if (ArrayPrototype[UNSCOPABLES] === void 0) {
    defineProperty$5(ArrayPrototype, UNSCOPABLES, {
      configurable: true,
      value: create$3(null)
    });
  }
  var addToUnscopables$3 = function(key) {
    ArrayPrototype[UNSCOPABLES][key] = true;
  };
  var fails$j = fails$u;
  var correctPrototypeGetter = !fails$j(function() {
    function F() {
    }
    F.prototype.constructor = null;
    return Object.getPrototypeOf(new F()) !== F.prototype;
  });
  var hasOwn$2 = hasOwnProperty_1;
  var isCallable$6 = isCallable$o;
  var toObject$8 = toObject$a;
  var sharedKey = sharedKey$3;
  var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;
  var IE_PROTO = sharedKey("IE_PROTO");
  var $Object = Object;
  var ObjectPrototype = $Object.prototype;
  var objectGetPrototypeOf$1 = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function(O) {
    var object = toObject$8(O);
    if (hasOwn$2(object, IE_PROTO)) return object[IE_PROTO];
    var constructor = object.constructor;
    if (isCallable$6(constructor) && object instanceof constructor) {
      return constructor.prototype;
    }
    return object instanceof $Object ? ObjectPrototype : null;
  };
  var fails$i = fails$u;
  var isCallable$5 = isCallable$o;
  var isObject$b = isObject$j;
  var getPrototypeOf$1 = objectGetPrototypeOf$1;
  var defineBuiltIn$4 = defineBuiltIn$9;
  var wellKnownSymbol$a = wellKnownSymbol$m;
  var ITERATOR$2 = wellKnownSymbol$a("iterator");
  var BUGGY_SAFARI_ITERATORS$1 = false;
  var IteratorPrototype$2;
  var PrototypeOfArrayIteratorPrototype;
  var arrayIterator;
  if ([].keys) {
    arrayIterator = [].keys();
    if (!("next" in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;
    else {
      PrototypeOfArrayIteratorPrototype = getPrototypeOf$1(getPrototypeOf$1(arrayIterator));
      if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$2 = PrototypeOfArrayIteratorPrototype;
    }
  }
  var NEW_ITERATOR_PROTOTYPE = !isObject$b(IteratorPrototype$2) || fails$i(function() {
    var test5 = {};
    return IteratorPrototype$2[ITERATOR$2].call(test5) !== test5;
  });
  if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$2 = {};
  if (!isCallable$5(IteratorPrototype$2[ITERATOR$2])) {
    defineBuiltIn$4(IteratorPrototype$2, ITERATOR$2, function() {
      return this;
    });
  }
  var iteratorsCore = {
    IteratorPrototype: IteratorPrototype$2,
    BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
  };
  var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;
  var create$2 = objectCreate$1;
  var createPropertyDescriptor$1 = createPropertyDescriptor$4;
  var setToStringTag$3 = setToStringTag$5;
  var Iterators$2 = iterators;
  var returnThis$1 = function() {
    return this;
  };
  var iteratorCreateConstructor = function(IteratorConstructor, NAME5, next5, ENUMERABLE_NEXT) {
    var TO_STRING_TAG5 = NAME5 + " Iterator";
    IteratorConstructor.prototype = create$2(IteratorPrototype$1, { next: createPropertyDescriptor$1(+!ENUMERABLE_NEXT, next5) });
    setToStringTag$3(IteratorConstructor, TO_STRING_TAG5, false);
    Iterators$2[TO_STRING_TAG5] = returnThis$1;
    return IteratorConstructor;
  };
  var $$j = _export;
  var call$6 = functionCall;
  var FunctionName = functionName;
  var isCallable$4 = isCallable$o;
  var createIteratorConstructor = iteratorCreateConstructor;
  var getPrototypeOf = objectGetPrototypeOf$1;
  var setPrototypeOf$1 = objectSetPrototypeOf;
  var setToStringTag$2 = setToStringTag$5;
  var createNonEnumerableProperty$3 = createNonEnumerableProperty$6;
  var defineBuiltIn$3 = defineBuiltIn$9;
  var wellKnownSymbol$9 = wellKnownSymbol$m;
  var Iterators$1 = iterators;
  var IteratorsCore = iteratorsCore;
  var PROPER_FUNCTION_NAME$1 = FunctionName.PROPER;
  var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
  var IteratorPrototype = IteratorsCore.IteratorPrototype;
  var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
  var ITERATOR$1 = wellKnownSymbol$9("iterator");
  var KEYS = "keys";
  var VALUES = "values";
  var ENTRIES = "entries";
  var returnThis = function() {
    return this;
  };
  var iteratorDefine = function(Iterable, NAME5, IteratorConstructor, next5, DEFAULT, IS_SET, FORCED5) {
    createIteratorConstructor(IteratorConstructor, NAME5, next5);
    var getIterationMethod = function(KIND) {
      if (KIND === DEFAULT && defaultIterator) return defaultIterator;
      if (!BUGGY_SAFARI_ITERATORS && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];
      switch (KIND) {
        case KEYS:
          return function keys12() {
            return new IteratorConstructor(this, KIND);
          };
        case VALUES:
          return function values5() {
            return new IteratorConstructor(this, KIND);
          };
        case ENTRIES:
          return function entries3() {
            return new IteratorConstructor(this, KIND);
          };
      }
      return function() {
        return new IteratorConstructor(this);
      };
    };
    var TO_STRING_TAG5 = NAME5 + " Iterator";
    var INCORRECT_VALUES_NAME = false;
    var IterablePrototype = Iterable.prototype;
    var nativeIterator = IterablePrototype[ITERATOR$1] || IterablePrototype["@@iterator"] || DEFAULT && IterablePrototype[DEFAULT];
    var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
    var anyNativeIterator = NAME5 === "Array" ? IterablePrototype.entries || nativeIterator : nativeIterator;
    var CurrentIteratorPrototype, methods, KEY;
    if (anyNativeIterator) {
      CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
      if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
        if (getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
          if (setPrototypeOf$1) {
            setPrototypeOf$1(CurrentIteratorPrototype, IteratorPrototype);
          } else if (!isCallable$4(CurrentIteratorPrototype[ITERATOR$1])) {
            defineBuiltIn$3(CurrentIteratorPrototype, ITERATOR$1, returnThis);
          }
        }
        setToStringTag$2(CurrentIteratorPrototype, TO_STRING_TAG5, true);
      }
    }
    if (PROPER_FUNCTION_NAME$1 && DEFAULT === VALUES && nativeIterator && nativeIterator.name !== VALUES) {
      if (CONFIGURABLE_FUNCTION_NAME) {
        createNonEnumerableProperty$3(IterablePrototype, "name", VALUES);
      } else {
        INCORRECT_VALUES_NAME = true;
        defaultIterator = function values5() {
          return call$6(nativeIterator, this);
        };
      }
    }
    if (DEFAULT) {
      methods = {
        values: getIterationMethod(VALUES),
        keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
        entries: getIterationMethod(ENTRIES)
      };
      if (FORCED5) for (KEY in methods) {
        if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
          defineBuiltIn$3(IterablePrototype, KEY, methods[KEY]);
        }
      }
      else $$j({ target: NAME5, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
    }
    if (IterablePrototype[ITERATOR$1] !== defaultIterator) {
      defineBuiltIn$3(IterablePrototype, ITERATOR$1, defaultIterator, { name: DEFAULT });
    }
    Iterators$1[NAME5] = defaultIterator;
    return methods;
  };
  var createIterResultObject$3 = function(value, done) {
    return { value, done };
  };
  var toIndexedObject$4 = toIndexedObject$9;
  var addToUnscopables$2 = addToUnscopables$3;
  var Iterators = iterators;
  var InternalStateModule$3 = internalState;
  var defineProperty$4 = objectDefineProperty.f;
  var defineIterator$2 = iteratorDefine;
  var createIterResultObject$2 = createIterResultObject$3;
  var DESCRIPTORS$4 = descriptors;
  var ARRAY_ITERATOR = "Array Iterator";
  var setInternalState$3 = InternalStateModule$3.set;
  var getInternalState$2 = InternalStateModule$3.getterFor(ARRAY_ITERATOR);
  var es_array_iterator = defineIterator$2(Array, "Array", function(iterated, kind) {
    setInternalState$3(this, {
      type: ARRAY_ITERATOR,
      target: toIndexedObject$4(iterated),
      // target
      index: 0,
      // next index
      kind
      // kind
    });
  }, function() {
    var state = getInternalState$2(this);
    var target = state.target;
    var index = state.index++;
    if (!target || index >= target.length) {
      state.target = void 0;
      return createIterResultObject$2(void 0, true);
    }
    switch (state.kind) {
      case "keys":
        return createIterResultObject$2(index, false);
      case "values":
        return createIterResultObject$2(target[index], false);
    }
    return createIterResultObject$2([index, target[index]], false);
  }, "values");
  var values = Iterators.Arguments = Iterators.Array;
  addToUnscopables$2("keys");
  addToUnscopables$2("values");
  addToUnscopables$2("entries");
  if (DESCRIPTORS$4 && values.name !== "values") try {
    defineProperty$4(values, "name", { value: "values" });
  } catch (error) {
  }
  var $$i = _export;
  var call$5 = functionCall;
  var aCallable$1 = aCallable$a;
  var newPromiseCapabilityModule = newPromiseCapability$2;
  var perform = perform$4;
  var iterate$3 = iterate$6;
  var PROMISE_STATICS_INCORRECT_ITERATION = promiseStaticsIncorrectIteration;
  $$i({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {
    allSettled: function allSettled(iterable) {
      var C2 = this;
      var capability = newPromiseCapabilityModule.f(C2);
      var resolve5 = capability.resolve;
      var reject5 = capability.reject;
      var result = perform(function() {
        var promiseResolve5 = aCallable$1(C2.resolve);
        var values5 = [];
        var counter5 = 0;
        var remaining = 1;
        iterate$3(iterable, function(promise5) {
          var index = counter5++;
          var alreadyCalled = false;
          remaining++;
          call$5(promiseResolve5, C2, promise5).then(function(value) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values5[index] = { status: "fulfilled", value };
            --remaining || resolve5(values5);
          }, function(error) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values5[index] = { status: "rejected", reason: error };
            --remaining || resolve5(values5);
          });
        });
        --remaining || resolve5(values5);
      });
      if (result.error) reject5(result.value);
      return capability.promise;
    }
  });
  var classof$5 = classof$b;
  var $String = String;
  var toString$9 = function(argument) {
    if (classof$5(argument) === "Symbol") throw new TypeError("Cannot convert a Symbol value to a string");
    return $String(argument);
  };
  var uncurryThis$g = functionUncurryThis;
  var toIntegerOrInfinity$1 = toIntegerOrInfinity$4;
  var toString$8 = toString$9;
  var requireObjectCoercible$4 = requireObjectCoercible$7;
  var charAt$4 = uncurryThis$g("".charAt);
  var charCodeAt = uncurryThis$g("".charCodeAt);
  var stringSlice$4 = uncurryThis$g("".slice);
  var createMethod$3 = function(CONVERT_TO_STRING) {
    return function($this, pos) {
      var S = toString$8(requireObjectCoercible$4($this));
      var position3 = toIntegerOrInfinity$1(pos);
      var size = S.length;
      var first, second2;
      if (position3 < 0 || position3 >= size) return CONVERT_TO_STRING ? "" : void 0;
      first = charCodeAt(S, position3);
      return first < 55296 || first > 56319 || position3 + 1 === size || (second2 = charCodeAt(S, position3 + 1)) < 56320 || second2 > 57343 ? CONVERT_TO_STRING ? charAt$4(S, position3) : first : CONVERT_TO_STRING ? stringSlice$4(S, position3, position3 + 2) : (first - 55296 << 10) + (second2 - 56320) + 65536;
    };
  };
  var stringMultibyte = {
    // `String.prototype.codePointAt` method
    // https://tc39.es/ecma262/#sec-string.prototype.codepointat
    codeAt: createMethod$3(false),
    // `String.prototype.at` method
    // https://github.com/mathiasbynens/String.prototype.at
    charAt: createMethod$3(true)
  };
  var charAt$3 = stringMultibyte.charAt;
  var toString$7 = toString$9;
  var InternalStateModule$2 = internalState;
  var defineIterator$1 = iteratorDefine;
  var createIterResultObject$1 = createIterResultObject$3;
  var STRING_ITERATOR = "String Iterator";
  var setInternalState$2 = InternalStateModule$2.set;
  var getInternalState$1 = InternalStateModule$2.getterFor(STRING_ITERATOR);
  defineIterator$1(String, "String", function(iterated) {
    setInternalState$2(this, {
      type: STRING_ITERATOR,
      string: toString$7(iterated),
      index: 0
    });
  }, function next() {
    var state = getInternalState$1(this);
    var string = state.string;
    var index = state.index;
    var point2;
    if (index >= string.length) return createIterResultObject$1(void 0, true);
    point2 = charAt$3(string, index);
    state.index += point2.length;
    return createIterResultObject$1(point2, false);
  });
  var domIterables = {
    CSSRuleList: 0,
    CSSStyleDeclaration: 0,
    CSSValueList: 0,
    ClientRectList: 0,
    DOMRectList: 0,
    DOMStringList: 0,
    DOMTokenList: 1,
    DataTransferItemList: 0,
    FileList: 0,
    HTMLAllCollection: 0,
    HTMLCollection: 0,
    HTMLFormElement: 0,
    HTMLSelectElement: 0,
    MediaList: 0,
    MimeTypeArray: 0,
    NamedNodeMap: 0,
    NodeList: 1,
    PaintRequestList: 0,
    Plugin: 0,
    PluginArray: 0,
    SVGLengthList: 0,
    SVGNumberList: 0,
    SVGPathSegList: 0,
    SVGPointList: 0,
    SVGStringList: 0,
    SVGTransformList: 0,
    SourceBufferList: 0,
    StyleSheetList: 0,
    TextTrackCueList: 0,
    TextTrackList: 0,
    TouchList: 0
  };
  var documentCreateElement = documentCreateElement$2;
  var classList2 = documentCreateElement("span").classList;
  var DOMTokenListPrototype$2 = classList2 && classList2.constructor && classList2.constructor.prototype;
  var domTokenListPrototype = DOMTokenListPrototype$2 === Object.prototype ? void 0 : DOMTokenListPrototype$2;
  var global$6 = global$n;
  var DOMIterables$1 = domIterables;
  var DOMTokenListPrototype$1 = domTokenListPrototype;
  var ArrayIteratorMethods = es_array_iterator;
  var createNonEnumerableProperty$2 = createNonEnumerableProperty$6;
  var setToStringTag$1 = setToStringTag$5;
  var wellKnownSymbol$8 = wellKnownSymbol$m;
  var ITERATOR = wellKnownSymbol$8("iterator");
  var ArrayValues = ArrayIteratorMethods.values;
  var handlePrototype$1 = function(CollectionPrototype, COLLECTION_NAME) {
    if (CollectionPrototype) {
      if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
        createNonEnumerableProperty$2(CollectionPrototype, ITERATOR, ArrayValues);
      } catch (error) {
        CollectionPrototype[ITERATOR] = ArrayValues;
      }
      setToStringTag$1(CollectionPrototype, COLLECTION_NAME, true);
      if (DOMIterables$1[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
        if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
          createNonEnumerableProperty$2(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
        } catch (error) {
          CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
        }
      }
    }
  };
  for (COLLECTION_NAME$1 in DOMIterables$1) {
    handlePrototype$1(global$6[COLLECTION_NAME$1] && global$6[COLLECTION_NAME$1].prototype, COLLECTION_NAME$1);
  }
  var COLLECTION_NAME$1;
  handlePrototype$1(DOMTokenListPrototype$1, "DOMTokenList");
  var toObject$7 = toObject$a;
  var toAbsoluteIndex$2 = toAbsoluteIndex$4;
  var lengthOfArrayLike$6 = lengthOfArrayLike$9;
  var arrayFill = function fill(value) {
    var O = toObject$7(this);
    var length3 = lengthOfArrayLike$6(O);
    var argumentsLength = arguments.length;
    var index = toAbsoluteIndex$2(argumentsLength > 1 ? arguments[1] : void 0, length3);
    var end2 = argumentsLength > 2 ? arguments[2] : void 0;
    var endPos = end2 === void 0 ? length3 : toAbsoluteIndex$2(end2, length3);
    while (endPos > index) O[index++] = value;
    return O;
  };
  var $$h = _export;
  var fill2 = arrayFill;
  var addToUnscopables$1 = addToUnscopables$3;
  $$h({ target: "Array", proto: true }, {
    fill: fill2
  });
  addToUnscopables$1("fill");
  var classof$4 = classofRaw$2;
  var isArray$5 = Array.isArray || function isArray(argument) {
    return classof$4(argument) === "Array";
  };
  var toPropertyKey = toPropertyKey$3;
  var definePropertyModule = objectDefineProperty;
  var createPropertyDescriptor = createPropertyDescriptor$4;
  var createProperty$4 = function(object, key, value) {
    var propertyKey = toPropertyKey(key);
    if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
    else object[propertyKey] = value;
  };
  var fails$h = fails$u;
  var wellKnownSymbol$7 = wellKnownSymbol$m;
  var V8_VERSION$1 = engineV8Version;
  var SPECIES$3 = wellKnownSymbol$7("species");
  var arrayMethodHasSpeciesSupport$4 = function(METHOD_NAME) {
    return V8_VERSION$1 >= 51 || !fails$h(function() {
      var array2 = [];
      var constructor = array2.constructor = {};
      constructor[SPECIES$3] = function() {
        return { foo: 1 };
      };
      return array2[METHOD_NAME](Boolean).foo !== 1;
    });
  };
  var $$g = _export;
  var isArray$4 = isArray$5;
  var isConstructor$2 = isConstructor$4;
  var isObject$a = isObject$j;
  var toAbsoluteIndex$1 = toAbsoluteIndex$4;
  var lengthOfArrayLike$5 = lengthOfArrayLike$9;
  var toIndexedObject$3 = toIndexedObject$9;
  var createProperty$3 = createProperty$4;
  var wellKnownSymbol$6 = wellKnownSymbol$m;
  var arrayMethodHasSpeciesSupport$3 = arrayMethodHasSpeciesSupport$4;
  var nativeSlice = arraySlice$3;
  var HAS_SPECIES_SUPPORT$2 = arrayMethodHasSpeciesSupport$3("slice");
  var SPECIES$2 = wellKnownSymbol$6("species");
  var $Array$3 = Array;
  var max$2 = Math.max;
  $$g({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT$2 }, {
    slice: function slice(start3, end2) {
      var O = toIndexedObject$3(this);
      var length3 = lengthOfArrayLike$5(O);
      var k2 = toAbsoluteIndex$1(start3, length3);
      var fin = toAbsoluteIndex$1(end2 === void 0 ? length3 : end2, length3);
      var Constructor, result, n;
      if (isArray$4(O)) {
        Constructor = O.constructor;
        if (isConstructor$2(Constructor) && (Constructor === $Array$3 || isArray$4(Constructor.prototype))) {
          Constructor = void 0;
        } else if (isObject$a(Constructor)) {
          Constructor = Constructor[SPECIES$2];
          if (Constructor === null) Constructor = void 0;
        }
        if (Constructor === $Array$3 || Constructor === void 0) {
          return nativeSlice(O, k2, fin);
        }
      }
      result = new (Constructor === void 0 ? $Array$3 : Constructor)(max$2(fin - k2, 0));
      for (n = 0; k2 < fin; k2++, n++) if (k2 in O) createProperty$3(result, n, O[k2]);
      result.length = n;
      return result;
    }
  });
  function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve5) {
        resolve5(value);
      });
    }
    return new (P || (P = Promise))(function(resolve5, reject5) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject5(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject5(e);
        }
      }
      function step(result) {
        result.done ? resolve5(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  }
  function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
  }
  var eventemitter3 = { exports: {} };
  (function(module2) {
    var has5 = Object.prototype.hasOwnProperty, prefix = "~";
    function Events() {
    }
    if (Object.create) {
      Events.prototype = /* @__PURE__ */ Object.create(null);
      if (!new Events().__proto__) prefix = false;
    }
    function EE(fn2, context, once) {
      this.fn = fn2;
      this.context = context;
      this.once = once || false;
    }
    function addListener(emitter, event, fn2, context, once) {
      if (typeof fn2 !== "function") {
        throw new TypeError("The listener must be a function");
      }
      var listener = new EE(fn2, context || emitter, once), evt = prefix ? prefix + event : event;
      if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
      else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
      else emitter._events[evt] = [emitter._events[evt], listener];
      return emitter;
    }
    function clearEvent(emitter, evt) {
      if (--emitter._eventsCount === 0) emitter._events = new Events();
      else delete emitter._events[evt];
    }
    function EventEmitter2() {
      this._events = new Events();
      this._eventsCount = 0;
    }
    EventEmitter2.prototype.eventNames = function eventNames() {
      var names = [], events, name;
      if (this._eventsCount === 0) return names;
      for (name in events = this._events) {
        if (has5.call(events, name)) names.push(prefix ? name.slice(1) : name);
      }
      if (Object.getOwnPropertySymbols) {
        return names.concat(Object.getOwnPropertySymbols(events));
      }
      return names;
    };
    EventEmitter2.prototype.listeners = function listeners(event) {
      var evt = prefix ? prefix + event : event, handlers = this._events[evt];
      if (!handlers) return [];
      if (handlers.fn) return [handlers.fn];
      for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
        ee[i] = handlers[i].fn;
      }
      return ee;
    };
    EventEmitter2.prototype.listenerCount = function listenerCount(event) {
      var evt = prefix ? prefix + event : event, listeners = this._events[evt];
      if (!listeners) return 0;
      if (listeners.fn) return 1;
      return listeners.length;
    };
    EventEmitter2.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
      var evt = prefix ? prefix + event : event;
      if (!this._events[evt]) return false;
      var listeners = this._events[evt], len = arguments.length, args, i;
      if (listeners.fn) {
        if (listeners.once) this.removeListener(event, listeners.fn, void 0, true);
        switch (len) {
          case 1:
            return listeners.fn.call(listeners.context), true;
          case 2:
            return listeners.fn.call(listeners.context, a1), true;
          case 3:
            return listeners.fn.call(listeners.context, a1, a2), true;
          case 4:
            return listeners.fn.call(listeners.context, a1, a2, a3), true;
          case 5:
            return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
          case 6:
            return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
        }
        for (i = 1, args = new Array(len - 1); i < len; i++) {
          args[i - 1] = arguments[i];
        }
        listeners.fn.apply(listeners.context, args);
      } else {
        var length3 = listeners.length, j;
        for (i = 0; i < length3; i++) {
          if (listeners[i].once) this.removeListener(event, listeners[i].fn, void 0, true);
          switch (len) {
            case 1:
              listeners[i].fn.call(listeners[i].context);
              break;
            case 2:
              listeners[i].fn.call(listeners[i].context, a1);
              break;
            case 3:
              listeners[i].fn.call(listeners[i].context, a1, a2);
              break;
            case 4:
              listeners[i].fn.call(listeners[i].context, a1, a2, a3);
              break;
            default:
              if (!args) for (j = 1, args = new Array(len - 1); j < len; j++) {
                args[j - 1] = arguments[j];
              }
              listeners[i].fn.apply(listeners[i].context, args);
          }
        }
      }
      return true;
    };
    EventEmitter2.prototype.on = function on(event, fn2, context) {
      return addListener(this, event, fn2, context, false);
    };
    EventEmitter2.prototype.once = function once(event, fn2, context) {
      return addListener(this, event, fn2, context, true);
    };
    EventEmitter2.prototype.removeListener = function removeListener(event, fn2, context, once) {
      var evt = prefix ? prefix + event : event;
      if (!this._events[evt]) return this;
      if (!fn2) {
        clearEvent(this, evt);
        return this;
      }
      var listeners = this._events[evt];
      if (listeners.fn) {
        if (listeners.fn === fn2 && (!once || listeners.once) && (!context || listeners.context === context)) {
          clearEvent(this, evt);
        }
      } else {
        for (var i = 0, events = [], length3 = listeners.length; i < length3; i++) {
          if (listeners[i].fn !== fn2 || once && !listeners[i].once || context && listeners[i].context !== context) {
            events.push(listeners[i]);
          }
        }
        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
        else clearEvent(this, evt);
      }
      return this;
    };
    EventEmitter2.prototype.removeAllListeners = function removeAllListeners(event) {
      var evt;
      if (event) {
        evt = prefix ? prefix + event : event;
        if (this._events[evt]) clearEvent(this, evt);
      } else {
        this._events = new Events();
        this._eventsCount = 0;
      }
      return this;
    };
    EventEmitter2.prototype.off = EventEmitter2.prototype.removeListener;
    EventEmitter2.prototype.addListener = EventEmitter2.prototype.on;
    EventEmitter2.prefixed = prefix;
    EventEmitter2.EventEmitter = EventEmitter2;
    {
      module2.exports = EventEmitter2;
    }
  })(eventemitter3);
  var eventemitter3Exports = eventemitter3.exports;
  var EventEmitter = /* @__PURE__ */ getDefaultExportFromCjs(eventemitter3Exports);
  var isArray$2 = Array.isArray;
  var isArray$3 = isArray$2;
  function castArray() {
    if (!arguments.length) {
      return [];
    }
    var value = arguments[0];
    return isArray$3(value) ? value : [value];
  }
  var isArray$1 = isArray$5;
  var isConstructor$1 = isConstructor$4;
  var isObject$9 = isObject$j;
  var wellKnownSymbol$5 = wellKnownSymbol$m;
  var SPECIES$1 = wellKnownSymbol$5("species");
  var $Array$2 = Array;
  var arraySpeciesConstructor$1 = function(originalArray) {
    var C2;
    if (isArray$1(originalArray)) {
      C2 = originalArray.constructor;
      if (isConstructor$1(C2) && (C2 === $Array$2 || isArray$1(C2.prototype))) C2 = void 0;
      else if (isObject$9(C2)) {
        C2 = C2[SPECIES$1];
        if (C2 === null) C2 = void 0;
      }
    }
    return C2 === void 0 ? $Array$2 : C2;
  };
  var arraySpeciesConstructor = arraySpeciesConstructor$1;
  var arraySpeciesCreate$2 = function(originalArray, length3) {
    return new (arraySpeciesConstructor(originalArray))(length3 === 0 ? 0 : length3);
  };
  var bind$2 = functionBindContext;
  var uncurryThis$f = functionUncurryThis;
  var IndexedObject$2 = indexedObject;
  var toObject$6 = toObject$a;
  var lengthOfArrayLike$4 = lengthOfArrayLike$9;
  var arraySpeciesCreate$1 = arraySpeciesCreate$2;
  var push$3 = uncurryThis$f([].push);
  var createMethod$2 = function(TYPE) {
    var IS_MAP = TYPE === 1;
    var IS_FILTER = TYPE === 2;
    var IS_SOME = TYPE === 3;
    var IS_EVERY = TYPE === 4;
    var IS_FIND_INDEX = TYPE === 6;
    var IS_FILTER_REJECT = TYPE === 7;
    var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
    return function($this, callbackfn, that, specificCreate) {
      var O = toObject$6($this);
      var self2 = IndexedObject$2(O);
      var length3 = lengthOfArrayLike$4(self2);
      var boundFunction = bind$2(callbackfn, that);
      var index = 0;
      var create10 = specificCreate || arraySpeciesCreate$1;
      var target = IS_MAP ? create10($this, length3) : IS_FILTER || IS_FILTER_REJECT ? create10($this, 0) : void 0;
      var value, result;
      for (; length3 > index; index++) if (NO_HOLES || index in self2) {
        value = self2[index];
        result = boundFunction(value, index, O);
        if (TYPE) {
          if (IS_MAP) target[index] = result;
          else if (result) switch (TYPE) {
            case 3:
              return true;
            // some
            case 5:
              return value;
            // find
            case 6:
              return index;
            // findIndex
            case 2:
              push$3(target, value);
          }
          else switch (TYPE) {
            case 4:
              return false;
            // every
            case 7:
              push$3(target, value);
          }
        }
      }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
    };
  };
  var arrayIteration = {
    // `Array.prototype.forEach` method
    // https://tc39.es/ecma262/#sec-array.prototype.foreach
    forEach: createMethod$2(0),
    // `Array.prototype.map` method
    // https://tc39.es/ecma262/#sec-array.prototype.map
    map: createMethod$2(1),
    // `Array.prototype.filter` method
    // https://tc39.es/ecma262/#sec-array.prototype.filter
    filter: createMethod$2(2),
    // `Array.prototype.some` method
    // https://tc39.es/ecma262/#sec-array.prototype.some
    some: createMethod$2(3),
    // `Array.prototype.every` method
    // https://tc39.es/ecma262/#sec-array.prototype.every
    every: createMethod$2(4),
    // `Array.prototype.find` method
    // https://tc39.es/ecma262/#sec-array.prototype.find
    find: createMethod$2(5),
    // `Array.prototype.findIndex` method
    // https://tc39.es/ecma262/#sec-array.prototype.findIndex
    findIndex: createMethod$2(6),
    // `Array.prototype.filterReject` method
    // https://github.com/tc39/proposal-array-filtering
    filterReject: createMethod$2(7)
  };
  var $$f = _export;
  var $map = arrayIteration.map;
  var arrayMethodHasSpeciesSupport$2 = arrayMethodHasSpeciesSupport$4;
  var HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport$2("map");
  $$f({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT$1 }, {
    map: function map2(callbackfn) {
      return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  var DESCRIPTORS$3 = descriptors;
  var uncurryThis$e = functionUncurryThis;
  var call$4 = functionCall;
  var fails$g = fails$u;
  var objectKeys$1 = objectKeys$3;
  var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
  var propertyIsEnumerableModule = objectPropertyIsEnumerable;
  var toObject$5 = toObject$a;
  var IndexedObject$1 = indexedObject;
  var $assign = Object.assign;
  var defineProperty$3 = Object.defineProperty;
  var concat$1 = uncurryThis$e([].concat);
  var objectAssign = !$assign || fails$g(function() {
    if (DESCRIPTORS$3 && $assign({ b: 1 }, $assign(defineProperty$3({}, "a", {
      enumerable: true,
      get: function() {
        defineProperty$3(this, "b", {
          value: 3,
          enumerable: false
        });
      }
    }), { b: 2 })).b !== 1) return true;
    var A2 = {};
    var B2 = {};
    var symbol3 = Symbol("assign detection");
    var alphabet = "abcdefghijklmnopqrst";
    A2[symbol3] = 7;
    alphabet.split("").forEach(function(chr) {
      B2[chr] = chr;
    });
    return $assign({}, A2)[symbol3] !== 7 || objectKeys$1($assign({}, B2)).join("") !== alphabet;
  }) ? function assign(target, source) {
    var T = toObject$5(target);
    var argumentsLength = arguments.length;
    var index = 1;
    var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
    var propertyIsEnumerable7 = propertyIsEnumerableModule.f;
    while (argumentsLength > index) {
      var S = IndexedObject$1(arguments[index++]);
      var keys12 = getOwnPropertySymbols ? concat$1(objectKeys$1(S), getOwnPropertySymbols(S)) : objectKeys$1(S);
      var length3 = keys12.length;
      var j = 0;
      var key;
      while (length3 > j) {
        key = keys12[j++];
        if (!DESCRIPTORS$3 || call$4(propertyIsEnumerable7, S, key)) T[key] = S[key];
      }
    }
    return T;
  } : $assign;
  var $$e = _export;
  var assign2 = objectAssign;
  $$e({ target: "Object", stat: true, arity: 2, forced: Object.assign !== assign2 }, {
    assign: assign2
  });
  var internalMetadata = { exports: {} };
  var objectGetOwnPropertyNamesExternal = {};
  var toAbsoluteIndex = toAbsoluteIndex$4;
  var lengthOfArrayLike$3 = lengthOfArrayLike$9;
  var createProperty$2 = createProperty$4;
  var $Array$1 = Array;
  var max$1 = Math.max;
  var arraySliceSimple = function(O, start3, end2) {
    var length3 = lengthOfArrayLike$3(O);
    var k2 = toAbsoluteIndex(start3, length3);
    var fin = toAbsoluteIndex(end2 === void 0 ? length3 : end2, length3);
    var result = $Array$1(max$1(fin - k2, 0));
    var n = 0;
    for (; k2 < fin; k2++, n++) createProperty$2(result, n, O[k2]);
    result.length = n;
    return result;
  };
  var classof$3 = classofRaw$2;
  var toIndexedObject$2 = toIndexedObject$9;
  var $getOwnPropertyNames = objectGetOwnPropertyNames.f;
  var arraySlice$1 = arraySliceSimple;
  var windowNames = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
  var getWindowNames = function(it) {
    try {
      return $getOwnPropertyNames(it);
    } catch (error) {
      return arraySlice$1(windowNames);
    }
  };
  objectGetOwnPropertyNamesExternal.f = function getOwnPropertyNames2(it) {
    return windowNames && classof$3(it) === "Window" ? getWindowNames(it) : $getOwnPropertyNames(toIndexedObject$2(it));
  };
  var fails$f = fails$u;
  var arrayBufferNonExtensible = fails$f(function() {
    if (typeof ArrayBuffer == "function") {
      var buffer = new ArrayBuffer(8);
      if (Object.isExtensible(buffer)) Object.defineProperty(buffer, "a", { value: 8 });
    }
  });
  var fails$e = fails$u;
  var isObject$8 = isObject$j;
  var classof$2 = classofRaw$2;
  var ARRAY_BUFFER_NON_EXTENSIBLE = arrayBufferNonExtensible;
  var $isExtensible = Object.isExtensible;
  var FAILS_ON_PRIMITIVES$1 = fails$e(function() {
    $isExtensible(1);
  });
  var objectIsExtensible = FAILS_ON_PRIMITIVES$1 || ARRAY_BUFFER_NON_EXTENSIBLE ? function isExtensible(it) {
    if (!isObject$8(it)) return false;
    if (ARRAY_BUFFER_NON_EXTENSIBLE && classof$2(it) === "ArrayBuffer") return false;
    return $isExtensible ? $isExtensible(it) : true;
  } : $isExtensible;
  var fails$d = fails$u;
  var freezing = !fails$d(function() {
    return Object.isExtensible(Object.preventExtensions({}));
  });
  var $$d = _export;
  var uncurryThis$d = functionUncurryThis;
  var hiddenKeys = hiddenKeys$5;
  var isObject$7 = isObject$j;
  var hasOwn$1 = hasOwnProperty_1;
  var defineProperty$2 = objectDefineProperty.f;
  var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
  var getOwnPropertyNamesExternalModule = objectGetOwnPropertyNamesExternal;
  var isExtensible2 = objectIsExtensible;
  var uid = uid$3;
  var FREEZING = freezing;
  var REQUIRED = false;
  var METADATA = uid("meta");
  var id$1 = 0;
  var setMetadata = function(it) {
    defineProperty$2(it, METADATA, { value: {
      objectID: "O" + id$1++,
      // object ID
      weakData: {}
      // weak collections IDs
    } });
  };
  var fastKey$1 = function(it, create10) {
    if (!isObject$7(it)) return typeof it == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;
    if (!hasOwn$1(it, METADATA)) {
      if (!isExtensible2(it)) return "F";
      if (!create10) return "E";
      setMetadata(it);
    }
    return it[METADATA].objectID;
  };
  var getWeakData$1 = function(it, create10) {
    if (!hasOwn$1(it, METADATA)) {
      if (!isExtensible2(it)) return true;
      if (!create10) return false;
      setMetadata(it);
    }
    return it[METADATA].weakData;
  };
  var onFreeze = function(it) {
    if (FREEZING && REQUIRED && isExtensible2(it) && !hasOwn$1(it, METADATA)) setMetadata(it);
    return it;
  };
  var enable = function() {
    meta.enable = function() {
    };
    REQUIRED = true;
    var getOwnPropertyNames9 = getOwnPropertyNamesModule.f;
    var splice5 = uncurryThis$d([].splice);
    var test5 = {};
    test5[METADATA] = 1;
    if (getOwnPropertyNames9(test5).length) {
      getOwnPropertyNamesModule.f = function(it) {
        var result = getOwnPropertyNames9(it);
        for (var i = 0, length3 = result.length; i < length3; i++) {
          if (result[i] === METADATA) {
            splice5(result, i, 1);
            break;
          }
        }
        return result;
      };
      $$d({ target: "Object", stat: true, forced: true }, {
        getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
      });
    }
  };
  var meta = internalMetadata.exports = {
    enable,
    fastKey: fastKey$1,
    getWeakData: getWeakData$1,
    onFreeze
  };
  hiddenKeys[METADATA] = true;
  var internalMetadataExports = internalMetadata.exports;
  var isCallable$3 = isCallable$o;
  var isObject$6 = isObject$j;
  var setPrototypeOf = objectSetPrototypeOf;
  var inheritIfRequired$1 = function($this, dummy, Wrapper) {
    var NewTarget, NewTargetPrototype;
    if (
      // it can work only with native `setPrototypeOf`
      setPrototypeOf && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
      isCallable$3(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject$6(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype
    ) setPrototypeOf($this, NewTargetPrototype);
    return $this;
  };
  var $$c = _export;
  var global$5 = global$n;
  var uncurryThis$c = functionUncurryThis;
  var isForced = isForced_1;
  var defineBuiltIn$2 = defineBuiltIn$9;
  var InternalMetadataModule = internalMetadataExports;
  var iterate$2 = iterate$6;
  var anInstance$2 = anInstance$4;
  var isCallable$2 = isCallable$o;
  var isNullOrUndefined$3 = isNullOrUndefined$8;
  var isObject$5 = isObject$j;
  var fails$c = fails$u;
  var checkCorrectnessOfIteration$1 = checkCorrectnessOfIteration$3;
  var setToStringTag = setToStringTag$5;
  var inheritIfRequired = inheritIfRequired$1;
  var collection$3 = function(CONSTRUCTOR_NAME, wrapper, common) {
    var IS_MAP = CONSTRUCTOR_NAME.indexOf("Map") !== -1;
    var IS_WEAK = CONSTRUCTOR_NAME.indexOf("Weak") !== -1;
    var ADDER = IS_MAP ? "set" : "add";
    var NativeConstructor = global$5[CONSTRUCTOR_NAME];
    var NativePrototype = NativeConstructor && NativeConstructor.prototype;
    var Constructor = NativeConstructor;
    var exported = {};
    var fixMethod = function(KEY) {
      var uncurriedNativeMethod = uncurryThis$c(NativePrototype[KEY]);
      defineBuiltIn$2(
        NativePrototype,
        KEY,
        KEY === "add" ? function add(value) {
          uncurriedNativeMethod(this, value === 0 ? 0 : value);
          return this;
        } : KEY === "delete" ? function(key) {
          return IS_WEAK && !isObject$5(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : KEY === "get" ? function get7(key) {
          return IS_WEAK && !isObject$5(key) ? void 0 : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : KEY === "has" ? function has5(key) {
          return IS_WEAK && !isObject$5(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : function set7(key, value) {
          uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
          return this;
        }
      );
    };
    var REPLACE2 = isForced(
      CONSTRUCTOR_NAME,
      !isCallable$2(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails$c(function() {
        new NativeConstructor().entries().next();
      }))
    );
    if (REPLACE2) {
      Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
      InternalMetadataModule.enable();
    } else if (isForced(CONSTRUCTOR_NAME, true)) {
      var instance = new Constructor();
      var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) !== instance;
      var THROWS_ON_PRIMITIVES = fails$c(function() {
        instance.has(1);
      });
      var ACCEPT_ITERABLES = checkCorrectnessOfIteration$1(function(iterable) {
        new NativeConstructor(iterable);
      });
      var BUGGY_ZERO = !IS_WEAK && fails$c(function() {
        var $instance = new NativeConstructor();
        var index = 5;
        while (index--) $instance[ADDER](index, index);
        return !$instance.has(-0);
      });
      if (!ACCEPT_ITERABLES) {
        Constructor = wrapper(function(dummy, iterable) {
          anInstance$2(dummy, NativePrototype);
          var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
          if (!isNullOrUndefined$3(iterable)) iterate$2(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
          return that;
        });
        Constructor.prototype = NativePrototype;
        NativePrototype.constructor = Constructor;
      }
      if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
        fixMethod("delete");
        fixMethod("has");
        IS_MAP && fixMethod("get");
      }
      if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
      if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
    }
    exported[CONSTRUCTOR_NAME] = Constructor;
    $$c({ global: true, constructor: true, forced: Constructor !== NativeConstructor }, exported);
    setToStringTag(Constructor, CONSTRUCTOR_NAME);
    if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
    return Constructor;
  };
  var defineBuiltIn$1 = defineBuiltIn$9;
  var defineBuiltIns$2 = function(target, src, options) {
    for (var key in src) defineBuiltIn$1(target, key, src[key], options);
    return target;
  };
  var uncurryThis$b = functionUncurryThis;
  var defineBuiltIns$1 = defineBuiltIns$2;
  var getWeakData = internalMetadataExports.getWeakData;
  var anInstance$1 = anInstance$4;
  var anObject$4 = anObject$f;
  var isNullOrUndefined$2 = isNullOrUndefined$8;
  var isObject$4 = isObject$j;
  var iterate$1 = iterate$6;
  var ArrayIterationModule = arrayIteration;
  var hasOwn2 = hasOwnProperty_1;
  var InternalStateModule$1 = internalState;
  var setInternalState$1 = InternalStateModule$1.set;
  var internalStateGetterFor$1 = InternalStateModule$1.getterFor;
  var find2 = ArrayIterationModule.find;
  var findIndex = ArrayIterationModule.findIndex;
  var splice$1 = uncurryThis$b([].splice);
  var id2 = 0;
  var uncaughtFrozenStore = function(state) {
    return state.frozen || (state.frozen = new UncaughtFrozenStore());
  };
  var UncaughtFrozenStore = function() {
    this.entries = [];
  };
  var findUncaughtFrozen = function(store, key) {
    return find2(store.entries, function(it) {
      return it[0] === key;
    });
  };
  UncaughtFrozenStore.prototype = {
    get: function(key) {
      var entry = findUncaughtFrozen(this, key);
      if (entry) return entry[1];
    },
    has: function(key) {
      return !!findUncaughtFrozen(this, key);
    },
    set: function(key, value) {
      var entry = findUncaughtFrozen(this, key);
      if (entry) entry[1] = value;
      else this.entries.push([key, value]);
    },
    "delete": function(key) {
      var index = findIndex(this.entries, function(it) {
        return it[0] === key;
      });
      if (~index) splice$1(this.entries, index, 1);
      return !!~index;
    }
  };
  var collectionWeak$1 = {
    getConstructor: function(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
      var Constructor = wrapper(function(that, iterable) {
        anInstance$1(that, Prototype);
        setInternalState$1(that, {
          type: CONSTRUCTOR_NAME,
          id: id2++,
          frozen: void 0
        });
        if (!isNullOrUndefined$2(iterable)) iterate$1(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
      });
      var Prototype = Constructor.prototype;
      var getInternalState5 = internalStateGetterFor$1(CONSTRUCTOR_NAME);
      var define = function(that, key, value) {
        var state = getInternalState5(that);
        var data6 = getWeakData(anObject$4(key), true);
        if (data6 === true) uncaughtFrozenStore(state).set(key, value);
        else data6[state.id] = value;
        return that;
      };
      defineBuiltIns$1(Prototype, {
        // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
        // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
        // https://tc39.es/ecma262/#sec-weakset.prototype.delete
        "delete": function(key) {
          var state = getInternalState5(this);
          if (!isObject$4(key)) return false;
          var data6 = getWeakData(key);
          if (data6 === true) return uncaughtFrozenStore(state)["delete"](key);
          return data6 && hasOwn2(data6, state.id) && delete data6[state.id];
        },
        // `{ WeakMap, WeakSet }.prototype.has(key)` methods
        // https://tc39.es/ecma262/#sec-weakmap.prototype.has
        // https://tc39.es/ecma262/#sec-weakset.prototype.has
        has: function has5(key) {
          var state = getInternalState5(this);
          if (!isObject$4(key)) return false;
          var data6 = getWeakData(key);
          if (data6 === true) return uncaughtFrozenStore(state).has(key);
          return data6 && hasOwn2(data6, state.id);
        }
      });
      defineBuiltIns$1(Prototype, IS_MAP ? {
        // `WeakMap.prototype.get(key)` method
        // https://tc39.es/ecma262/#sec-weakmap.prototype.get
        get: function get7(key) {
          var state = getInternalState5(this);
          if (isObject$4(key)) {
            var data6 = getWeakData(key);
            if (data6 === true) return uncaughtFrozenStore(state).get(key);
            return data6 ? data6[state.id] : void 0;
          }
        },
        // `WeakMap.prototype.set(key, value)` method
        // https://tc39.es/ecma262/#sec-weakmap.prototype.set
        set: function set7(key, value) {
          return define(this, key, value);
        }
      } : {
        // `WeakSet.prototype.add(value)` method
        // https://tc39.es/ecma262/#sec-weakset.prototype.add
        add: function add(value) {
          return define(this, value, true);
        }
      });
      return Constructor;
    }
  };
  var collection$2 = collection$3;
  var collectionWeak = collectionWeak$1;
  collection$2("WeakSet", function(init2) {
    return function WeakSet2() {
      return init2(this, arguments.length ? arguments[0] : void 0);
    };
  }, collectionWeak);
  var ScrollDirection;
  (function(ScrollDirection4) {
    ScrollDirection4[ScrollDirection4["SCROLL_NONE"] = 0] = "SCROLL_NONE";
    ScrollDirection4[ScrollDirection4["SCROLL_BACKWARD"] = 1] = "SCROLL_BACKWARD";
    ScrollDirection4[ScrollDirection4["SCROLL_FORWARD"] = 2] = "SCROLL_FORWARD";
  })(ScrollDirection || (ScrollDirection = {}));
  var Position;
  (function(Position4) {
    Position4[Position4["TOP"] = 0] = "TOP";
    Position4[Position4["RIGHT"] = 1] = "RIGHT";
    Position4[Position4["BOTTOM"] = 2] = "BOTTOM";
    Position4[Position4["LEFT"] = 3] = "LEFT";
  })(Position || (Position = {}));
  var OPTIONS_DEFAULT_DOMAIN_TYPE = "hour";
  var OPTIONS_DEFAULT_SUBDOMAIN_TYPE = "minute";
  var OPTIONS_DEFAULT_SUBDOMAIN_WIDTH = 10;
  var OPTIONS_DEFAULT_SUBDOMAIN_HEIGHT = 10;
  var OPTIONS_DEFAULT_SUBDOMAIN_GUTTER = 2;
  var OPTIONS_DEFAULT_SUBDOMAIN_RADIUS = 0;
  var OPTIONS_DEFAULT_ANIMATION_DURATION = 200;
  var OPTIONS_DEFAULT_RANGE = 12;
  var OPTIONS_DEFAULT_ITEM_SELECTOR = "#cal-heatmap";
  var OPTIONS_DEFAULT_THEME = "light";
  var OPTIONS_DEFAULT_LOCALE = "en";
  var SCALE_BASE_OPACITY_COLOR = "red";
  var SCALE_BASE_COLOR_SCHEME = "YlOrBr";
  var SCALE_BASE_COLOR_TYPE = "quantize";
  var SCALE_BASE_COLOR_DOMAIN = [0, 100];
  var _Navigator_instances;
  var _Navigator_isDomainBoundaryReached;
  var _Navigator_setDomainsBoundaryReached;
  var Navigator = /* @__PURE__ */ (function() {
    function Navigator2(calendar2) {
      _classCallCheck(this, Navigator2);
      _Navigator_instances.add(this);
      this.calendar = calendar2;
      this.maxDomainReached = false;
      this.minDomainReached = false;
    }
    _createClass(Navigator2, [{
      key: "loadNewDomains",
      value: function loadNewDomains(newDomainCollection) {
        var _this = this;
        var direction = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : ScrollDirection.SCROLL_NONE;
        var options = this.calendar.options.options;
        var templatesClt = this.calendar.templateCollection;
        var minDate = options.date.min ? templatesClt.get(options.domain.type).extractUnit(+options.date.min) : void 0;
        var maxDate = options.date.max ? templatesClt.get(options.domain.type).extractUnit(+options.date.max) : void 0;
        var domainCollection = this.calendar.domainCollection;
        if (__classPrivateFieldGet(this, _Navigator_instances, "m", _Navigator_isDomainBoundaryReached).call(this, newDomainCollection, minDate, maxDate, direction)) {
          return ScrollDirection.SCROLL_NONE;
        }
        if (direction !== ScrollDirection.SCROLL_NONE) {
          newDomainCollection.clamp(minDate, maxDate).slice(options.range, direction === ScrollDirection.SCROLL_FORWARD);
        }
        domainCollection.merge(newDomainCollection, options.range, function(domainKey, index) {
          var subDomainEndDate = null;
          if (newDomainCollection.at(index + 1)) {
            subDomainEndDate = newDomainCollection.at(index + 1);
          } else {
            subDomainEndDate = _this.calendar.dateHelper.intervals(options.domain.type, domainKey, 2).pop();
          }
          return templatesClt.get(options.subDomain.type).mapping(domainKey, subDomainEndDate).map(function(d) {
            return Object.assign(Object.assign({}, d), {
              v: options.data.defaultValue
            });
          });
        });
        __classPrivateFieldGet(this, _Navigator_instances, "m", _Navigator_setDomainsBoundaryReached).call(this, domainCollection.min, domainCollection.max, minDate, maxDate);
        if (direction === ScrollDirection.SCROLL_BACKWARD) {
          this.calendar.eventEmitter.emit("domainsLoaded", [domainCollection.min]);
        } else if (direction === ScrollDirection.SCROLL_FORWARD) {
          this.calendar.eventEmitter.emit("domainsLoaded", [domainCollection.max]);
        }
        return direction;
      }
    }, {
      key: "jumpTo",
      value: function jumpTo(date2, reset) {
        var _this$calendar = this.calendar, domainCollection = _this$calendar.domainCollection, options = _this$calendar.options;
        var minDate = new Date(domainCollection.min);
        var maxDate = new Date(domainCollection.max);
        if (date2 < minDate) {
          return this.loadNewDomains(this.calendar.createDomainCollection(date2, minDate, false), ScrollDirection.SCROLL_BACKWARD);
        }
        if (reset) {
          return this.loadNewDomains(this.calendar.createDomainCollection(date2, options.options.range), minDate < date2 ? ScrollDirection.SCROLL_FORWARD : ScrollDirection.SCROLL_BACKWARD);
        }
        if (date2 > maxDate) {
          return this.loadNewDomains(this.calendar.createDomainCollection(maxDate, date2, false), ScrollDirection.SCROLL_FORWARD);
        }
        return ScrollDirection.SCROLL_NONE;
      }
    }]);
    return Navigator2;
  })();
  _Navigator_instances = /* @__PURE__ */ new WeakSet(), _Navigator_isDomainBoundaryReached = function _Navigator_isDomainBoundaryReached2(newDomainCollection, minDate, maxDate, direction) {
    if (maxDate && newDomainCollection.max >= maxDate && this.maxDomainReached && direction === ScrollDirection.SCROLL_FORWARD) {
      return true;
    }
    if (minDate && newDomainCollection.min <= minDate && this.minDomainReached && direction === ScrollDirection.SCROLL_BACKWARD) {
      return true;
    }
    return false;
  }, _Navigator_setDomainsBoundaryReached = function _Navigator_setDomainsBoundaryReached2(lowerBound, upperBound, min9, max8) {
    if (min9) {
      var reached = lowerBound <= min9;
      this.calendar.eventEmitter.emit(reached ? "minDateReached" : "minDateNotReached");
      this.minDomainReached = reached;
    }
    if (max8) {
      var _reached = upperBound >= max8;
      this.calendar.eventEmitter.emit(_reached ? "maxDateReached" : "maxDateNotReached");
      this.maxDomainReached = _reached;
    }
  };
  var $TypeError$3 = TypeError;
  var MAX_SAFE_INTEGER$2 = 9007199254740991;
  var doesNotExceedSafeInteger$1 = function(it) {
    if (it > MAX_SAFE_INTEGER$2) throw $TypeError$3("Maximum allowed index exceeded");
    return it;
  };
  var $$b = _export;
  var fails$b = fails$u;
  var isArray2 = isArray$5;
  var isObject$3 = isObject$j;
  var toObject$4 = toObject$a;
  var lengthOfArrayLike$2 = lengthOfArrayLike$9;
  var doesNotExceedSafeInteger = doesNotExceedSafeInteger$1;
  var createProperty$1 = createProperty$4;
  var arraySpeciesCreate = arraySpeciesCreate$2;
  var arrayMethodHasSpeciesSupport$1 = arrayMethodHasSpeciesSupport$4;
  var wellKnownSymbol$4 = wellKnownSymbol$m;
  var V8_VERSION = engineV8Version;
  var IS_CONCAT_SPREADABLE = wellKnownSymbol$4("isConcatSpreadable");
  var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails$b(function() {
    var array2 = [];
    array2[IS_CONCAT_SPREADABLE] = false;
    return array2.concat()[0] !== array2;
  });
  var isConcatSpreadable = function(O) {
    if (!isObject$3(O)) return false;
    var spreadable = O[IS_CONCAT_SPREADABLE];
    return spreadable !== void 0 ? !!spreadable : isArray2(O);
  };
  var FORCED$2 = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport$1("concat");
  $$b({ target: "Array", proto: true, arity: 1, forced: FORCED$2 }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    concat: function concat(arg) {
      var O = toObject$4(this);
      var A2 = arraySpeciesCreate(O, 0);
      var n = 0;
      var i, k2, length3, len, E2;
      for (i = -1, length3 = arguments.length; i < length3; i++) {
        E2 = i === -1 ? O : arguments[i];
        if (isConcatSpreadable(E2)) {
          len = lengthOfArrayLike$2(E2);
          doesNotExceedSafeInteger(n + len);
          for (k2 = 0; k2 < len; k2++, n++) if (k2 in E2) createProperty$1(A2, n, E2[k2]);
        } else {
          doesNotExceedSafeInteger(n + 1);
          createProperty$1(A2, n++, E2);
        }
      }
      A2.length = n;
      return A2;
    }
  });
  var fails$a = fails$u;
  var arrayMethodIsStrict$3 = function(METHOD_NAME, argument) {
    var method = [][METHOD_NAME];
    return !!method && fails$a(function() {
      method.call(null, argument || function() {
        return 1;
      }, 1);
    });
  };
  var $$a = _export;
  var uncurryThis$a = functionUncurryThis;
  var IndexedObject = indexedObject;
  var toIndexedObject$1 = toIndexedObject$9;
  var arrayMethodIsStrict$2 = arrayMethodIsStrict$3;
  var nativeJoin = uncurryThis$a([].join);
  var ES3_STRINGS = IndexedObject !== Object;
  var FORCED$1 = ES3_STRINGS || !arrayMethodIsStrict$2("join", ",");
  $$a({ target: "Array", proto: true, forced: FORCED$1 }, {
    join: function join2(separator) {
      return nativeJoin(toIndexedObject$1(this), separator === void 0 ? "," : separator);
    }
  });
  var create$1 = objectCreate$1;
  var defineBuiltInAccessor$1 = defineBuiltInAccessor$3;
  var defineBuiltIns = defineBuiltIns$2;
  var bind$1 = functionBindContext;
  var anInstance = anInstance$4;
  var isNullOrUndefined$1 = isNullOrUndefined$8;
  var iterate = iterate$6;
  var defineIterator = iteratorDefine;
  var createIterResultObject = createIterResultObject$3;
  var setSpecies = setSpecies$2;
  var DESCRIPTORS$2 = descriptors;
  var fastKey = internalMetadataExports.fastKey;
  var InternalStateModule = internalState;
  var setInternalState = InternalStateModule.set;
  var internalStateGetterFor = InternalStateModule.getterFor;
  var collectionStrong$2 = {
    getConstructor: function(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
      var Constructor = wrapper(function(that, iterable) {
        anInstance(that, Prototype);
        setInternalState(that, {
          type: CONSTRUCTOR_NAME,
          index: create$1(null),
          first: void 0,
          last: void 0,
          size: 0
        });
        if (!DESCRIPTORS$2) that.size = 0;
        if (!isNullOrUndefined$1(iterable)) iterate(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
      });
      var Prototype = Constructor.prototype;
      var getInternalState5 = internalStateGetterFor(CONSTRUCTOR_NAME);
      var define = function(that, key, value) {
        var state = getInternalState5(that);
        var entry = getEntry(that, key);
        var previous, index;
        if (entry) {
          entry.value = value;
        } else {
          state.last = entry = {
            index: index = fastKey(key, true),
            key,
            value,
            previous: previous = state.last,
            next: void 0,
            removed: false
          };
          if (!state.first) state.first = entry;
          if (previous) previous.next = entry;
          if (DESCRIPTORS$2) state.size++;
          else that.size++;
          if (index !== "F") state.index[index] = entry;
        }
        return that;
      };
      var getEntry = function(that, key) {
        var state = getInternalState5(that);
        var index = fastKey(key);
        var entry;
        if (index !== "F") return state.index[index];
        for (entry = state.first; entry; entry = entry.next) {
          if (entry.key === key) return entry;
        }
      };
      defineBuiltIns(Prototype, {
        // `{ Map, Set }.prototype.clear()` methods
        // https://tc39.es/ecma262/#sec-map.prototype.clear
        // https://tc39.es/ecma262/#sec-set.prototype.clear
        clear: function clear5() {
          var that = this;
          var state = getInternalState5(that);
          var data6 = state.index;
          var entry = state.first;
          while (entry) {
            entry.removed = true;
            if (entry.previous) entry.previous = entry.previous.next = void 0;
            delete data6[entry.index];
            entry = entry.next;
          }
          state.first = state.last = void 0;
          if (DESCRIPTORS$2) state.size = 0;
          else that.size = 0;
        },
        // `{ Map, Set }.prototype.delete(key)` methods
        // https://tc39.es/ecma262/#sec-map.prototype.delete
        // https://tc39.es/ecma262/#sec-set.prototype.delete
        "delete": function(key) {
          var that = this;
          var state = getInternalState5(that);
          var entry = getEntry(that, key);
          if (entry) {
            var next5 = entry.next;
            var prev = entry.previous;
            delete state.index[entry.index];
            entry.removed = true;
            if (prev) prev.next = next5;
            if (next5) next5.previous = prev;
            if (state.first === entry) state.first = next5;
            if (state.last === entry) state.last = prev;
            if (DESCRIPTORS$2) state.size--;
            else that.size--;
          }
          return !!entry;
        },
        // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
        // https://tc39.es/ecma262/#sec-map.prototype.foreach
        // https://tc39.es/ecma262/#sec-set.prototype.foreach
        forEach: function forEach7(callbackfn) {
          var state = getInternalState5(this);
          var boundFunction = bind$1(callbackfn, arguments.length > 1 ? arguments[1] : void 0);
          var entry;
          while (entry = entry ? entry.next : state.first) {
            boundFunction(entry.value, entry.key, this);
            while (entry && entry.removed) entry = entry.previous;
          }
        },
        // `{ Map, Set}.prototype.has(key)` methods
        // https://tc39.es/ecma262/#sec-map.prototype.has
        // https://tc39.es/ecma262/#sec-set.prototype.has
        has: function has5(key) {
          return !!getEntry(this, key);
        }
      });
      defineBuiltIns(Prototype, IS_MAP ? {
        // `Map.prototype.get(key)` method
        // https://tc39.es/ecma262/#sec-map.prototype.get
        get: function get7(key) {
          var entry = getEntry(this, key);
          return entry && entry.value;
        },
        // `Map.prototype.set(key, value)` method
        // https://tc39.es/ecma262/#sec-map.prototype.set
        set: function set7(key, value) {
          return define(this, key === 0 ? 0 : key, value);
        }
      } : {
        // `Set.prototype.add(value)` method
        // https://tc39.es/ecma262/#sec-set.prototype.add
        add: function add(value) {
          return define(this, value = value === 0 ? 0 : value, value);
        }
      });
      if (DESCRIPTORS$2) defineBuiltInAccessor$1(Prototype, "size", {
        configurable: true,
        get: function() {
          return getInternalState5(this).size;
        }
      });
      return Constructor;
    },
    setStrong: function(Constructor, CONSTRUCTOR_NAME, IS_MAP) {
      var ITERATOR_NAME = CONSTRUCTOR_NAME + " Iterator";
      var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
      var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
      defineIterator(Constructor, CONSTRUCTOR_NAME, function(iterated, kind) {
        setInternalState(this, {
          type: ITERATOR_NAME,
          target: iterated,
          state: getInternalCollectionState(iterated),
          kind,
          last: void 0
        });
      }, function() {
        var state = getInternalIteratorState(this);
        var kind = state.kind;
        var entry = state.last;
        while (entry && entry.removed) entry = entry.previous;
        if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
          state.target = void 0;
          return createIterResultObject(void 0, true);
        }
        if (kind === "keys") return createIterResultObject(entry.key, false);
        if (kind === "values") return createIterResultObject(entry.value, false);
        return createIterResultObject([entry.key, entry.value], false);
      }, IS_MAP ? "entries" : "values", !IS_MAP, true);
      setSpecies(CONSTRUCTOR_NAME);
    }
  };
  var collection$1 = collection$3;
  var collectionStrong$1 = collectionStrong$2;
  collection$1("Map", function(init2) {
    return function Map2() {
      return init2(this, arguments.length ? arguments[0] : void 0);
    };
  }, collectionStrong$1);
  var tryToString = tryToString$5;
  var $TypeError$2 = TypeError;
  var deletePropertyOrThrow$1 = function(O, P) {
    if (!delete O[P]) throw new $TypeError$2("Cannot delete property " + tryToString(P) + " of " + tryToString(O));
  };
  var arraySlice = arraySliceSimple;
  var floor$1 = Math.floor;
  var mergeSort = function(array2, comparefn) {
    var length3 = array2.length;
    var middle = floor$1(length3 / 2);
    return length3 < 8 ? insertionSort(array2, comparefn) : merge(
      array2,
      mergeSort(arraySlice(array2, 0, middle), comparefn),
      mergeSort(arraySlice(array2, middle), comparefn),
      comparefn
    );
  };
  var insertionSort = function(array2, comparefn) {
    var length3 = array2.length;
    var i = 1;
    var element, j;
    while (i < length3) {
      j = i;
      element = array2[i];
      while (j && comparefn(array2[j - 1], element) > 0) {
        array2[j] = array2[--j];
      }
      if (j !== i++) array2[j] = element;
    }
    return array2;
  };
  var merge = function(array2, left2, right2, comparefn) {
    var llength = left2.length;
    var rlength = right2.length;
    var lindex = 0;
    var rindex = 0;
    while (lindex < llength || rindex < rlength) {
      array2[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left2[lindex], right2[rindex]) <= 0 ? left2[lindex++] : right2[rindex++] : lindex < llength ? left2[lindex++] : right2[rindex++];
    }
    return array2;
  };
  var arraySort = mergeSort;
  var userAgent$1 = engineUserAgent;
  var firefox = userAgent$1.match(/firefox\/(\d+)/i);
  var engineFfVersion = !!firefox && +firefox[1];
  var UA = engineUserAgent;
  var engineIsIeOrEdge = /MSIE|Trident/.test(UA);
  var userAgent = engineUserAgent;
  var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);
  var engineWebkitVersion = !!webkit && +webkit[1];
  var $$9 = _export;
  var uncurryThis$9 = functionUncurryThis;
  var aCallable = aCallable$a;
  var toObject$3 = toObject$a;
  var lengthOfArrayLike$1 = lengthOfArrayLike$9;
  var deletePropertyOrThrow = deletePropertyOrThrow$1;
  var toString$6 = toString$9;
  var fails$9 = fails$u;
  var internalSort = arraySort;
  var arrayMethodIsStrict$1 = arrayMethodIsStrict$3;
  var FF = engineFfVersion;
  var IE_OR_EDGE = engineIsIeOrEdge;
  var V8 = engineV8Version;
  var WEBKIT = engineWebkitVersion;
  var test = [];
  var nativeSort = uncurryThis$9(test.sort);
  var push$2 = uncurryThis$9(test.push);
  var FAILS_ON_UNDEFINED = fails$9(function() {
    test.sort(void 0);
  });
  var FAILS_ON_NULL = fails$9(function() {
    test.sort(null);
  });
  var STRICT_METHOD$1 = arrayMethodIsStrict$1("sort");
  var STABLE_SORT = !fails$9(function() {
    if (V8) return V8 < 70;
    if (FF && FF > 3) return;
    if (IE_OR_EDGE) return true;
    if (WEBKIT) return WEBKIT < 603;
    var result = "";
    var code, chr, value, index;
    for (code = 65; code < 76; code++) {
      chr = String.fromCharCode(code);
      switch (code) {
        case 66:
        case 69:
        case 70:
        case 72:
          value = 3;
          break;
        case 68:
        case 71:
          value = 4;
          break;
        default:
          value = 2;
      }
      for (index = 0; index < 47; index++) {
        test.push({ k: chr + index, v: value });
      }
    }
    test.sort(function(a2, b) {
      return b.v - a2.v;
    });
    for (index = 0; index < test.length; index++) {
      chr = test[index].k.charAt(0);
      if (result.charAt(result.length - 1) !== chr) result += chr;
    }
    return result !== "DGBEFHACIJK";
  });
  var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD$1 || !STABLE_SORT;
  var getSortCompare = function(comparefn) {
    return function(x, y) {
      if (y === void 0) return -1;
      if (x === void 0) return 1;
      if (comparefn !== void 0) return +comparefn(x, y) || 0;
      return toString$6(x) > toString$6(y) ? 1 : -1;
    };
  };
  $$9({ target: "Array", proto: true, forced: FORCED }, {
    sort: function sort2(comparefn) {
      if (comparefn !== void 0) aCallable(comparefn);
      var array2 = toObject$3(this);
      if (STABLE_SORT) return comparefn === void 0 ? nativeSort(array2) : nativeSort(array2, comparefn);
      var items = [];
      var arrayLength = lengthOfArrayLike$1(array2);
      var itemsLength, index;
      for (index = 0; index < arrayLength; index++) {
        if (index in array2) push$2(items, array2[index]);
      }
      internalSort(items, getSortCompare(comparefn));
      itemsLength = lengthOfArrayLike$1(items);
      index = 0;
      while (index < itemsLength) array2[index] = items[index++];
      while (index < arrayLength) deletePropertyOrThrow(array2, index++);
      return array2;
    }
  });
  var $forEach = arrayIteration.forEach;
  var arrayMethodIsStrict = arrayMethodIsStrict$3;
  var STRICT_METHOD = arrayMethodIsStrict("forEach");
  var arrayForEach = !STRICT_METHOD ? function forEach(callbackfn) {
    return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
  } : [].forEach;
  var global$4 = global$n;
  var DOMIterables = domIterables;
  var DOMTokenListPrototype = domTokenListPrototype;
  var forEach2 = arrayForEach;
  var createNonEnumerableProperty$1 = createNonEnumerableProperty$6;
  var handlePrototype = function(CollectionPrototype) {
    if (CollectionPrototype && CollectionPrototype.forEach !== forEach2) try {
      createNonEnumerableProperty$1(CollectionPrototype, "forEach", forEach2);
    } catch (error) {
      CollectionPrototype.forEach = forEach2;
    }
  };
  for (COLLECTION_NAME in DOMIterables) {
    if (DOMIterables[COLLECTION_NAME]) {
      handlePrototype(global$4[COLLECTION_NAME] && global$4[COLLECTION_NAME].prototype);
    }
  }
  var COLLECTION_NAME;
  handlePrototype(DOMTokenListPrototype);
  function isVertical(position3) {
    return position3 === "top" || position3 === "bottom";
  }
  function horizontalPadding(padding) {
    return padding[Position.LEFT] + padding[Position.RIGHT];
  }
  function verticalPadding(padding) {
    return padding[Position.TOP] + padding[Position.BOTTOM];
  }
  var _DomainCoordinates_instances;
  var _DomainCoordinates_getWidth;
  var _DomainCoordinates_getHeight;
  var DomainCoordinates = /* @__PURE__ */ (function() {
    function DomainCoordinates2(calendar2, domainPainter) {
      _classCallCheck(this, DomainCoordinates2);
      _DomainCoordinates_instances.add(this);
      this.calendar = calendar2;
      this.domainPainter = domainPainter;
      this.collection = /* @__PURE__ */ new Map();
      this.scrollDirection = ScrollDirection.SCROLL_FORWARD;
    }
    _createClass(DomainCoordinates2, [{
      key: "get",
      value: function get7(domainKey) {
        return this.collection.get(domainKey);
      }
    }, {
      key: "update",
      value: function update(collection5, scrollDirection) {
        var _this = this;
        var _this$calendar$option = this.calendar.options.options, verticalOrientation = _this$calendar$option.verticalOrientation, domain = _this$calendar$option.domain;
        this.scrollDirection = scrollDirection;
        var dimensions = {
          width: 0,
          height: 0
        };
        var exitingTotal = 0;
        var scrollFactor = scrollDirection === ScrollDirection.SCROLL_FORWARD ? -1 : 1;
        var keys12 = collection5.keys;
        if (this.calendar.options.options.domain.sort === "desc") {
          keys12.reverse();
          scrollFactor *= -1;
        }
        collection5.yankedDomains.forEach(function(domainKey) {
          exitingTotal += _this.collection.get(domainKey)[verticalOrientation ? "height" : "width"];
        });
        collection5.yankedDomains.forEach(function(domainKey) {
          var coor = _this.collection.get(domainKey);
          _this.collection.set(domainKey, Object.assign(Object.assign({}, coor), {
            x: verticalOrientation ? coor.x : coor.x + exitingTotal * scrollFactor,
            y: verticalOrientation ? coor.y + exitingTotal * scrollFactor : coor.y
          }));
        });
        keys12.forEach(function(domainKey) {
          var w = __classPrivateFieldGet(_this, _DomainCoordinates_instances, "m", _DomainCoordinates_getWidth).call(_this, domainKey);
          var h = __classPrivateFieldGet(_this, _DomainCoordinates_instances, "m", _DomainCoordinates_getHeight).call(_this, domainKey);
          if (verticalOrientation) {
            dimensions.height += h;
            dimensions.width = Math.max(w, dimensions.width);
          } else {
            dimensions.width += w;
            dimensions.height = Math.max(h, dimensions.height);
          }
          var x = dimensions.width - w;
          var y = dimensions.height - h;
          _this.collection.set(domainKey, Object.assign(Object.assign({}, _this.collection.get(domainKey)), {
            x: verticalOrientation ? 0 : x,
            y: verticalOrientation ? y : 0,
            pre_x: verticalOrientation ? x : x - exitingTotal * scrollFactor,
            pre_y: verticalOrientation ? y - exitingTotal * scrollFactor : y,
            width: w,
            height: h,
            inner_width: w - (verticalOrientation ? 0 : domain.gutter),
            inner_height: h - (!verticalOrientation ? 0 : domain.gutter)
          }));
        });
        return dimensions;
      }
    }]);
    return DomainCoordinates2;
  })();
  _DomainCoordinates_instances = /* @__PURE__ */ new WeakSet(), _DomainCoordinates_getWidth = function _DomainCoordinates_getWidth2(d) {
    var _this$calendar$option2 = this.calendar.options.options, domain = _this$calendar$option2.domain, subDomain = _this$calendar$option2.subDomain, x = _this$calendar$option2.x, verticalOrientation = _this$calendar$option2.verticalOrientation;
    var columnsCount = this.calendar.templateCollection.get(subDomain.type).columnsCount(d);
    var subDomainWidth = (subDomain.width + subDomain.gutter) * columnsCount - subDomain.gutter;
    return horizontalPadding(domain.padding) + x.domainHorizontalLabelWidth + (verticalOrientation ? 0 : domain.gutter) + subDomainWidth;
  }, _DomainCoordinates_getHeight = function _DomainCoordinates_getHeight2(d) {
    var _this$calendar$option3 = this.calendar.options.options, domain = _this$calendar$option3.domain, subDomain = _this$calendar$option3.subDomain, x = _this$calendar$option3.x, verticalOrientation = _this$calendar$option3.verticalOrientation;
    var rowsCount = this.calendar.templateCollection.get(subDomain.type).rowsCount(d);
    var subDomainHeight = (subDomain.height + subDomain.gutter) * rowsCount - subDomain.gutter;
    return verticalPadding(domain.padding) + subDomainHeight + (verticalOrientation ? domain.gutter : 0) + x.domainVerticalLabelHeight;
  };
  var _DomainPainter_instances;
  var _DomainPainter_getClassName;
  var DEFAULT_SELECTOR$3 = ".ch-domain";
  var DomainPainter = /* @__PURE__ */ (function() {
    function DomainPainter2(calendar2) {
      _classCallCheck(this, DomainPainter2);
      _DomainPainter_instances.add(this);
      this.calendar = calendar2;
      this.coordinates = new DomainCoordinates(calendar2, this);
      this.root = null;
      this.dimensions = {
        width: 0,
        height: 0
      };
    }
    _createClass(DomainPainter2, [{
      key: "paint",
      value: function paint(scrollDirection, rootNode) {
        var _this = this;
        var animationDuration = this.calendar.options.options.animationDuration;
        var t = rootNode.transition().duration(animationDuration);
        var coor = this.coordinates;
        this.dimensions = coor.update(this.calendar.domainCollection, scrollDirection);
        var promises = [];
        this.root = rootNode.selectAll(DEFAULT_SELECTOR$3).data(this.calendar.domainCollection.keys, function(d) {
          return d;
        }).join(function(enter) {
          return enter.append("svg").attr("x", function(d) {
            return coor.get(d).pre_x;
          }).attr("y", function(d) {
            return coor.get(d).pre_y;
          }).attr("width", function(d) {
            return coor.get(d).inner_width;
          }).attr("height", function(d) {
            return coor.get(d).inner_height;
          }).attr("class", function(d) {
            return __classPrivateFieldGet(_this, _DomainPainter_instances, "m", _DomainPainter_getClassName).call(_this, d);
          }).call(function(enterSelection) {
            return enterSelection.append("rect").attr("width", function(d) {
              return coor.get(d).inner_width;
            }).attr("height", function(d) {
              return coor.get(d).inner_height;
            }).attr("class", "".concat(DEFAULT_SELECTOR$3.slice(1), "-bg"));
          }).call(function(enterSelection) {
            return promises.push(enterSelection.transition(t).attr("x", function(d) {
              return coor.get(d).x;
            }).attr("y", function(d) {
              return coor.get(d).y;
            }).end());
          });
        }, function(update) {
          return update.call(function(updateSelection) {
            return promises.push(updateSelection.transition(t).attr("x", function(d) {
              return coor.get(d).x;
            }).attr("y", function(d) {
              return coor.get(d).y;
            }).attr("width", function(d) {
              return coor.get(d).inner_width;
            }).attr("height", function(d) {
              return coor.get(d).inner_height;
            }).end());
          }).call(function(updateSelection) {
            return promises.push(updateSelection.selectAll("".concat(DEFAULT_SELECTOR$3, "-bg")).transition(t).attr("width", function(d) {
              return coor.get(d).inner_width;
            }).attr("height", function(d) {
              return coor.get(d).inner_height;
            }).end());
          });
        }, function(exit) {
          return exit.call(function(exitSelection) {
            return promises.push(exitSelection.transition(t).attr("x", function(d) {
              return coor.get(d).x;
            }).attr("y", function(d) {
              return coor.get(d).y;
            }).remove().end());
          });
        });
        return promises;
      }
    }]);
    return DomainPainter2;
  })();
  _DomainPainter_instances = /* @__PURE__ */ new WeakSet(), _DomainPainter_getClassName = function _DomainPainter_getClassName2(d) {
    var classname = DEFAULT_SELECTOR$3.slice(1);
    var helper = this.calendar.dateHelper.date(d);
    switch (this.calendar.options.options.domain.type) {
      case "hour":
        classname += " h_".concat(helper.hour());
        break;
      case "day":
        classname += " d_".concat(helper.date(), " dy_").concat(helper.format("d") + 1);
        break;
      case "week":
        classname += " w_".concat(helper.week());
        break;
      case "month":
        classname += " m_".concat(helper.month() + 1);
        break;
      case "year":
        classname += " y_".concat(helper.year());
        break;
    }
    return classname;
  };
  var $$8 = _export;
  var $includes = arrayIncludes.includes;
  var fails$8 = fails$u;
  var addToUnscopables = addToUnscopables$3;
  var BROKEN_ON_SPARSE = fails$8(function() {
    return !Array(1).includes();
  });
  $$8({ target: "Array", proto: true, forced: BROKEN_ON_SPARSE }, {
    includes: function includes(el) {
      return $includes(this, el, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  addToUnscopables("includes");
  var $$7 = _export;
  var $filter = arrayIteration.filter;
  var arrayMethodHasSpeciesSupport = arrayMethodHasSpeciesSupport$4;
  var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("filter");
  $$7({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
    filter: function filter2(callbackfn) {
      return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  var anObject$3 = anObject$f;
  var iteratorClose = iteratorClose$2;
  var callWithSafeIterationClosing$1 = function(iterator, fn2, value, ENTRIES5) {
    try {
      return ENTRIES5 ? fn2(anObject$3(value)[0], value[1]) : fn2(value);
    } catch (error) {
      iteratorClose(iterator, "throw", error);
    }
  };
  var bind = functionBindContext;
  var call$3 = functionCall;
  var toObject$2 = toObject$a;
  var callWithSafeIterationClosing = callWithSafeIterationClosing$1;
  var isArrayIteratorMethod = isArrayIteratorMethod$2;
  var isConstructor3 = isConstructor$4;
  var lengthOfArrayLike = lengthOfArrayLike$9;
  var createProperty = createProperty$4;
  var getIterator = getIterator$2;
  var getIteratorMethod = getIteratorMethod$3;
  var $Array = Array;
  var arrayFrom = function from(arrayLike) {
    var O = toObject$2(arrayLike);
    var IS_CONSTRUCTOR = isConstructor3(this);
    var argumentsLength = arguments.length;
    var mapfn = argumentsLength > 1 ? arguments[1] : void 0;
    var mapping = mapfn !== void 0;
    if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : void 0);
    var iteratorMethod = getIteratorMethod(O);
    var index = 0;
    var length3, result, step, iterator, next5, value;
    if (iteratorMethod && !(this === $Array && isArrayIteratorMethod(iteratorMethod))) {
      iterator = getIterator(O, iteratorMethod);
      next5 = iterator.next;
      result = IS_CONSTRUCTOR ? new this() : [];
      for (; !(step = call$3(next5, iterator)).done; index++) {
        value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
        createProperty(result, index, value);
      }
    } else {
      length3 = lengthOfArrayLike(O);
      result = IS_CONSTRUCTOR ? new this(length3) : $Array(length3);
      for (; length3 > index; index++) {
        value = mapping ? mapfn(O[index], index) : O[index];
        createProperty(result, index, value);
      }
    }
    result.length = index;
    return result;
  };
  var $$6 = _export;
  var from2 = arrayFrom;
  var checkCorrectnessOfIteration = checkCorrectnessOfIteration$3;
  var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function(iterable) {
    Array.from(iterable);
  });
  $$6({ target: "Array", stat: true, forced: INCORRECT_ITERATION }, {
    from: from2
  });
  var _DomainCollection_instances;
  var _DomainCollection_setSubDomainValues;
  var _DomainCollection_extractValues;
  var _DomainCollection_refreshKeys;
  var DOMAIN_FORMAT = {
    year: "YYYY",
    month: "MMMM",
    week: "wo [week] YYYY",
    xDay: "Do MMM",
    ghDay: "Do MMM",
    day: "Do MMM",
    hour: "HH:00",
    minute: "HH:mm"
  };
  var DomainCollection = /* @__PURE__ */ (function() {
    function DomainCollection2(dateHelper, interval2, start3, range3) {
      var excludeEnd = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
      _classCallCheck(this, DomainCollection2);
      _DomainCollection_instances.add(this);
      this.collection = /* @__PURE__ */ new Map();
      this.dateHelper = dateHelper;
      if (interval2 && start3 && range3) {
        var ts = this.dateHelper.intervals(interval2, start3, range3, excludeEnd).map(function(d) {
          return castArray(d);
        });
        this.collection = new Map(ts);
      }
      this.min = 0;
      this.max = 0;
      this.keys = [];
      this.yankedDomains = [];
      if (this.collection.size > 0) {
        __classPrivateFieldGet(this, _DomainCollection_instances, "m", _DomainCollection_refreshKeys).call(this);
      }
    }
    _createClass(DomainCollection2, [{
      key: "has",
      value: function has5(key) {
        return this.collection.has(key);
      }
    }, {
      key: "get",
      value: function get7(key) {
        return this.collection.get(key);
      }
    }, {
      key: "forEach",
      value: function forEach7(callback) {
        return this.collection.forEach(callback);
      }
    }, {
      key: "at",
      value: function at(index) {
        return this.keys[index];
      }
    }, {
      key: "clamp",
      value: function clamp(minDate, maxDate) {
        var _this = this;
        if (minDate && this.min < minDate) {
          this.keys.filter(function(key) {
            return key < minDate;
          }).forEach(function(d) {
            return _this.collection.delete(d);
          });
        }
        if (maxDate && this.max > maxDate) {
          this.keys.filter(function(key) {
            return key > maxDate;
          }).forEach(function(d) {
            return _this.collection.delete(d);
          });
        }
        __classPrivateFieldGet(this, _DomainCollection_instances, "m", _DomainCollection_refreshKeys).call(this);
        return this;
      }
    }, {
      key: "merge",
      value: function merge3(newCollection, limit, createValueCallback) {
        var _this2 = this;
        this.yankedDomains = [];
        newCollection.keys.forEach(function(domainKey, index) {
          if (_this2.has(domainKey)) {
            return;
          }
          if (_this2.collection.size >= limit) {
            var keyToRemove = _this2.max;
            if (domainKey > _this2.max) {
              keyToRemove = _this2.min;
            }
            if (keyToRemove && _this2.collection.delete(keyToRemove)) {
              _this2.yankedDomains.push(keyToRemove);
            }
          }
          _this2.collection.set(domainKey, createValueCallback(domainKey, index));
          __classPrivateFieldGet(_this2, _DomainCollection_instances, "m", _DomainCollection_refreshKeys).call(_this2);
        });
        this.yankedDomains = this.yankedDomains.sort(function(a2, b) {
          return a2 - b;
        });
      }
    }, {
      key: "slice",
      value: function slice5() {
        var _this3 = this;
        var limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
        var fromBeginning = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
        if (this.keys.length > limit) {
          var keysToDelete = fromBeginning ? this.keys.slice(0, -limit) : this.keys.slice(limit);
          keysToDelete.forEach(function(key) {
            _this3.collection.delete(key);
          });
          __classPrivateFieldGet(this, _DomainCollection_instances, "m", _DomainCollection_refreshKeys).call(this);
        }
        return this;
      }
    }, {
      key: "fill",
      value: function fill3(data6, _ref, subDomainKeyExtractor) {
        var _this4 = this;
        var x = _ref.x, y = _ref.y, groupY = _ref.groupY, defaultValue = _ref.defaultValue;
        var groupedRecords = this.groupRecords(data6, x, subDomainKeyExtractor);
        this.keys.forEach(function(domainKey) {
          var records = groupedRecords.get(domainKey) || {};
          __classPrivateFieldGet(_this4, _DomainCollection_instances, "m", _DomainCollection_setSubDomainValues).call(_this4, domainKey, records, y, groupY, defaultValue);
        });
      }
    }, {
      key: "groupRecords",
      value: function groupRecords(data6, x, subDomainKeyExtractor) {
        var _this5 = this;
        var results = /* @__PURE__ */ new Map();
        var validSubDomainTimestamp = /* @__PURE__ */ new Map();
        this.keys.forEach(function(domainKey) {
          _this5.get(domainKey).forEach(function(subDomain) {
            validSubDomainTimestamp.set(subDomain.t, domainKey);
          });
        });
        data6.forEach(function(d) {
          var timestamp = _this5.extractTimestamp(d, x, subDomainKeyExtractor);
          if (validSubDomainTimestamp.has(timestamp)) {
            var domainKey = validSubDomainTimestamp.get(timestamp);
            var records = results.get(domainKey) || {};
            records[timestamp] || (records[timestamp] = []);
            records[timestamp].push(d);
            results.set(domainKey, records);
          }
        });
        return results;
      }
      // eslint-disable-next-line class-methods-use-this
    }, {
      key: "groupValues",
      value: function groupValues(values5, groupFn) {
        var cleanedValues = values5.filter(function(n) {
          return n !== null;
        });
        if (typeof groupFn === "string") {
          if (cleanedValues.every(function(n) {
            return typeof n === "number";
          })) {
            switch (groupFn) {
              case "sum":
                return cleanedValues.reduce(function(a2, b) {
                  return a2 + b;
                }, 0);
              case "count":
                return cleanedValues.length;
              case "min":
                return Math.min.apply(Math, _toConsumableArray(cleanedValues)) || null;
              case "max":
                return Math.max.apply(Math, _toConsumableArray(cleanedValues)) || null;
              case "average":
                return cleanedValues.length > 0 ? cleanedValues.reduce(function(a2, b) {
                  return a2 + b;
                }, 0) / cleanedValues.length : null;
              default:
                return null;
            }
          }
          switch (groupFn) {
            case "count":
              return cleanedValues.length;
            default:
              return null;
          }
        } else if (typeof groupFn === "function") {
          return groupFn(cleanedValues);
        }
        return null;
      }
      // eslint-disable-next-line class-methods-use-this
    }, {
      key: "extractTimestamp",
      value: function extractTimestamp(datum2, x, extractorFn) {
        var timestamp = typeof x === "function" ? x(datum2) : datum2[x];
        if (typeof timestamp === "string") {
          timestamp = +new Date(timestamp);
        }
        return extractorFn(timestamp);
      }
    }]);
    return DomainCollection2;
  })();
  _DomainCollection_instances = /* @__PURE__ */ new WeakSet(), _DomainCollection_setSubDomainValues = function _DomainCollection_setSubDomainValues2(domainKey, records, y, groupY, defaultValue) {
    var _this6 = this;
    this.get(domainKey).forEach(function(subDomain, index) {
      var value = defaultValue;
      if (records.hasOwnProperty(subDomain.t)) {
        value = _this6.groupValues(__classPrivateFieldGet(_this6, _DomainCollection_instances, "m", _DomainCollection_extractValues).call(_this6, records[subDomain.t], y), groupY);
      }
      _this6.get(domainKey)[index].v = value;
    });
  }, _DomainCollection_extractValues = function _DomainCollection_extractValues2(data6, y) {
    return data6.map(function(d) {
      return typeof y === "function" ? y(d) : d[y];
    });
  }, _DomainCollection_refreshKeys = function _DomainCollection_refreshKeys2() {
    this.keys = Array.from(this.collection.keys()).map(function(d) {
      return parseInt(d, 10);
    }).sort(function(a2, b) {
      return a2 - b;
    });
    var keys12 = this.keys;
    this.min = keys12[0];
    this.max = keys12[keys12.length - 1];
    return this.keys;
  };
  var _DomainLabelPainter_instances;
  var _DomainLabelPainter_textVerticalAlign;
  var _DomainLabelPainter_getX;
  var _DomainLabelPainter_getY;
  var _DomainLabelPainter_getDomainInsideWidth;
  var _DomainLabelPainter_getDomainInsideHeight;
  var _DomainLabelPainter_domainRotate;
  var DEFAULT_SELECTOR$2 = ".ch-domain-text";
  var DomainLabelPainter = /* @__PURE__ */ (function() {
    function DomainLabelPainter2(calendar2) {
      _classCallCheck(this, DomainLabelPainter2);
      _DomainLabelPainter_instances.add(this);
      this.calendar = calendar2;
    }
    _createClass(DomainLabelPainter2, [{
      key: "paint",
      value: function paint(root3) {
        var _this = this;
        var _this$calendar$option = this.calendar.options.options.domain, label = _this$calendar$option.label, type2 = _this$calendar$option.type;
        var dateHelper = this.calendar.dateHelper;
        var format2 = label.text;
        if (format2 === null || format2 === "") {
          return;
        }
        if (typeof format2 === "undefined") {
          format2 = DOMAIN_FORMAT[type2];
        }
        root3.selectAll(DEFAULT_SELECTOR$2).data(function(d) {
          return [d];
        }, function(d) {
          return d;
        }).join(function(enter) {
          return enter.append("text").attr("class", DEFAULT_SELECTOR$2.slice(1)).attr("x", function(d) {
            return __classPrivateFieldGet(_this, _DomainLabelPainter_instances, "m", _DomainLabelPainter_getX).call(_this, d);
          }).attr("y", function(d) {
            return __classPrivateFieldGet(_this, _DomainLabelPainter_instances, "m", _DomainLabelPainter_getY).call(_this, d);
          }).attr("text-anchor", label.textAlign).attr("dominant-baseline", function() {
            return __classPrivateFieldGet(_this, _DomainLabelPainter_instances, "m", _DomainLabelPainter_textVerticalAlign).call(_this);
          }).text(function(d, i, nodes) {
            return (
              // eslint-disable-next-line implicit-arrow-linebreak
              dateHelper.format(d, format2, nodes[i])
            );
          }).call(function(selection2) {
            return __classPrivateFieldGet(_this, _DomainLabelPainter_instances, "m", _DomainLabelPainter_domainRotate).call(_this, selection2);
          });
        }, function(update) {
          update.attr("x", function(d) {
            return __classPrivateFieldGet(_this, _DomainLabelPainter_instances, "m", _DomainLabelPainter_getX).call(_this, d);
          }).attr("y", function(d) {
            return __classPrivateFieldGet(_this, _DomainLabelPainter_instances, "m", _DomainLabelPainter_getY).call(_this, d);
          }).attr("text-anchor", label.textAlign).attr("dominant-baseline", function() {
            return __classPrivateFieldGet(_this, _DomainLabelPainter_instances, "m", _DomainLabelPainter_textVerticalAlign).call(_this);
          }).text(function(d, i, nodes) {
            return (
              // eslint-disable-next-line implicit-arrow-linebreak
              dateHelper.format(d, format2, nodes[i])
            );
          }).call(function(selection2) {
            return __classPrivateFieldGet(_this, _DomainLabelPainter_instances, "m", _DomainLabelPainter_domainRotate).call(_this, selection2);
          });
        });
      }
    }]);
    return DomainLabelPainter2;
  })();
  _DomainLabelPainter_instances = /* @__PURE__ */ new WeakSet(), _DomainLabelPainter_textVerticalAlign = function _DomainLabelPainter_textVerticalAlign2() {
    var _this$calendar$option2 = this.calendar.options.options.domain.label, position3 = _this$calendar$option2.position, rotate = _this$calendar$option2.rotate;
    if (isVertical(position3)) {
      return "middle";
    }
    if (rotate === "left" && position3 === "left" || rotate === "right" && position3 === "right") {
      return "bottom";
    }
    return "hanging";
  }, _DomainLabelPainter_getX = function _DomainLabelPainter_getX2(d) {
    var _this$calendar$option3 = this.calendar.options.options.domain, padding = _this$calendar$option3.padding, _this$calendar$option4 = _this$calendar$option3.label, position3 = _this$calendar$option4.position, textAlign = _this$calendar$option4.textAlign, offset2 = _this$calendar$option4.offset;
    var domainHorizontalLabelWidth = this.calendar.options.options.x.domainHorizontalLabelWidth;
    var x = padding[Position.LEFT];
    if (position3 === "right") {
      x += __classPrivateFieldGet(this, _DomainLabelPainter_instances, "m", _DomainLabelPainter_getDomainInsideWidth).call(this, d);
    }
    if (textAlign === "middle") {
      if (["top", "bottom"].includes(position3)) {
        x += __classPrivateFieldGet(this, _DomainLabelPainter_instances, "m", _DomainLabelPainter_getDomainInsideWidth).call(this, d) / 2;
      } else {
        x += domainHorizontalLabelWidth / 2;
      }
    }
    if (textAlign === "end") {
      if (isVertical(position3)) {
        x += __classPrivateFieldGet(this, _DomainLabelPainter_instances, "m", _DomainLabelPainter_getDomainInsideWidth).call(this, d);
      } else {
        x += domainHorizontalLabelWidth;
      }
    }
    return x + offset2.x;
  }, _DomainLabelPainter_getY = function _DomainLabelPainter_getY2(d) {
    var _this$calendar$option5 = this.calendar.options.options, _this$calendar$option6 = _this$calendar$option5.domain, _this$calendar$option7 = _this$calendar$option6.label, position3 = _this$calendar$option7.position, offset2 = _this$calendar$option7.offset, padding = _this$calendar$option6.padding, x = _this$calendar$option5.x;
    var y = padding[Position.TOP] + x.domainVerticalLabelHeight / 2;
    if (position3 === "bottom") {
      y += __classPrivateFieldGet(this, _DomainLabelPainter_instances, "m", _DomainLabelPainter_getDomainInsideHeight).call(this, d);
    }
    return y + offset2.y;
  }, _DomainLabelPainter_getDomainInsideWidth = function _DomainLabelPainter_getDomainInsideWidth2(d) {
    var _this$calendar$option8 = this.calendar.options.options, padding = _this$calendar$option8.domain.padding, domainHorizontalLabelWidth = _this$calendar$option8.x.domainHorizontalLabelWidth;
    var coordinates = this.calendar.calendarPainter.domainsContainerPainter.domainPainter.coordinates;
    return coordinates.get(d).inner_width - domainHorizontalLabelWidth - horizontalPadding(padding);
  }, _DomainLabelPainter_getDomainInsideHeight = function _DomainLabelPainter_getDomainInsideHeight2(d) {
    var _this$calendar$option9 = this.calendar.options.options, domainVerticalLabelHeight = _this$calendar$option9.x.domainVerticalLabelHeight, padding = _this$calendar$option9.domain.padding;
    var coordinates = this.calendar.calendarPainter.domainsContainerPainter.domainPainter.coordinates;
    return coordinates.get(d).inner_height - domainVerticalLabelHeight - verticalPadding(padding);
  }, _DomainLabelPainter_domainRotate = function _DomainLabelPainter_domainRotate2(selection2) {
    var _this2 = this;
    var _this$calendar$option10 = this.calendar.options.options, _this$calendar$option11 = _this$calendar$option10.domain.label, rotate = _this$calendar$option11.rotate, textAlign = _this$calendar$option11.textAlign, position3 = _this$calendar$option11.position, x = _this$calendar$option10.x;
    var labelWidth = x.domainHorizontalLabelWidth;
    switch (rotate) {
      // Rotating the text clockwise
      case "right":
        selection2.attr("transform", function(d) {
          var domainWidth = __classPrivateFieldGet(_this2, _DomainLabelPainter_instances, "m", _DomainLabelPainter_getDomainInsideWidth).call(_this2, d);
          var domainHeight = __classPrivateFieldGet(_this2, _DomainLabelPainter_instances, "m", _DomainLabelPainter_getDomainInsideHeight).call(_this2, d);
          var s2 = ["rotate(90, ".concat(position3 === "right" ? domainWidth : labelWidth, ", 0)")];
          switch (position3) {
            case "right":
              if (textAlign === "middle") {
                s2.push("translate(".concat(domainHeight / 2 - labelWidth / 2, ")"));
              } else if (textAlign === "end") {
                s2.push("translate(".concat(domainHeight - labelWidth, ")"));
              }
              break;
            case "left":
              if (textAlign === "start") {
                s2.push("translate(".concat(labelWidth, ")"));
              } else if (textAlign === "middle") {
                s2.push("translate(".concat(labelWidth / 2 + domainHeight / 2, ")"));
              } else if (textAlign === "end") {
                s2.push("translate(".concat(domainHeight, ")"));
              }
              break;
          }
          return s2.join(",");
        });
        break;
      // Rotating the text anticlockwise
      case "left":
        selection2.attr("transform", function(d) {
          var domainWidth = __classPrivateFieldGet(_this2, _DomainLabelPainter_instances, "m", _DomainLabelPainter_getDomainInsideWidth).call(_this2, d);
          var domainHeight = __classPrivateFieldGet(_this2, _DomainLabelPainter_instances, "m", _DomainLabelPainter_getDomainInsideHeight).call(_this2, d);
          var s2 = ["rotate(270, ".concat(position3 === "right" ? domainWidth : labelWidth, ", 0)")];
          switch (position3) {
            case "right":
              if (textAlign === "start") {
                s2.push("translate(-".concat(domainHeight, ")"));
              } else if (textAlign === "middle") {
                s2.push("translate(-".concat(domainHeight / 2 + labelWidth / 2, ")"));
              } else if (textAlign === "end") {
                s2.push("translate(-".concat(labelWidth, ")"));
              }
              break;
            case "left":
              if (textAlign === "start") {
                s2.push("translate(".concat(labelWidth - domainHeight, ")"));
              } else if (textAlign === "middle") {
                s2.push("translate(".concat(labelWidth / 2 - domainHeight / 2, ")"));
              }
              break;
          }
          return s2.join(",");
        });
        break;
    }
  };
  var whitespaces$2 = "	\n\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
  var uncurryThis$8 = functionUncurryThis;
  var requireObjectCoercible$3 = requireObjectCoercible$7;
  var toString$5 = toString$9;
  var whitespaces$1 = whitespaces$2;
  var replace$2 = uncurryThis$8("".replace);
  var ltrim = RegExp("^[" + whitespaces$1 + "]+");
  var rtrim = RegExp("(^|[^" + whitespaces$1 + "])[" + whitespaces$1 + "]+$");
  var createMethod$1 = function(TYPE) {
    return function($this) {
      var string = toString$5(requireObjectCoercible$3($this));
      if (TYPE & 1) string = replace$2(string, ltrim, "");
      if (TYPE & 2) string = replace$2(string, rtrim, "$1");
      return string;
    };
  };
  var stringTrim = {
    // `String.prototype.{ trimLeft, trimStart }` methods
    // https://tc39.es/ecma262/#sec-string.prototype.trimstart
    start: createMethod$1(1),
    // `String.prototype.{ trimRight, trimEnd }` methods
    // https://tc39.es/ecma262/#sec-string.prototype.trimend
    end: createMethod$1(2),
    // `String.prototype.trim` method
    // https://tc39.es/ecma262/#sec-string.prototype.trim
    trim: createMethod$1(3)
  };
  var PROPER_FUNCTION_NAME = functionName.PROPER;
  var fails$7 = fails$u;
  var whitespaces = whitespaces$2;
  var non = "\u200B\x85\u180E";
  var stringTrimForced = function(METHOD_NAME) {
    return fails$7(function() {
      return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() !== non || PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME;
    });
  };
  var $$5 = _export;
  var $trim = stringTrim.trim;
  var forcedStringTrimMethod = stringTrimForced;
  $$5({ target: "String", proto: true, forced: forcedStringTrimMethod("trim") }, {
    trim: function trim() {
      return $trim(this);
    }
  });
  var _SubDomainPainter_instances;
  var _SubDomainPainter_setPositions;
  var _SubDomainPainter_classname;
  var _SubDomainPainter_appendText;
  var _SubDomainPainter_getCoordinates;
  var _SubDomainPainter_getX;
  var _SubDomainPainter_getY;
  var DEFAULT_SELECTOR$1 = ".ch-subdomain";
  var HIGHLIGHT_CLASSNAME = "highlight";
  var SubDomainPainter = /* @__PURE__ */ (function() {
    function SubDomainPainter2(calendar2) {
      _classCallCheck(this, SubDomainPainter2);
      _SubDomainPainter_instances.add(this);
      this.calendar = calendar2;
      this.root = null;
    }
    _createClass(SubDomainPainter2, [{
      key: "paint",
      value: function paint(root3) {
        var _this = this;
        this.root = root3 || this.root;
        var containerClassname = "".concat(DEFAULT_SELECTOR$1, "-container");
        var subDomainSvgGroup = this.root.selectAll(containerClassname).data(function(d) {
          return [d];
        }, function(d) {
          return d;
        }).join(function(enter) {
          return enter.append("svg").call(function(selection2) {
            return __classPrivateFieldGet(_this, _SubDomainPainter_instances, "m", _SubDomainPainter_setPositions).call(_this, selection2);
          }).attr("class", containerClassname.slice(1));
        }, function(update) {
          return (
            // eslint-disable-next-line implicit-arrow-linebreak
            update.call(function(selection2) {
              return __classPrivateFieldGet(_this, _SubDomainPainter_instances, "m", _SubDomainPainter_setPositions).call(_this, selection2);
            })
          );
        });
        var _this$calendar$option = this.calendar.options.options.subDomain, radius3 = _this$calendar$option.radius, width = _this$calendar$option.width, height = _this$calendar$option.height, sort4 = _this$calendar$option.sort;
        var evt = this.calendar.eventEmitter;
        subDomainSvgGroup.selectAll("g").data(function(d) {
          var subDomainsCollection = _this.calendar.domainCollection.get(d);
          if (sort4 === "desc") {
            var max8 = Math.max.apply(Math, _toConsumableArray(subDomainsCollection.map(function(s2) {
              return s2.x;
            })));
            subDomainsCollection.forEach(function(s2, i) {
              subDomainsCollection[i].x = Math.abs(s2.x - max8);
            });
          }
          return subDomainsCollection;
        }).join(function(enter) {
          return enter.append("g").call(function(selection2) {
            return selection2.insert("rect").attr("class", function(d) {
              return (
                // eslint-disable-next-line implicit-arrow-linebreak
                __classPrivateFieldGet(_this, _SubDomainPainter_instances, "m", _SubDomainPainter_classname).call(_this, d.t, "".concat(DEFAULT_SELECTOR$1.slice(1), "-bg"))
              );
            }).attr("width", width).attr("height", height).attr("x", function(d) {
              return __classPrivateFieldGet(_this, _SubDomainPainter_instances, "m", _SubDomainPainter_getX).call(_this, d);
            }).attr("y", function(d) {
              return __classPrivateFieldGet(_this, _SubDomainPainter_instances, "m", _SubDomainPainter_getY).call(_this, d);
            }).on("click", function(ev, d) {
              return (
                // eslint-disable-next-line implicit-arrow-linebreak
                evt.emit("click", ev, d.t, d.v)
              );
            }).on("mouseover", function(ev, d) {
              return (
                // eslint-disable-next-line implicit-arrow-linebreak
                evt.emit("mouseover", ev, d.t, d.v)
              );
            }).on("mouseout", function(ev, d) {
              return (
                // eslint-disable-next-line implicit-arrow-linebreak
                evt.emit("mouseout", ev, d.t, d.v)
              );
            }).attr("rx", radius3 > 0 ? radius3 : null).attr("ry", radius3 > 0 ? radius3 : null);
          }).call(function(selection2) {
            return __classPrivateFieldGet(_this, _SubDomainPainter_instances, "m", _SubDomainPainter_appendText).call(_this, selection2);
          });
        }, function(update) {
          return update.selectAll("rect").attr("class", function(d) {
            return (
              // eslint-disable-next-line implicit-arrow-linebreak
              __classPrivateFieldGet(_this, _SubDomainPainter_instances, "m", _SubDomainPainter_classname).call(_this, d.t, "".concat(DEFAULT_SELECTOR$1.slice(1), "-bg"))
            );
          }).attr("width", width).attr("height", height).attr("x", function(d) {
            return __classPrivateFieldGet(_this, _SubDomainPainter_instances, "m", _SubDomainPainter_getX).call(_this, d);
          }).attr("y", function(d) {
            return __classPrivateFieldGet(_this, _SubDomainPainter_instances, "m", _SubDomainPainter_getY).call(_this, d);
          }).attr("rx", radius3).attr("ry", radius3);
        });
      }
    }]);
    return SubDomainPainter2;
  })();
  _SubDomainPainter_instances = /* @__PURE__ */ new WeakSet(), _SubDomainPainter_setPositions = function _SubDomainPainter_setPositions2(selection2) {
    var options = this.calendar.options.options;
    var _options$domain = options.domain, padding = _options$domain.padding, position3 = _options$domain.label.position;
    selection2.attr("x", function() {
      var pos = padding[Position.LEFT];
      if (position3 === "left") {
        pos += options.x.domainHorizontalLabelWidth;
      }
      return pos;
    }).attr("y", function() {
      var pos = padding[Position.TOP];
      if (position3 === "top") {
        pos += options.x.domainVerticalLabelHeight;
      }
      return pos;
    });
  }, _SubDomainPainter_classname = function _SubDomainPainter_classname2(timestamp) {
    var _this2 = this;
    var _this$calendar$option2 = this.calendar.options.options, highlight = _this$calendar$option2.date.highlight, type2 = _this$calendar$option2.subDomain.type;
    var classname = "";
    if (highlight.length > 0) {
      highlight.forEach(function(d) {
        var unitFn = _this2.calendar.templateCollection.get(type2).extractUnit;
        if (unitFn(+d) === unitFn(timestamp)) {
          classname = HIGHLIGHT_CLASSNAME;
        }
      });
    }
    for (var _len = arguments.length, otherClasses = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      otherClasses[_key - 1] = arguments[_key];
    }
    return [classname].concat(otherClasses).join(" ").trim();
  }, _SubDomainPainter_appendText = function _SubDomainPainter_appendText2(elem) {
    var _this3 = this;
    var _this$calendar$option3 = this.calendar.options.options.subDomain, width = _this$calendar$option3.width, height = _this$calendar$option3.height, label = _this$calendar$option3.label;
    if (!label) {
      return null;
    }
    return elem.append("text").attr("class", function(d) {
      return (
        // eslint-disable-next-line implicit-arrow-linebreak
        __classPrivateFieldGet(_this3, _SubDomainPainter_instances, "m", _SubDomainPainter_classname).call(_this3, d.t, "".concat(DEFAULT_SELECTOR$1.slice(1), "-text"))
      );
    }).attr("x", function(d) {
      return __classPrivateFieldGet(_this3, _SubDomainPainter_instances, "m", _SubDomainPainter_getX).call(_this3, d) + width / 2;
    }).attr("y", function(d) {
      return __classPrivateFieldGet(_this3, _SubDomainPainter_instances, "m", _SubDomainPainter_getY).call(_this3, d) + height / 2;
    }).attr("text-anchor", "middle").attr("dominant-baseline", "central").text(function(d, i, nodes) {
      return (
        // eslint-disable-next-line implicit-arrow-linebreak
        _this3.calendar.dateHelper.format(d.t, label, d.v, nodes[i])
      );
    });
  }, _SubDomainPainter_getCoordinates = function _SubDomainPainter_getCoordinates2(axis, d) {
    var subDomain = this.calendar.options.options.subDomain;
    return d[axis] * (subDomain[axis === "x" ? "width" : "height"] + subDomain.gutter);
  }, _SubDomainPainter_getX = function _SubDomainPainter_getX2(d) {
    return __classPrivateFieldGet(this, _SubDomainPainter_instances, "m", _SubDomainPainter_getCoordinates).call(this, "x", d);
  }, _SubDomainPainter_getY = function _SubDomainPainter_getY2(d) {
    return __classPrivateFieldGet(this, _SubDomainPainter_instances, "m", _SubDomainPainter_getCoordinates).call(this, "y", d);
  };
  var _DomainsContainerPainter_instances;
  var _DomainsContainerPainter_startAnimation;
  var _DomainsContainerPainter_endAnimation;
  var _DomainsContainerPainter_recomputeDimensions;
  var BASE_SELECTOR = ".ch-domain-container";
  var TRANSITION_CLASSNAME = "in-transition";
  var DomainsContainerPainter = /* @__PURE__ */ (function() {
    function DomainsContainerPainter2(calendar2) {
      _classCallCheck(this, DomainsContainerPainter2);
      _DomainsContainerPainter_instances.add(this);
      this.calendar = calendar2;
      this.domainPainter = new DomainPainter(calendar2);
      this.subDomainPainter = new SubDomainPainter(calendar2);
      this.domainLabelPainter = new DomainLabelPainter(calendar2);
      this.dimensions = {
        width: 0,
        height: 0
      };
      this.transitionsQueueCount = 0;
    }
    _createClass(DomainsContainerPainter2, [{
      key: "setup",
      value: function setup() {
        this.root = this.calendar.calendarPainter.root.attr("x", 0).attr("y", 0).append("svg").attr("class", BASE_SELECTOR.slice(1)).append("svg").attr("class", "".concat(BASE_SELECTOR.slice(1), "-animation-wrapper"));
      }
    }, {
      key: "paint",
      value: function paint(scrollDirection) {
        var _this = this;
        __classPrivateFieldGet(this, _DomainsContainerPainter_instances, "m", _DomainsContainerPainter_startAnimation).call(this);
        var result = this.domainPainter.paint(scrollDirection, this.root);
        this.subDomainPainter.paint(this.domainPainter.root);
        this.domainLabelPainter.paint(this.domainPainter.root);
        __classPrivateFieldGet(this, _DomainsContainerPainter_instances, "m", _DomainsContainerPainter_recomputeDimensions).call(this);
        Promise.allSettled(result).then(function() {
          __classPrivateFieldGet(_this, _DomainsContainerPainter_instances, "m", _DomainsContainerPainter_endAnimation).call(_this);
        });
        return result;
      }
    }, {
      key: "updatePosition",
      value: function updatePosition() {
        var _a;
        if (!((_a = this.root) === null || _a === void 0 ? void 0 : _a.node())) {
          return Promise.resolve();
        }
        var animationDuration = this.calendar.options.options.animationDuration;
        var topHeight = this.calendar.pluginManager.getHeightFromPosition("top");
        var leftWidth = this.calendar.pluginManager.getWidthFromPosition("left");
        return [select_default2(this.root.node().parentNode).transition().duration(animationDuration).call(function(selection2) {
          selection2.attr("x", leftWidth).attr("y", topHeight);
        }).end()];
      }
    }, {
      key: "width",
      value: function width() {
        return this.dimensions.width;
      }
    }, {
      key: "height",
      value: function height() {
        return this.dimensions.height;
      }
    }, {
      key: "destroy",
      value: function destroy() {
        __classPrivateFieldGet(this, _DomainsContainerPainter_instances, "m", _DomainsContainerPainter_startAnimation).call(this);
        return Promise.resolve();
      }
    }]);
    return DomainsContainerPainter2;
  })();
  _DomainsContainerPainter_instances = /* @__PURE__ */ new WeakSet(), _DomainsContainerPainter_startAnimation = function _DomainsContainerPainter_startAnimation2() {
    var _a;
    if ((_a = this.root) === null || _a === void 0 ? void 0 : _a.node()) {
      this.transitionsQueueCount += 1;
      select_default2(this.root.node().parentNode).classed(TRANSITION_CLASSNAME, true);
    }
  }, _DomainsContainerPainter_endAnimation = function _DomainsContainerPainter_endAnimation2() {
    var _a;
    if ((_a = this.root) === null || _a === void 0 ? void 0 : _a.node()) {
      this.transitionsQueueCount -= 1;
      if (this.transitionsQueueCount === 0) {
        select_default2(this.root.node().parentNode).classed(TRANSITION_CLASSNAME, false);
      }
    }
  }, _DomainsContainerPainter_recomputeDimensions = function _DomainsContainerPainter_recomputeDimensions2() {
    var _this$calendar$option = this.calendar.options.options, animationDuration = _this$calendar$option.animationDuration, verticalOrientation = _this$calendar$option.verticalOrientation, gutter = _this$calendar$option.domain.gutter;
    var domainsDimensions = this.domainPainter.dimensions;
    this.dimensions = {
      width: domainsDimensions.width - (verticalOrientation ? 0 : gutter),
      height: domainsDimensions.height - (!verticalOrientation ? 0 : gutter)
    };
    this.root.transition().duration(animationDuration).attr("width", this.dimensions.width).attr("height", this.dimensions.height);
  };
  var PluginPainter = /* @__PURE__ */ (function() {
    function PluginPainter2(calendar2) {
      _classCallCheck(this, PluginPainter2);
      this.calendar = calendar2;
    }
    _createClass(PluginPainter2, [{
      key: "paint",
      value: function paint() {
        var promises = [];
        promises = promises.concat(this.calendar.pluginManager.paintAll());
        promises = promises.concat(this.setPluginsPosition());
        return promises;
      }
    }, {
      key: "setPluginsPosition",
      value: function setPluginsPosition() {
        var pluginManager = this.calendar.pluginManager;
        var animationDuration = this.calendar.options.options.animationDuration;
        var domainsContainerPainter = this.calendar.calendarPainter.domainsContainerPainter;
        var top2 = pluginManager.getFromPosition("top");
        var right2 = pluginManager.getFromPosition("right");
        var bottom2 = pluginManager.getFromPosition("bottom");
        var left2 = pluginManager.getFromPosition("left");
        var topHeight = pluginManager.getHeightFromPosition("top");
        var leftWidth = pluginManager.getWidthFromPosition("left");
        var promises = [];
        var topOffset = 0;
        top2.forEach(function(plugin) {
          promises.push(plugin.root.transition().duration(animationDuration).attr("y", topOffset).attr("x", leftWidth).end());
          topOffset += plugin.options.dimensions.height;
        });
        var leftOffset = 0;
        left2.forEach(function(plugin) {
          promises.push(plugin.root.transition().duration(animationDuration).attr("x", leftOffset).attr("y", topHeight).end());
          leftOffset += plugin.options.dimensions.width;
        });
        bottom2.forEach(function(plugin) {
          promises.push(plugin.root.transition().duration(animationDuration).attr("x", leftWidth).attr("y", topHeight + domainsContainerPainter.height()).end());
        });
        leftOffset += domainsContainerPainter.width();
        right2.forEach(function(plugin) {
          promises.push(plugin.root.transition().duration(animationDuration).attr("x", leftOffset).attr("y", topHeight).end());
          leftOffset += plugin.options.dimensions.width;
        });
        return promises;
      }
    }, {
      key: "insideWidth",
      value: function insideWidth() {
        return this.calendar.pluginManager.getWidthFromPosition("left") + this.calendar.pluginManager.getWidthFromPosition("right");
      }
    }, {
      key: "insideHeight",
      value: function insideHeight() {
        return this.calendar.pluginManager.getHeightFromPosition("top") + this.calendar.pluginManager.getHeightFromPosition("bottom");
      }
    }]);
    return PluginPainter2;
  })();
  var _CalendarPainter_instances;
  var _CalendarPainter_getHeight;
  var _CalendarPainter_getWidth;
  var _CalendarPainter_resize;
  var DEFAULT_SELECTOR = ".ch-container";
  var CalendarPainter = /* @__PURE__ */ (function() {
    function CalendarPainter2(calendar2) {
      _classCallCheck(this, CalendarPainter2);
      _CalendarPainter_instances.add(this);
      this.calendar = calendar2;
      this.dimensions = {
        width: 0,
        height: 0
      };
      this.root = null;
      this.domainsContainerPainter = new DomainsContainerPainter(calendar2);
      this.pluginPainter = new PluginPainter(calendar2);
    }
    _createClass(CalendarPainter2, [{
      key: "setup",
      value: function setup() {
        var _this$calendar$option = this.calendar.options.options, itemSelector = _this$calendar$option.itemSelector, theme = _this$calendar$option.theme;
        if (!this.root) {
          this.root = select_default2(itemSelector).append("svg").attr("data-theme", theme).attr("class", DEFAULT_SELECTOR.slice(1));
          this.domainsContainerPainter.setup();
        }
        this.calendar.pluginManager.setupAll();
        return true;
      }
    }, {
      key: "paint",
      value: function paint() {
        var navigationDir = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ScrollDirection.SCROLL_NONE;
        var transitions = this.domainsContainerPainter.paint(navigationDir).concat(this.pluginPainter.paint()).concat(this.domainsContainerPainter.updatePosition());
        __classPrivateFieldGet(this, _CalendarPainter_instances, "m", _CalendarPainter_resize).call(this);
        return Promise.allSettled(transitions);
      }
    }, {
      key: "destroy",
      value: function destroy() {
        var result = this.calendar.pluginManager.destroyAll().concat(this.domainsContainerPainter.destroy());
        if (!this.root) {
          return Promise.allSettled(result);
        }
        result.push(this.root.transition().duration(this.calendar.options.options.animationDuration).attr("width", 0).attr("height", 0).remove().end());
        return Promise.allSettled(result);
      }
    }]);
    return CalendarPainter2;
  })();
  _CalendarPainter_instances = /* @__PURE__ */ new WeakSet(), _CalendarPainter_getHeight = function _CalendarPainter_getHeight2() {
    return this.domainsContainerPainter.height() + this.pluginPainter.insideHeight();
  }, _CalendarPainter_getWidth = function _CalendarPainter_getWidth2() {
    return this.domainsContainerPainter.width() + this.pluginPainter.insideWidth();
  }, _CalendarPainter_resize = function _CalendarPainter_resize2() {
    var options = this.calendar.options.options;
    var newWidth = __classPrivateFieldGet(this, _CalendarPainter_instances, "m", _CalendarPainter_getWidth).call(this);
    var newHeight = __classPrivateFieldGet(this, _CalendarPainter_instances, "m", _CalendarPainter_getHeight).call(this);
    this.root.transition().duration(options.animationDuration).attr("width", newWidth).attr("height", newHeight);
    if (newWidth !== this.dimensions.width || newHeight !== this.dimensions.height) {
      this.calendar.eventEmitter.emit("resize", newWidth, newHeight, this.dimensions.width, this.dimensions.height);
    }
    this.dimensions = {
      width: newWidth,
      height: newHeight
    };
  };
  var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
  var freeGlobal$1 = freeGlobal;
  var freeSelf = typeof self == "object" && self && self.Object === Object && self;
  var root2 = freeGlobal$1 || freeSelf || Function("return this")();
  var root$1 = root2;
  var Symbol$1 = root$1.Symbol;
  var Symbol$2 = Symbol$1;
  var objectProto$f = Object.prototype;
  var hasOwnProperty$c = objectProto$f.hasOwnProperty;
  var nativeObjectToString$1 = objectProto$f.toString;
  var symToStringTag$1 = Symbol$2 ? Symbol$2.toStringTag : void 0;
  function getRawTag(value) {
    var isOwn = hasOwnProperty$c.call(value, symToStringTag$1), tag = value[symToStringTag$1];
    try {
      value[symToStringTag$1] = void 0;
      var unmasked = true;
    } catch (e) {
    }
    var result = nativeObjectToString$1.call(value);
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag$1] = tag;
      } else {
        delete value[symToStringTag$1];
      }
    }
    return result;
  }
  var objectProto$e = Object.prototype;
  var nativeObjectToString = objectProto$e.toString;
  function objectToString$1(value) {
    return nativeObjectToString.call(value);
  }
  var nullTag = "[object Null]";
  var undefinedTag = "[object Undefined]";
  var symToStringTag = Symbol$2 ? Symbol$2.toStringTag : void 0;
  function baseGetTag(value) {
    if (value == null) {
      return value === void 0 ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString$1(value);
  }
  function isObject$2(value) {
    var type2 = typeof value;
    return value != null && (type2 == "object" || type2 == "function");
  }
  var asyncTag = "[object AsyncFunction]";
  var funcTag$1 = "[object Function]";
  var genTag = "[object GeneratorFunction]";
  var proxyTag = "[object Proxy]";
  function isFunction(value) {
    if (!isObject$2(value)) {
      return false;
    }
    var tag = baseGetTag(value);
    return tag == funcTag$1 || tag == genTag || tag == asyncTag || tag == proxyTag;
  }
  var $$4 = _export;
  var toObject$1 = toObject$a;
  var nativeKeys$2 = objectKeys$3;
  var fails$6 = fails$u;
  var FAILS_ON_PRIMITIVES = fails$6(function() {
    nativeKeys$2(1);
  });
  $$4({ target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES }, {
    keys: function keys2(it) {
      return nativeKeys$2(toObject$1(it));
    }
  });
  var isObject$1 = isObject$j;
  var classof$1 = classofRaw$2;
  var wellKnownSymbol$3 = wellKnownSymbol$m;
  var MATCH$1 = wellKnownSymbol$3("match");
  var isRegexp = function(it) {
    var isRegExp3;
    return isObject$1(it) && ((isRegExp3 = it[MATCH$1]) !== void 0 ? !!isRegExp3 : classof$1(it) === "RegExp");
  };
  var isRegExp = isRegexp;
  var $TypeError$1 = TypeError;
  var notARegexp = function(it) {
    if (isRegExp(it)) {
      throw new $TypeError$1("The method doesn't accept regular expressions");
    }
    return it;
  };
  var wellKnownSymbol$2 = wellKnownSymbol$m;
  var MATCH = wellKnownSymbol$2("match");
  var correctIsRegexpLogic = function(METHOD_NAME) {
    var regexp = /./;
    try {
      "/./"[METHOD_NAME](regexp);
    } catch (error1) {
      try {
        regexp[MATCH] = false;
        return "/./"[METHOD_NAME](regexp);
      } catch (error2) {
      }
    }
    return false;
  };
  var $$3 = _export;
  var uncurryThis$7 = functionUncurryThisClause;
  var getOwnPropertyDescriptor2 = objectGetOwnPropertyDescriptor.f;
  var toLength$1 = toLength$3;
  var toString$4 = toString$9;
  var notARegExp$1 = notARegexp;
  var requireObjectCoercible$2 = requireObjectCoercible$7;
  var correctIsRegExpLogic$1 = correctIsRegexpLogic;
  var nativeStartsWith = uncurryThis$7("".startsWith);
  var stringSlice$3 = uncurryThis$7("".slice);
  var min$1 = Math.min;
  var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic$1("startsWith");
  var MDN_POLYFILL_BUG = !CORRECT_IS_REGEXP_LOGIC && !!(function() {
    var descriptor = getOwnPropertyDescriptor2(String.prototype, "startsWith");
    return descriptor && !descriptor.writable;
  })();
  $$3({ target: "String", proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
    startsWith: function startsWith(searchString) {
      var that = toString$4(requireObjectCoercible$2(this));
      notARegExp$1(searchString);
      var index = toLength$1(min$1(arguments.length > 1 ? arguments[1] : void 0, that.length));
      var search = toString$4(searchString);
      return nativeStartsWith ? nativeStartsWith(that, search, index) : stringSlice$3(that, index, index + search.length) === search;
    }
  });
  var DESCRIPTORS$1 = descriptors;
  var fails$5 = fails$u;
  var uncurryThis$6 = functionUncurryThis;
  var objectGetPrototypeOf = objectGetPrototypeOf$1;
  var objectKeys = objectKeys$3;
  var toIndexedObject = toIndexedObject$9;
  var $propertyIsEnumerable = objectPropertyIsEnumerable.f;
  var propertyIsEnumerable$2 = uncurryThis$6($propertyIsEnumerable);
  var push$1 = uncurryThis$6([].push);
  var IE_BUG = DESCRIPTORS$1 && fails$5(function() {
    var O = /* @__PURE__ */ Object.create(null);
    O[2] = 2;
    return !propertyIsEnumerable$2(O, 2);
  });
  var createMethod = function(TO_ENTRIES) {
    return function(it) {
      var O = toIndexedObject(it);
      var keys12 = objectKeys(O);
      var IE_WORKAROUND = IE_BUG && objectGetPrototypeOf(O) === null;
      var length3 = keys12.length;
      var i = 0;
      var result = [];
      var key;
      while (length3 > i) {
        key = keys12[i++];
        if (!DESCRIPTORS$1 || (IE_WORKAROUND ? key in O : propertyIsEnumerable$2(O, key))) {
          push$1(result, TO_ENTRIES ? [key, O[key]] : O[key]);
        }
      }
      return result;
    };
  };
  var objectToArray = {
    // `Object.entries` method
    // https://tc39.es/ecma262/#sec-object.entries
    entries: createMethod(true),
    // `Object.values` method
    // https://tc39.es/ecma262/#sec-object.values
    values: createMethod(false)
  };
  var $$2 = _export;
  var $entries = objectToArray.entries;
  $$2({ target: "Object", stat: true }, {
    entries: function entries(O) {
      return $entries(O);
    }
  });
  function defined(x) {
    return x != null && !Number.isNaN(x);
  }
  function ascendingDefined2(a2, b) {
    return +defined(b) - +defined(a2) || ascending2(a2, b);
  }
  function finite(x) {
    return isFinite(x) ? x : NaN;
  }
  function positive(x) {
    return x > 0 && isFinite(x) ? x : NaN;
  }
  function negative(x) {
    return x < 0 && isFinite(x) ? x : NaN;
  }
  var re2 = /^(?:[-+]\d{2})?\d{4}(?:-\d{2}(?:-\d{2})?)?(?:T\d{2}:\d{2}(?::\d{2}(?:\.\d{3})?)?(?:Z|[-+]\d{2}:?\d{2})?)?$/;
  function parse(string, fallback) {
    if (!re2.test(string += "")) return typeof fallback === "function" ? fallback(string) : fallback;
    return new Date(string);
  }
  var timeIntervals = /* @__PURE__ */ new Map([
    ["second", second],
    ["minute", timeMinute],
    ["hour", timeHour],
    ["day", timeDay],
    ["week", timeSunday],
    ["month", timeMonth],
    ["quarter", timeMonth.every(3)],
    ["half", timeMonth.every(6)],
    ["year", timeYear],
    ["monday", timeMonday],
    ["tuesday", timeTuesday],
    ["wednesday", timeWednesday],
    ["thursday", timeThursday],
    ["friday", timeFriday],
    ["saturday", timeSaturday],
    ["sunday", timeSunday]
  ]);
  var utcIntervals = /* @__PURE__ */ new Map([
    ["second", second],
    ["minute", utcMinute],
    ["hour", utcHour],
    ["day", utcDay],
    ["week", utcSunday],
    ["month", utcMonth],
    ["quarter", utcMonth.every(3)],
    ["half", utcMonth.every(6)],
    ["year", utcYear],
    ["monday", utcMonday],
    ["tuesday", utcTuesday],
    ["wednesday", utcWednesday],
    ["thursday", utcThursday],
    ["friday", utcFriday],
    ["saturday", utcSaturday],
    ["sunday", utcSunday]
  ]);
  function maybeTimeInterval(interval2) {
    const i = timeIntervals.get(`${interval2}`.toLowerCase());
    if (!i) throw new Error(`unknown interval: ${interval2}`);
    return i;
  }
  function maybeUtcInterval(interval2) {
    const i = utcIntervals.get(`${interval2}`.toLowerCase());
    if (!i) throw new Error(`unknown interval: ${interval2}`);
    return i;
  }
  var TypedArray = Object.getPrototypeOf(Uint8Array);
  var objectToString = Object.prototype.toString;
  var constant$1 = (x) => () => x;
  function coerceNumbers(values5) {
    return values5 instanceof TypedArray ? values5 : map3(values5, coerceNumber, Float64Array);
  }
  function coerceNumber(x) {
    return x == null ? NaN : Number(x);
  }
  function coerceDates(values5) {
    return map3(values5, coerceDate);
  }
  function coerceDate(x) {
    return x instanceof Date && !isNaN(x) ? x : typeof x === "string" ? parse(x) : x == null || isNaN(x = +x) ? void 0 : new Date(x);
  }
  function arrayify(data6) {
    return data6 == null || data6 instanceof Array || data6 instanceof TypedArray ? data6 : Array.from(data6);
  }
  function map3(values5, f, type2 = Array) {
    return values5 == null ? values5 : values5 instanceof type2 ? values5.map(f) : type2.from(values5, f);
  }
  function slice2(values5, type2 = Array) {
    return values5 instanceof type2 ? values5.slice() : type2.from(values5);
  }
  function isObject(option) {
    return option?.toString === objectToString;
  }
  function isScaleOptions(option) {
    return isObject(option) && (option.type !== void 0 || option.domain !== void 0);
  }
  function maybeInterval(interval2, type2) {
    if (interval2 == null) return;
    if (typeof interval2 === "number") {
      if (0 < interval2 && interval2 < 1 && Number.isInteger(1 / interval2)) interval2 = -1 / interval2;
      const n = Math.abs(interval2);
      return interval2 < 0 ? {
        floor: (d) => Math.floor(d * n) / n,
        offset: (d) => (d * n + 1) / n,
        // note: no optional step for simplicity
        range: (lo, hi) => range(Math.ceil(lo * n), hi * n).map((x) => x / n)
      } : {
        floor: (d) => Math.floor(d / n) * n,
        offset: (d) => d + n,
        // note: no optional step for simplicity
        range: (lo, hi) => range(Math.ceil(lo / n), hi / n).map((x) => x * n)
      };
    }
    if (typeof interval2 === "string") return (type2 === "time" ? maybeTimeInterval : maybeUtcInterval)(interval2);
    if (typeof interval2.floor !== "function") throw new Error("invalid interval; missing floor method");
    if (typeof interval2.offset !== "function") throw new Error("invalid interval; missing offset method");
    return interval2;
  }
  function maybeRangeInterval(interval2, type2) {
    interval2 = maybeInterval(interval2, type2);
    if (interval2 && typeof interval2.range !== "function") throw new Error("invalid interval: missing range method");
    return interval2;
  }
  function maybeNiceInterval(interval2, type2) {
    interval2 = maybeRangeInterval(interval2, type2);
    if (interval2 && typeof interval2.ceil !== "function") throw new Error("invalid interval: missing ceil method");
    return interval2;
  }
  function isOrdinal(values5) {
    for (const value of values5) {
      if (value == null) continue;
      const type2 = typeof value;
      return type2 === "string" || type2 === "boolean";
    }
  }
  function isTemporal(values5) {
    for (const value of values5) {
      if (value == null) continue;
      return value instanceof Date;
    }
  }
  function isTemporalString(values5) {
    for (const value of values5) {
      if (value == null) continue;
      return typeof value === "string" && isNaN(value) && parse(value);
    }
  }
  function isNumericString(values5) {
    for (const value of values5) {
      if (value == null) continue;
      if (typeof value !== "string") return false;
      if (!value.trim()) continue;
      return !isNaN(value);
    }
  }
  function isNoneish(value) {
    return value == null || isNone(value);
  }
  function isNone(value) {
    return /^\s*none\s*$/i.test(value);
  }
  function orderof(values5) {
    if (values5 == null) return;
    const first = values5[0];
    const last = values5[values5.length - 1];
    return descending(first, last);
  }
  var position = Symbol("position");
  var color2 = Symbol("color");
  var radius = Symbol("radius");
  var length = Symbol("length");
  var opacity = Symbol("opacity");
  var symbol = Symbol("symbol");
  var registry = /* @__PURE__ */ new Map([
    ["x", position],
    ["y", position],
    ["fx", position],
    ["fy", position],
    ["r", radius],
    ["color", color2],
    ["opacity", opacity],
    ["symbol", symbol],
    ["length", length]
  ]);
  var sqrt34 = Math.sqrt(3);
  var sqrt4_3 = 2 / sqrt34;
  var symbolHexagon = {
    draw(context, size) {
      const rx = Math.sqrt(size / Math.PI), ry = rx * sqrt4_3, hy = ry / 2;
      context.moveTo(0, ry);
      context.lineTo(rx, hy);
      context.lineTo(rx, -hy);
      context.lineTo(0, -ry);
      context.lineTo(-rx, -hy);
      context.lineTo(-rx, hy);
      context.closePath();
    }
  };
  var symbols = /* @__PURE__ */ new Map([
    ["asterisk", asterisk_default],
    ["circle", circle_default],
    ["cross", cross_default],
    ["diamond", diamond_default],
    ["diamond2", diamond2_default],
    ["hexagon", symbolHexagon],
    ["plus", plus_default],
    ["square", square_default],
    ["square2", square2_default],
    ["star", star_default],
    ["times", times_default],
    ["triangle", triangle_default],
    ["triangle2", triangle2_default],
    ["wye", wye_default]
  ]);
  function isSymbolObject(value) {
    return value && typeof value.draw === "function";
  }
  function maybeSymbol(symbol3) {
    if (symbol3 == null || isSymbolObject(symbol3)) return symbol3;
    const value = symbols.get(`${symbol3}`.toLowerCase());
    if (value) return value;
    throw new Error(`invalid symbol: ${symbol3}`);
  }
  function warn(message) {
    console.warn(message);
  }
  var ordinalSchemes = /* @__PURE__ */ new Map([
    // categorical
    ["accent", Accent_default],
    ["category10", category10_default],
    ["dark2", Dark2_default],
    ["paired", Paired_default],
    ["pastel1", Pastel1_default],
    ["pastel2", Pastel2_default],
    ["set1", Set1_default],
    ["set2", Set2_default],
    ["set3", Set3_default],
    ["tableau10", Tableau10_default],
    // diverging
    ["brbg", scheme112(scheme, BrBG_default)],
    ["prgn", scheme112(scheme2, PRGn_default)],
    ["piyg", scheme112(scheme3, PiYG_default)],
    ["puor", scheme112(scheme4, PuOr_default)],
    ["rdbu", scheme112(scheme5, RdBu_default)],
    ["rdgy", scheme112(scheme6, RdGy_default)],
    ["rdylbu", scheme112(scheme7, RdYlBu_default)],
    ["rdylgn", scheme112(scheme8, RdYlGn_default)],
    ["spectral", scheme112(scheme9, Spectral_default)],
    // reversed diverging (for temperature data)
    ["burd", scheme11r(scheme5, RdBu_default)],
    ["buylrd", scheme11r(scheme7, RdYlBu_default)],
    // sequential (single-hue)
    ["blues", scheme92(scheme22, Blues_default)],
    ["greens", scheme92(scheme23, Greens_default)],
    ["greys", scheme92(scheme24, Greys_default)],
    ["oranges", scheme92(scheme27, Oranges_default)],
    ["purples", scheme92(scheme25, Purples_default)],
    ["reds", scheme92(scheme26, Reds_default)],
    // sequential (multi-hue)
    ["turbo", schemei(turbo_default)],
    ["viridis", schemei(viridis_default)],
    ["magma", schemei(magma)],
    ["inferno", schemei(inferno)],
    ["plasma", schemei(plasma)],
    ["cividis", schemei(cividis_default)],
    ["cubehelix", schemei(cubehelix_default2)],
    ["warm", schemei(warm)],
    ["cool", schemei(cool)],
    ["bugn", scheme92(scheme10, BuGn_default)],
    ["bupu", scheme92(scheme11, BuPu_default)],
    ["gnbu", scheme92(scheme12, GnBu_default)],
    ["orrd", scheme92(scheme13, OrRd_default)],
    ["pubu", scheme92(scheme15, PuBu_default)],
    ["pubugn", scheme92(scheme14, PuBuGn_default)],
    ["purd", scheme92(scheme16, PuRd_default)],
    ["rdpu", scheme92(scheme17, RdPu_default)],
    ["ylgn", scheme92(scheme19, YlGn_default)],
    ["ylgnbu", scheme92(scheme18, YlGnBu_default)],
    ["ylorbr", scheme92(scheme20, YlOrBr_default)],
    ["ylorrd", scheme92(scheme21, YlOrRd_default)],
    // cyclical
    ["rainbow", schemeicyclical(rainbow_default)],
    ["sinebow", schemeicyclical(sinebow_default)]
  ]);
  function scheme92(scheme28, interpolate) {
    return ({ length: n }) => {
      if (n === 1) return [scheme28[3][1]];
      if (n === 2) return [scheme28[3][1], scheme28[3][2]];
      n = Math.max(3, Math.floor(n));
      return n > 9 ? quantize_default(interpolate, n) : scheme28[n];
    };
  }
  function scheme112(scheme28, interpolate) {
    return ({ length: n }) => {
      if (n === 2) return [scheme28[3][0], scheme28[3][2]];
      n = Math.max(3, Math.floor(n));
      return n > 11 ? quantize_default(interpolate, n) : scheme28[n];
    };
  }
  function scheme11r(scheme28, interpolate) {
    return ({ length: n }) => {
      if (n === 2) return [scheme28[3][2], scheme28[3][0]];
      n = Math.max(3, Math.floor(n));
      return n > 11 ? quantize_default((t) => interpolate(1 - t), n) : scheme28[n].slice().reverse();
    };
  }
  function schemei(interpolate) {
    return ({ length: n }) => quantize_default(interpolate, Math.max(2, Math.floor(n)));
  }
  function schemeicyclical(interpolate) {
    return ({ length: n }) => quantize_default(interpolate, Math.floor(n) + 1).slice(0, -1);
  }
  function ordinalScheme(scheme28) {
    const s2 = `${scheme28}`.toLowerCase();
    if (!ordinalSchemes.has(s2)) throw new Error(`unknown ordinal scheme: ${s2}`);
    return ordinalSchemes.get(s2);
  }
  function ordinalRange(scheme28, length3) {
    const s2 = ordinalScheme(scheme28);
    const r = typeof s2 === "function" ? s2({ length: length3 }) : s2;
    return r.length !== length3 ? r.slice(0, length3) : r;
  }
  function maybeBooleanRange(domain, scheme28 = "greys") {
    const range3 = /* @__PURE__ */ new Set();
    const [f, t] = ordinalRange(scheme28, 2);
    for (const value of domain) {
      if (value == null) continue;
      if (value === true) range3.add(t);
      else if (value === false) range3.add(f);
      else return;
    }
    return [...range3];
  }
  var quantitativeSchemes = /* @__PURE__ */ new Map([
    // diverging
    ["brbg", BrBG_default],
    ["prgn", PRGn_default],
    ["piyg", PiYG_default],
    ["puor", PuOr_default],
    ["rdbu", RdBu_default],
    ["rdgy", RdGy_default],
    ["rdylbu", RdYlBu_default],
    ["rdylgn", RdYlGn_default],
    ["spectral", Spectral_default],
    // reversed diverging (for temperature data)
    ["burd", (t) => RdBu_default(1 - t)],
    ["buylrd", (t) => RdYlBu_default(1 - t)],
    // sequential (single-hue)
    ["blues", Blues_default],
    ["greens", Greens_default],
    ["greys", Greys_default],
    ["purples", Purples_default],
    ["reds", Reds_default],
    ["oranges", Oranges_default],
    // sequential (multi-hue)
    ["turbo", turbo_default],
    ["viridis", viridis_default],
    ["magma", magma],
    ["inferno", inferno],
    ["plasma", plasma],
    ["cividis", cividis_default],
    ["cubehelix", cubehelix_default2],
    ["warm", warm],
    ["cool", cool],
    ["bugn", BuGn_default],
    ["bupu", BuPu_default],
    ["gnbu", GnBu_default],
    ["orrd", OrRd_default],
    ["pubugn", PuBuGn_default],
    ["pubu", PuBu_default],
    ["purd", PuRd_default],
    ["rdpu", RdPu_default],
    ["ylgnbu", YlGnBu_default],
    ["ylgn", YlGn_default],
    ["ylorbr", YlOrBr_default],
    ["ylorrd", YlOrRd_default],
    // cyclical
    ["rainbow", rainbow_default],
    ["sinebow", sinebow_default]
  ]);
  function quantitativeScheme(scheme28) {
    const s2 = `${scheme28}`.toLowerCase();
    if (!quantitativeSchemes.has(s2)) throw new Error(`unknown quantitative scheme: ${s2}`);
    return quantitativeSchemes.get(s2);
  }
  var divergingSchemes = /* @__PURE__ */ new Set([
    "brbg",
    "prgn",
    "piyg",
    "puor",
    "rdbu",
    "rdgy",
    "rdylbu",
    "rdylgn",
    "spectral",
    "burd",
    "buylrd"
  ]);
  function isDivergingScheme(scheme28) {
    return scheme28 != null && divergingSchemes.has(`${scheme28}`.toLowerCase());
  }
  var flip = (i) => (t) => i(1 - t);
  var unit2 = [0, 1];
  var interpolators = /* @__PURE__ */ new Map([
    // numbers
    ["number", number_default],
    // color spaces
    ["rgb", rgb_default],
    ["hsl", hsl_default],
    ["hcl", hcl_default],
    ["lab", lab2]
  ]);
  function maybeInterpolator(interpolate) {
    const i = `${interpolate}`.toLowerCase();
    if (!interpolators.has(i)) throw new Error(`unknown interpolator: ${i}`);
    return interpolators.get(i);
  }
  function createScaleQ(key, scale3, channels, {
    type: type2,
    nice: nice2,
    clamp,
    zero: zero3,
    domain = inferAutoDomain(key, channels),
    unknown,
    round: round2,
    scheme: scheme28,
    interval: interval2,
    range: range3 = registry.get(key) === radius ? inferRadialRange(channels, domain) : registry.get(key) === length ? inferLengthRange(channels, domain) : registry.get(key) === opacity ? unit2 : void 0,
    interpolate = registry.get(key) === color2 ? scheme28 == null && range3 !== void 0 ? rgb_default : quantitativeScheme(scheme28 !== void 0 ? scheme28 : type2 === "cyclical" ? "rainbow" : "turbo") : round2 ? round_default : number_default,
    reverse: reverse$1
  }) {
    interval2 = maybeRangeInterval(interval2, type2);
    if (type2 === "cyclical" || type2 === "sequential") type2 = "linear";
    reverse$1 = !!reverse$1;
    if (typeof interpolate !== "function") {
      interpolate = maybeInterpolator(interpolate);
    }
    if (interpolate.length === 1) {
      if (reverse$1) {
        interpolate = flip(interpolate);
        reverse$1 = false;
      }
      if (range3 === void 0) {
        range3 = Float64Array.from(domain, (_, i) => i / (domain.length - 1));
        if (range3.length === 2) range3 = unit2;
      }
      scale3.interpolate((range3 === unit2 ? constant$1 : interpolatePiecewise)(interpolate));
    } else {
      scale3.interpolate(interpolate);
    }
    if (zero3) {
      const [min9, max8] = extent(domain);
      if (min9 > 0 || max8 < 0) {
        domain = slice2(domain);
        if (orderof(domain) !== Math.sign(min9)) domain[domain.length - 1] = 0;
        else domain[0] = 0;
      }
    }
    if (reverse$1) domain = reverse(domain);
    scale3.domain(domain).unknown(unknown);
    if (nice2) scale3.nice(maybeNice(nice2, type2)), domain = scale3.domain();
    if (range3 !== void 0) scale3.range(range3);
    if (clamp) scale3.clamp(clamp);
    return { type: type2, domain, range: range3, scale: scale3, interpolate, interval: interval2 };
  }
  function maybeNice(nice2, type2) {
    return nice2 === true ? void 0 : typeof nice2 === "number" ? nice2 : maybeNiceInterval(nice2, type2);
  }
  function createScaleLinear(key, channels, options) {
    return createScaleQ(key, linear2(), channels, options);
  }
  function createScaleSqrt(key, channels, options) {
    return createScalePow(key, channels, { ...options, exponent: 0.5 });
  }
  function createScalePow(key, channels, { exponent = 1, ...options }) {
    return createScaleQ(key, pow().exponent(exponent), channels, { ...options, type: "pow" });
  }
  function createScaleLog(key, channels, { base = 10, domain = inferLogDomain(channels), ...options }) {
    return createScaleQ(key, log().base(base), channels, { ...options, domain });
  }
  function createScaleSymlog(key, channels, { constant: constant3 = 1, ...options }) {
    return createScaleQ(key, symlog().constant(constant3), channels, options);
  }
  function createScaleQuantile(key, channels, {
    range: range3,
    quantiles = range3 === void 0 ? 5 : (range3 = [...range3]).length,
    // deprecated; use n instead
    n = quantiles,
    scheme: scheme28 = "rdylbu",
    domain = inferQuantileDomain(channels),
    unknown,
    interpolate,
    reverse: reverse2
  }) {
    if (range3 === void 0) {
      range3 = interpolate !== void 0 ? quantize_default(interpolate, n) : registry.get(key) === color2 ? ordinalRange(scheme28, n) : void 0;
    }
    if (domain.length > 0) {
      domain = quantile2(domain, range3 === void 0 ? { length: n } : range3).quantiles();
    }
    return createScaleThreshold(key, channels, { domain, range: range3, reverse: reverse2, unknown });
  }
  function createScaleQuantize(key, channels, {
    range: range3,
    n = range3 === void 0 ? 5 : (range3 = [...range3]).length,
    scheme: scheme28 = "rdylbu",
    domain = inferAutoDomain(key, channels),
    unknown,
    interpolate,
    reverse: reverse2
  }) {
    const [min9, max8] = extent(domain);
    let thresholds;
    if (range3 === void 0) {
      thresholds = ticks(min9, max8, n);
      if (thresholds[0] <= min9) thresholds.splice(0, 1);
      if (thresholds[thresholds.length - 1] >= max8) thresholds.pop();
      n = thresholds.length + 1;
      range3 = interpolate !== void 0 ? quantize_default(interpolate, n) : registry.get(key) === color2 ? ordinalRange(scheme28, n) : void 0;
    } else {
      thresholds = quantize_default(number_default(min9, max8), n + 1).slice(1, -1);
      if (min9 instanceof Date) thresholds = thresholds.map((x) => new Date(x));
    }
    if (orderof(arrayify(domain)) < 0) thresholds.reverse();
    return createScaleThreshold(key, channels, { domain: thresholds, range: range3, reverse: reverse2, unknown });
  }
  function createScaleThreshold(key, channels, {
    domain = [0],
    // explicit thresholds in ascending order
    unknown,
    scheme: scheme28 = "rdylbu",
    interpolate,
    range: range3 = interpolate !== void 0 ? quantize_default(interpolate, domain.length + 1) : registry.get(key) === color2 ? ordinalRange(scheme28, domain.length + 1) : void 0,
    reverse: reverse$1
  }) {
    domain = arrayify(domain);
    const sign = orderof(domain);
    if (!isNaN(sign) && !isOrdered(domain, sign)) throw new Error(`the ${key} scale has a non-monotonic domain`);
    if (reverse$1) range3 = reverse(range3);
    return {
      type: "threshold",
      scale: threshold(sign < 0 ? reverse(domain) : domain, range3 === void 0 ? [] : range3).unknown(unknown),
      domain,
      range: range3
    };
  }
  function isOrdered(domain, sign) {
    for (let i = 1, n = domain.length, d = domain[0]; i < n; ++i) {
      const s2 = descending(d, d = domain[i]);
      if (s2 !== 0 && s2 !== sign) return false;
    }
    return true;
  }
  function createScaleIdentity() {
    return { type: "identity", scale: identity3() };
  }
  function inferDomain$1(channels, f = finite) {
    return channels.length ? [
      min(channels, ({ value }) => value === void 0 ? value : min(value, f)),
      max(channels, ({ value }) => value === void 0 ? value : max(value, f))
    ] : [0, 1];
  }
  function inferAutoDomain(key, channels) {
    const type2 = registry.get(key);
    return (type2 === radius || type2 === opacity || type2 === length ? inferZeroDomain : inferDomain$1)(channels);
  }
  function inferZeroDomain(channels) {
    return [0, channels.length ? max(channels, ({ value }) => value === void 0 ? value : max(value, finite)) : 1];
  }
  function inferRadialRange(channels, domain) {
    const hint = channels.find(({ radius: radius3 }) => radius3 !== void 0);
    if (hint !== void 0) return [0, hint.radius];
    const h25 = quantile(channels, 0.5, ({ value }) => value === void 0 ? NaN : quantile(value, 0.25, positive));
    const range3 = domain.map((d) => 3 * Math.sqrt(d / h25));
    const k2 = 30 / max(range3);
    return k2 < 1 ? range3.map((r) => r * k2) : range3;
  }
  function inferLengthRange(channels, domain) {
    const h50 = median(channels, ({ value }) => value === void 0 ? NaN : median(value, Math.abs));
    const range3 = domain.map((d) => 12 * d / h50);
    const k2 = 60 / max(range3);
    return k2 < 1 ? range3.map((r) => r * k2) : range3;
  }
  function inferLogDomain(channels) {
    for (const { value } of channels) {
      if (value !== void 0) {
        for (let v of value) {
          if (v > 0) return inferDomain$1(channels, positive);
          if (v < 0) return inferDomain$1(channels, negative);
        }
      }
    }
    return [1, 10];
  }
  function inferQuantileDomain(channels) {
    const domain = [];
    for (const { value } of channels) {
      if (value === void 0) continue;
      for (const v of value) domain.push(v);
    }
    return domain;
  }
  function interpolatePiecewise(interpolate) {
    return (i, j) => (t) => interpolate(i + t * (j - i));
  }
  function createScaleD(key, scale3, transform2, channels, {
    type: type2,
    nice: nice2,
    clamp,
    domain = inferDomain$1(channels),
    unknown,
    pivot = 0,
    scheme: scheme28,
    range: range3,
    symmetric = true,
    interpolate = registry.get(key) === color2 ? scheme28 == null && range3 !== void 0 ? rgb_default : quantitativeScheme(scheme28 !== void 0 ? scheme28 : "rdbu") : number_default,
    reverse: reverse2
  }) {
    pivot = +pivot;
    let [min9, max8] = domain;
    if (descending(min9, max8) < 0) [min9, max8] = [max8, min9], reverse2 = !reverse2;
    min9 = Math.min(min9, pivot);
    max8 = Math.max(max8, pivot);
    if (typeof interpolate !== "function") {
      interpolate = maybeInterpolator(interpolate);
    }
    if (range3 !== void 0) {
      interpolate = interpolate.length === 1 ? interpolatePiecewise(interpolate)(...range3) : piecewise(interpolate, range3);
    }
    if (reverse2) interpolate = flip(interpolate);
    if (symmetric) {
      const mid = transform2.apply(pivot);
      const mindelta = mid - transform2.apply(min9);
      const maxdelta = transform2.apply(max8) - mid;
      if (mindelta < maxdelta) min9 = transform2.invert(mid - maxdelta);
      else if (mindelta > maxdelta) max8 = transform2.invert(mid + mindelta);
    }
    scale3.domain([min9, pivot, max8]).unknown(unknown).interpolator(interpolate);
    if (clamp) scale3.clamp(clamp);
    if (nice2) scale3.nice(nice2);
    return { type: type2, domain: [min9, max8], pivot, interpolate, scale: scale3 };
  }
  function createScaleDiverging(key, channels, options) {
    return createScaleD(key, diverging(), transformIdentity, channels, options);
  }
  function createScaleDivergingSqrt(key, channels, options) {
    return createScaleDivergingPow(key, channels, { ...options, exponent: 0.5 });
  }
  function createScaleDivergingPow(key, channels, { exponent = 1, ...options }) {
    return createScaleD(key, divergingPow().exponent(exponent = +exponent), transformPow2(exponent), channels, {
      ...options,
      type: "diverging-pow"
    });
  }
  function createScaleDivergingLog(key, channels, { base = 10, pivot = 1, domain = inferDomain$1(channels, pivot < 0 ? negative : positive), ...options }) {
    return createScaleD(key, divergingLog().base(base = +base), transformLog2, channels, {
      domain,
      pivot,
      ...options
    });
  }
  function createScaleDivergingSymlog(key, channels, { constant: constant3 = 1, ...options }) {
    return createScaleD(
      key,
      divergingSymlog().constant(constant3 = +constant3),
      transformSymlog2(constant3),
      channels,
      options
    );
  }
  var transformIdentity = {
    apply(x) {
      return x;
    },
    invert(x) {
      return x;
    }
  };
  var transformLog2 = {
    apply: Math.log,
    invert: Math.exp
  };
  var transformSqrt2 = {
    apply(x) {
      return Math.sign(x) * Math.sqrt(Math.abs(x));
    },
    invert(x) {
      return Math.sign(x) * (x * x);
    }
  };
  function transformPow2(exponent) {
    return exponent === 0.5 ? transformSqrt2 : {
      apply(x) {
        return Math.sign(x) * Math.pow(Math.abs(x), exponent);
      },
      invert(x) {
        return Math.sign(x) * Math.pow(Math.abs(x), 1 / exponent);
      }
    };
  }
  function transformSymlog2(constant3) {
    return {
      apply(x) {
        return Math.sign(x) * Math.log1p(Math.abs(x / constant3));
      },
      invert(x) {
        return Math.sign(x) * Math.expm1(Math.abs(x)) * constant3;
      }
    };
  }
  function createScaleT(key, scale3, channels, options) {
    return createScaleQ(key, scale3, channels, options);
  }
  function createScaleTime(key, channels, options) {
    return createScaleT(key, time(), channels, options);
  }
  function createScaleUtc(key, channels, options) {
    return createScaleT(key, utcTime(), channels, options);
  }
  var ordinalImplicit = Symbol("ordinal");
  function createScaleO(key, scale3, channels, { type: type2, interval: interval2, domain, range: range3, reverse: reverse$1, hint }) {
    interval2 = maybeRangeInterval(interval2, type2);
    if (domain === void 0) domain = inferDomain(channels, interval2, key);
    if (type2 === "categorical" || type2 === ordinalImplicit) type2 = "ordinal";
    if (reverse$1) domain = reverse(domain);
    scale3.domain(domain);
    if (range3 !== void 0) {
      if (typeof range3 === "function") range3 = range3(domain);
      scale3.range(range3);
    }
    return { type: type2, domain, range: range3, scale: scale3, hint, interval: interval2 };
  }
  function createScaleOrdinal(key, channels, { type: type2, interval: interval2, domain, range: range3, scheme: scheme28, unknown, ...options }) {
    interval2 = maybeRangeInterval(interval2, type2);
    if (domain === void 0) domain = inferDomain(channels, interval2, key);
    let hint;
    if (registry.get(key) === symbol) {
      hint = inferSymbolHint(channels);
      range3 = range3 === void 0 ? inferSymbolRange(hint) : map3(range3, maybeSymbol);
    } else if (registry.get(key) === color2) {
      if (range3 === void 0 && (type2 === "ordinal" || type2 === ordinalImplicit)) {
        range3 = maybeBooleanRange(domain, scheme28);
        if (range3 !== void 0) scheme28 = void 0;
      }
      if (scheme28 === void 0 && range3 === void 0) {
        scheme28 = type2 === "ordinal" ? "turbo" : "tableau10";
      }
      if (scheme28 !== void 0) {
        if (range3 !== void 0) {
          const interpolate = quantitativeScheme(scheme28);
          const t03 = range3[0], d = range3[1] - range3[0];
          range3 = ({ length: n }) => quantize_default((t) => interpolate(t03 + d * t), n);
        } else {
          range3 = ordinalScheme(scheme28);
        }
      }
    }
    if (unknown === implicit) {
      throw new Error(`implicit unknown on ${key} scale is not supported`);
    }
    return createScaleO(key, ordinal().unknown(unknown), channels, { ...options, type: type2, domain, range: range3, hint });
  }
  function createScalePoint(key, channels, { align = 0.5, padding = 0.5, ...options }) {
    return maybeRound(point().align(align).padding(padding), channels, options, key);
  }
  function createScaleBand(key, channels, {
    align = 0.5,
    padding = 0.1,
    paddingInner = padding,
    paddingOuter = key === "fx" || key === "fy" ? 0 : padding,
    ...options
  }) {
    return maybeRound(
      band().align(align).paddingInner(paddingInner).paddingOuter(paddingOuter),
      channels,
      options,
      key
    );
  }
  function maybeRound(scale3, channels, options, key) {
    let { round: round2 } = options;
    if (round2 !== void 0) scale3.round(round2 = !!round2);
    scale3 = createScaleO(key, scale3, channels, options);
    scale3.round = round2;
    return scale3;
  }
  function inferDomain(channels, interval2, key) {
    const values5 = new InternSet();
    for (const { value, domain } of channels) {
      if (domain !== void 0) return domain();
      if (value === void 0) continue;
      for (const v of value) values5.add(v);
    }
    if (interval2 !== void 0) {
      const [min9, max8] = extent(values5).map(interval2.floor, interval2);
      return interval2.range(min9, interval2.offset(max8));
    }
    if (values5.size > 1e4 && registry.get(key) === position) {
      throw new Error(`implicit ordinal domain of ${key} scale has more than 10,000 values`);
    }
    return sort(values5, ascendingDefined2);
  }
  function inferHint(channels, key) {
    let value;
    for (const { hint } of channels) {
      const candidate = hint?.[key];
      if (candidate === void 0) continue;
      if (value === void 0) value = candidate;
      else if (value !== candidate) return;
    }
    return value;
  }
  function inferSymbolHint(channels) {
    return {
      fill: inferHint(channels, "fill"),
      stroke: inferHint(channels, "stroke")
    };
  }
  function inferSymbolRange(hint) {
    return isNoneish(hint.fill) ? symbolsStroke : symbolsFill;
  }
  function normalizeScale(key, scale3, hint) {
    return createScale(key, hint === void 0 ? void 0 : [{ hint }], { ...scale3 });
  }
  function createScale(key, channels = [], options = {}) {
    const type2 = inferScaleType(key, channels, options);
    if (options.type === void 0 && options.domain === void 0 && options.range === void 0 && options.interval == null && key !== "fx" && key !== "fy" && isOrdinalScale({ type: type2 })) {
      const values5 = channels.map(({ value }) => value).filter((value) => value !== void 0);
      if (values5.some(isTemporal))
        warn(
          `Warning: some data associated with the ${key} scale are dates. Dates are typically associated with a "utc" or "time" scale rather than a "${formatScaleType(
            type2
          )}" scale. If you are using a bar mark, you probably want a rect mark with the interval option instead; if you are using a group transform, you probably want a bin transform instead. If you want to treat this data as ordinal, you can specify the interval of the ${key} scale (e.g., d3.utcDay), or you can suppress this warning by setting the type of the ${key} scale to "${formatScaleType(
            type2
          )}".`
        );
      else if (values5.some(isTemporalString))
        warn(
          `Warning: some data associated with the ${key} scale are strings that appear to be dates (e.g., YYYY-MM-DD). If these strings represent dates, you should parse them to Date objects. Dates are typically associated with a "utc" or "time" scale rather than a "${formatScaleType(
            type2
          )}" scale. If you are using a bar mark, you probably want a rect mark with the interval option instead; if you are using a group transform, you probably want a bin transform instead. If you want to treat this data as ordinal, you can suppress this warning by setting the type of the ${key} scale to "${formatScaleType(
            type2
          )}".`
        );
      else if (values5.some(isNumericString))
        warn(
          `Warning: some data associated with the ${key} scale are strings that appear to be numbers. If these strings represent numbers, you should parse or coerce them to numbers. Numbers are typically associated with a "linear" scale rather than a "${formatScaleType(
            type2
          )}" scale. If you want to treat this data as ordinal, you can specify the interval of the ${key} scale (e.g., 1 for integers), or you can suppress this warning by setting the type of the ${key} scale to "${formatScaleType(
            type2
          )}".`
        );
    }
    options.type = type2;
    switch (type2) {
      case "diverging":
      case "diverging-sqrt":
      case "diverging-pow":
      case "diverging-log":
      case "diverging-symlog":
      case "cyclical":
      case "sequential":
      case "linear":
      case "sqrt":
      case "threshold":
      case "quantile":
      case "pow":
      case "log":
      case "symlog":
        options = coerceType(channels, options, coerceNumbers);
        break;
      case "identity":
        switch (registry.get(key)) {
          case position:
            options = coerceType(channels, options, coerceNumbers);
            break;
          case symbol:
            options = coerceType(channels, options, coerceSymbols);
            break;
        }
        break;
      case "utc":
      case "time":
        options = coerceType(channels, options, coerceDates);
        break;
    }
    switch (type2) {
      case "diverging":
        return createScaleDiverging(key, channels, options);
      case "diverging-sqrt":
        return createScaleDivergingSqrt(key, channels, options);
      case "diverging-pow":
        return createScaleDivergingPow(key, channels, options);
      case "diverging-log":
        return createScaleDivergingLog(key, channels, options);
      case "diverging-symlog":
        return createScaleDivergingSymlog(key, channels, options);
      case "categorical":
      case "ordinal":
      case ordinalImplicit:
        return createScaleOrdinal(key, channels, options);
      case "cyclical":
      case "sequential":
      case "linear":
        return createScaleLinear(key, channels, options);
      case "sqrt":
        return createScaleSqrt(key, channels, options);
      case "threshold":
        return createScaleThreshold(key, channels, options);
      case "quantile":
        return createScaleQuantile(key, channels, options);
      case "quantize":
        return createScaleQuantize(key, channels, options);
      case "pow":
        return createScalePow(key, channels, options);
      case "log":
        return createScaleLog(key, channels, options);
      case "symlog":
        return createScaleSymlog(key, channels, options);
      case "utc":
        return createScaleUtc(key, channels, options);
      case "time":
        return createScaleTime(key, channels, options);
      case "point":
        return createScalePoint(key, channels, options);
      case "band":
        return createScaleBand(key, channels, options);
      case "identity":
        return registry.get(key) === position ? createScaleIdentity() : { type: "identity" };
      case void 0:
        return;
      default:
        throw new Error(`unknown scale type: ${type2}`);
    }
  }
  function formatScaleType(type2) {
    return typeof type2 === "symbol" ? type2.description : type2;
  }
  var typeProjection = { toString: () => "projection" };
  function inferScaleType(key, channels, { type: type2, domain, range: range3, scheme: scheme28, pivot, projection }) {
    if (key === "fx" || key === "fy") return "band";
    if ((key === "x" || key === "y") && projection != null) type2 = typeProjection;
    for (const { type: t } of channels) {
      if (t === void 0) continue;
      else if (type2 === void 0) type2 = t;
      else if (type2 !== t) throw new Error(`scale incompatible with channel: ${type2} !== ${t}`);
    }
    if (type2 === typeProjection) return;
    if (type2 !== void 0) return type2;
    if (domain === void 0 && !channels.some(({ value }) => value !== void 0)) return;
    const kind = registry.get(key);
    if (kind === radius) return "sqrt";
    if (kind === opacity || kind === length) return "linear";
    if (kind === symbol) return "ordinal";
    if ((domain || range3 || []).length > 2) return asOrdinalType(kind);
    if (domain !== void 0) {
      if (isOrdinal(domain)) return asOrdinalType(kind);
      if (isTemporal(domain)) return "utc";
      if (kind === color2 && (pivot != null || isDivergingScheme(scheme28))) return "diverging";
      return "linear";
    }
    const values5 = channels.map(({ value }) => value).filter((value) => value !== void 0);
    if (values5.some(isOrdinal)) return asOrdinalType(kind);
    if (values5.some(isTemporal)) return "utc";
    if (kind === color2 && (pivot != null || isDivergingScheme(scheme28))) return "diverging";
    return "linear";
  }
  function asOrdinalType(kind) {
    switch (kind) {
      case position:
        return "point";
      case color2:
        return ordinalImplicit;
      default:
        return "ordinal";
    }
  }
  function isOrdinalScale({ type: type2 }) {
    return type2 === "ordinal" || type2 === "point" || type2 === "band" || type2 === ordinalImplicit;
  }
  function coerceType(channels, { domain, ...options }, coerceValues) {
    for (const c4 of channels) {
      if (c4.value !== void 0) {
        c4.value = coerceValues(c4.value);
      }
    }
    return {
      domain: domain === void 0 ? domain : coerceValues(domain),
      ...options
    };
  }
  function coerceSymbols(values5) {
    return map3(values5, maybeSymbol);
  }
  function scale(options = {}) {
    let scale3;
    for (const key in options) {
      if (!registry.has(key)) continue;
      if (!isScaleOptions(options[key])) continue;
      if (scale3 !== void 0) throw new Error("ambiguous scale definition; multiple scales found");
      scale3 = exposeScale(normalizeScale(key, options[key]));
    }
    if (scale3 === void 0) throw new Error("invalid scale definition; no scale found");
    return scale3;
  }
  function exposeScale({ scale: scale3, type: type2, domain, range: range3, interpolate, interval: interval2, transform: transform2, percent, pivot }) {
    if (type2 === "identity") return { type: "identity", apply: (d) => d, invert: (d) => d };
    const unknown = scale3.unknown ? scale3.unknown() : void 0;
    return {
      type: type2,
      domain: slice2(domain),
      // defensive copy
      ...range3 !== void 0 && { range: slice2(range3) },
      // defensive copy
      ...transform2 !== void 0 && { transform: transform2 },
      ...percent && { percent },
      // only exposed if truthy
      ...unknown !== void 0 && { unknown },
      ...interval2 !== void 0 && { interval: interval2 },
      // quantitative
      ...interpolate !== void 0 && { interpolate },
      ...scale3.clamp && { clamp: scale3.clamp() },
      // diverging (always asymmetric; we never want to apply the symmetric transform twice)
      ...pivot !== void 0 && { pivot, symmetric: false },
      // log, diverging-log
      ...scale3.base && { base: scale3.base() },
      // pow, diverging-pow
      ...scale3.exponent && { exponent: scale3.exponent() },
      // symlog, diverging-symlog
      ...scale3.constant && { constant: scale3.constant() },
      // band, point
      ...scale3.align && { align: scale3.align(), round: scale3.round() },
      ...scale3.padding && (scale3.paddingInner ? { paddingInner: scale3.paddingInner(), paddingOuter: scale3.paddingOuter() } : { padding: scale3.padding() }),
      ...scale3.bandwidth && { bandwidth: scale3.bandwidth(), step: scale3.step() },
      // utilities
      apply: (t) => scale3(t),
      ...scale3.invert && { invert: (t) => scale3.invert(t) }
    };
  }
  function normalizedScale(scaleOptions) {
    try {
      var scaleType = Object.keys(scaleOptions)[0];
      return scale(_defineProperty({}, scaleType, Object.assign(Object.assign({}, scaleOptions[scaleType]), {
        clamp: true
      })));
    } catch (error) {
      return null;
    }
  }
  function scaleStyle(_scale, scaleOptions) {
    var styles = {};
    if (scaleOptions.hasOwnProperty("opacity")) {
      styles.fill = function() {
        return (
          // eslint-disable-next-line implicit-arrow-linebreak
          scaleOptions.opacity.baseColor || SCALE_BASE_OPACITY_COLOR
        );
      };
      styles["fill-opacity"] = function(d) {
        return _scale === null || _scale === void 0 ? void 0 : _scale.apply(d);
      };
    } else {
      styles.fill = function(d) {
        return (
          // eslint-disable-next-line implicit-arrow-linebreak
          typeof d === "string" && (d === null || d === void 0 ? void 0 : d.startsWith("#")) ? d : _scale === null || _scale === void 0 ? void 0 : _scale.apply(d)
        );
      };
    }
    return styles;
  }
  function applyScaleStyle(elem, _scale, scaleOptions, keyname) {
    Object.entries(scaleStyle(_scale, scaleOptions)).forEach(function(_ref) {
      var _ref2 = _slicedToArray(_ref, 2), prop = _ref2[0], val = _ref2[1];
      return (
        // eslint-disable-next-line implicit-arrow-linebreak
        elem.style(prop, function(d) {
          return (
            // eslint-disable-next-line implicit-arrow-linebreak
            val(keyname ? d[keyname] : d)
          );
        })
      );
    });
  }
  var Populator = /* @__PURE__ */ (function() {
    function Populator2(calendar2) {
      _classCallCheck(this, Populator2);
      this.calendar = calendar2;
    }
    _createClass(Populator2, [{
      key: "populate",
      value: function populate() {
        var calendar2 = this.calendar;
        var _calendar$options$opt = calendar2.options.options, scale3 = _calendar$options$opt.scale, subDomain = _calendar$options$opt.subDomain;
        var colorScale = normalizedScale(scale3);
        calendar2.calendarPainter.root.selectAll(".ch-domain").selectAll("svg").selectAll("g").data(function(d) {
          return calendar2.domainCollection.get(d) || [];
        }).call(function(element) {
          applyScaleStyle(element.select("rect"), colorScale, scale3, "v");
        }).call(function(element) {
          element.select("text").attr("style", function(d) {
            var defaultColor = hcl(colorScale === null || colorScale === void 0 ? void 0 : colorScale.apply(d.v)).l > 60 ? "#000" : "#fff";
            var color4 = subDomain.color || (d.v ? defaultColor : null);
            if (isFunction(color4)) {
              color4 = color4(d.t, d.v, colorScale === null || colorScale === void 0 ? void 0 : colorScale.apply(d.v));
            }
            if (!color4) {
              return null;
            }
            return "fill: ".concat(color4, ";");
          }).text(function(d, i, nodes) {
            return (
              // eslint-disable-next-line implicit-arrow-linebreak
              calendar2.dateHelper.format(d.t, subDomain.label, d.v, nodes[i])
            );
          });
        }).call(function() {
          calendar2.eventEmitter.emit("fill");
        });
      }
    }]);
    return Populator2;
  })();
  function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
  }
  function eq(value, other) {
    return value === other || value !== value && other !== other;
  }
  function assocIndexOf(array2, key) {
    var length3 = array2.length;
    while (length3--) {
      if (eq(array2[length3][0], key)) {
        return length3;
      }
    }
    return -1;
  }
  var arrayProto = Array.prototype;
  var splice = arrayProto.splice;
  function listCacheDelete(key) {
    var data6 = this.__data__, index = assocIndexOf(data6, key);
    if (index < 0) {
      return false;
    }
    var lastIndex = data6.length - 1;
    if (index == lastIndex) {
      data6.pop();
    } else {
      splice.call(data6, index, 1);
    }
    --this.size;
    return true;
  }
  function listCacheGet(key) {
    var data6 = this.__data__, index = assocIndexOf(data6, key);
    return index < 0 ? void 0 : data6[index][1];
  }
  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }
  function listCacheSet(key, value) {
    var data6 = this.__data__, index = assocIndexOf(data6, key);
    if (index < 0) {
      ++this.size;
      data6.push([key, value]);
    } else {
      data6[index][1] = value;
    }
    return this;
  }
  function ListCache(entries3) {
    var index = -1, length3 = entries3 == null ? 0 : entries3.length;
    this.clear();
    while (++index < length3) {
      var entry = entries3[index];
      this.set(entry[0], entry[1]);
    }
  }
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype["delete"] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;
  function stackClear() {
    this.__data__ = new ListCache();
    this.size = 0;
  }
  function stackDelete(key) {
    var data6 = this.__data__, result = data6["delete"](key);
    this.size = data6.size;
    return result;
  }
  function stackGet(key) {
    return this.__data__.get(key);
  }
  function stackHas(key) {
    return this.__data__.has(key);
  }
  var coreJsData = root$1["__core-js_shared__"];
  var coreJsData$1 = coreJsData;
  var maskSrcKey = (function() {
    var uid5 = /[^.]+$/.exec(coreJsData$1 && coreJsData$1.keys && coreJsData$1.keys.IE_PROTO || "");
    return uid5 ? "Symbol(src)_1." + uid5 : "";
  })();
  function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }
  var funcProto$2 = Function.prototype;
  var funcToString$2 = funcProto$2.toString;
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString$2.call(func);
      } catch (e) {
      }
      try {
        return func + "";
      } catch (e) {
      }
    }
    return "";
  }
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var funcProto$1 = Function.prototype;
  var objectProto$d = Object.prototype;
  var funcToString$1 = funcProto$1.toString;
  var hasOwnProperty$b = objectProto$d.hasOwnProperty;
  var reIsNative = RegExp(
    "^" + funcToString$1.call(hasOwnProperty$b).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
  );
  function baseIsNative(value) {
    if (!isObject$2(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }
  function getValue(object, key) {
    return object == null ? void 0 : object[key];
  }
  function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : void 0;
  }
  var Map$1 = getNative(root$1, "Map");
  var Map$2 = Map$1;
  var nativeCreate = getNative(Object, "create");
  var nativeCreate$1 = nativeCreate;
  function hashClear() {
    this.__data__ = nativeCreate$1 ? nativeCreate$1(null) : {};
    this.size = 0;
  }
  function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }
  var HASH_UNDEFINED$2 = "__lodash_hash_undefined__";
  var objectProto$c = Object.prototype;
  var hasOwnProperty$a = objectProto$c.hasOwnProperty;
  function hashGet(key) {
    var data6 = this.__data__;
    if (nativeCreate$1) {
      var result = data6[key];
      return result === HASH_UNDEFINED$2 ? void 0 : result;
    }
    return hasOwnProperty$a.call(data6, key) ? data6[key] : void 0;
  }
  var objectProto$b = Object.prototype;
  var hasOwnProperty$9 = objectProto$b.hasOwnProperty;
  function hashHas(key) {
    var data6 = this.__data__;
    return nativeCreate$1 ? data6[key] !== void 0 : hasOwnProperty$9.call(data6, key);
  }
  var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
  function hashSet(key, value) {
    var data6 = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data6[key] = nativeCreate$1 && value === void 0 ? HASH_UNDEFINED$1 : value;
    return this;
  }
  function Hash(entries3) {
    var index = -1, length3 = entries3 == null ? 0 : entries3.length;
    this.clear();
    while (++index < length3) {
      var entry = entries3[index];
      this.set(entry[0], entry[1]);
    }
  }
  Hash.prototype.clear = hashClear;
  Hash.prototype["delete"] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;
  function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
      "hash": new Hash(),
      "map": new (Map$2 || ListCache)(),
      "string": new Hash()
    };
  }
  function isKeyable(value) {
    var type2 = typeof value;
    return type2 == "string" || type2 == "number" || type2 == "symbol" || type2 == "boolean" ? value !== "__proto__" : value === null;
  }
  function getMapData(map6, key) {
    var data6 = map6.__data__;
    return isKeyable(key) ? data6[typeof key == "string" ? "string" : "hash"] : data6.map;
  }
  function mapCacheDelete(key) {
    var result = getMapData(this, key)["delete"](key);
    this.size -= result ? 1 : 0;
    return result;
  }
  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }
  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }
  function mapCacheSet(key, value) {
    var data6 = getMapData(this, key), size = data6.size;
    data6.set(key, value);
    this.size += data6.size == size ? 0 : 1;
    return this;
  }
  function MapCache(entries3) {
    var index = -1, length3 = entries3 == null ? 0 : entries3.length;
    this.clear();
    while (++index < length3) {
      var entry = entries3[index];
      this.set(entry[0], entry[1]);
    }
  }
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype["delete"] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;
  var LARGE_ARRAY_SIZE = 200;
  function stackSet(key, value) {
    var data6 = this.__data__;
    if (data6 instanceof ListCache) {
      var pairs = data6.__data__;
      if (!Map$2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
        pairs.push([key, value]);
        this.size = ++data6.size;
        return this;
      }
      data6 = this.__data__ = new MapCache(pairs);
    }
    data6.set(key, value);
    this.size = data6.size;
    return this;
  }
  function Stack(entries3) {
    var data6 = this.__data__ = new ListCache(entries3);
    this.size = data6.size;
  }
  Stack.prototype.clear = stackClear;
  Stack.prototype["delete"] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;
  var defineProperty3 = (function() {
    try {
      var func = getNative(Object, "defineProperty");
      func({}, "", {});
      return func;
    } catch (e) {
    }
  })();
  var defineProperty$1 = defineProperty3;
  function baseAssignValue(object, key, value) {
    if (key == "__proto__" && defineProperty$1) {
      defineProperty$1(object, key, {
        "configurable": true,
        "enumerable": true,
        "value": value,
        "writable": true
      });
    } else {
      object[key] = value;
    }
  }
  function assignMergeValue(object, key, value) {
    if (value !== void 0 && !eq(object[key], value) || value === void 0 && !(key in object)) {
      baseAssignValue(object, key, value);
    }
  }
  function createBaseFor(fromRight) {
    return function(object, iteratee, keysFunc) {
      var index = -1, iterable = Object(object), props = keysFunc(object), length3 = props.length;
      while (length3--) {
        var key = props[fromRight ? length3 : ++index];
        if (iteratee(iterable[key], key, iterable) === false) {
          break;
        }
      }
      return object;
    };
  }
  var baseFor = createBaseFor();
  var baseFor$1 = baseFor;
  var freeExports$2 = typeof exports == "object" && exports && !exports.nodeType && exports;
  var freeModule$2 = freeExports$2 && typeof module == "object" && module && !module.nodeType && module;
  var moduleExports$2 = freeModule$2 && freeModule$2.exports === freeExports$2;
  var Buffer$1 = moduleExports$2 ? root$1.Buffer : void 0;
  var allocUnsafe = Buffer$1 ? Buffer$1.allocUnsafe : void 0;
  function cloneBuffer(buffer, isDeep) {
    if (isDeep) {
      return buffer.slice();
    }
    var length3 = buffer.length, result = allocUnsafe ? allocUnsafe(length3) : new buffer.constructor(length3);
    buffer.copy(result);
    return result;
  }
  var Uint8Array$1 = root$1.Uint8Array;
  var Uint8Array$2 = Uint8Array$1;
  function cloneArrayBuffer(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array$2(result).set(new Uint8Array$2(arrayBuffer));
    return result;
  }
  function cloneTypedArray(typedArray, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  }
  function copyArray(source, array2) {
    var index = -1, length3 = source.length;
    array2 || (array2 = Array(length3));
    while (++index < length3) {
      array2[index] = source[index];
    }
    return array2;
  }
  var objectCreate = Object.create;
  var baseCreate = /* @__PURE__ */ (function() {
    function object() {
    }
    return function(proto) {
      if (!isObject$2(proto)) {
        return {};
      }
      if (objectCreate) {
        return objectCreate(proto);
      }
      object.prototype = proto;
      var result = new object();
      object.prototype = void 0;
      return result;
    };
  })();
  var baseCreate$1 = baseCreate;
  function overArg(func, transform2) {
    return function(arg) {
      return func(transform2(arg));
    };
  }
  var getPrototype = overArg(Object.getPrototypeOf, Object);
  var getPrototype$1 = getPrototype;
  var objectProto$a = Object.prototype;
  function isPrototype(value) {
    var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto$a;
    return value === proto;
  }
  function initCloneObject(object) {
    return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate$1(getPrototype$1(object)) : {};
  }
  function isObjectLike(value) {
    return value != null && typeof value == "object";
  }
  var argsTag$2 = "[object Arguments]";
  function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag$2;
  }
  var objectProto$9 = Object.prototype;
  var hasOwnProperty$8 = objectProto$9.hasOwnProperty;
  var propertyIsEnumerable$1 = objectProto$9.propertyIsEnumerable;
  var isArguments = baseIsArguments(/* @__PURE__ */ (function() {
    return arguments;
  })()) ? baseIsArguments : function(value) {
    return isObjectLike(value) && hasOwnProperty$8.call(value, "callee") && !propertyIsEnumerable$1.call(value, "callee");
  };
  var isArguments$1 = isArguments;
  var MAX_SAFE_INTEGER$1 = 9007199254740991;
  function isLength(value) {
    return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$1;
  }
  function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
  }
  function isArrayLikeObject(value) {
    return isObjectLike(value) && isArrayLike(value);
  }
  function stubFalse() {
    return false;
  }
  var freeExports$1 = typeof exports == "object" && exports && !exports.nodeType && exports;
  var freeModule$1 = freeExports$1 && typeof module == "object" && module && !module.nodeType && module;
  var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;
  var Buffer = moduleExports$1 ? root$1.Buffer : void 0;
  var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
  var isBuffer = nativeIsBuffer || stubFalse;
  var isBuffer$1 = isBuffer;
  var objectTag$3 = "[object Object]";
  var funcProto = Function.prototype;
  var objectProto$8 = Object.prototype;
  var funcToString = funcProto.toString;
  var hasOwnProperty$7 = objectProto$8.hasOwnProperty;
  var objectCtorString = funcToString.call(Object);
  function isPlainObject(value) {
    if (!isObjectLike(value) || baseGetTag(value) != objectTag$3) {
      return false;
    }
    var proto = getPrototype$1(value);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty$7.call(proto, "constructor") && proto.constructor;
    return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
  }
  var argsTag$1 = "[object Arguments]";
  var arrayTag$1 = "[object Array]";
  var boolTag$1 = "[object Boolean]";
  var dateTag$1 = "[object Date]";
  var errorTag$1 = "[object Error]";
  var funcTag = "[object Function]";
  var mapTag$2 = "[object Map]";
  var numberTag$1 = "[object Number]";
  var objectTag$2 = "[object Object]";
  var regexpTag$1 = "[object RegExp]";
  var setTag$2 = "[object Set]";
  var stringTag$2 = "[object String]";
  var weakMapTag$1 = "[object WeakMap]";
  var arrayBufferTag$1 = "[object ArrayBuffer]";
  var dataViewTag$2 = "[object DataView]";
  var float32Tag = "[object Float32Array]";
  var float64Tag = "[object Float64Array]";
  var int8Tag = "[object Int8Array]";
  var int16Tag = "[object Int16Array]";
  var int32Tag = "[object Int32Array]";
  var uint8Tag = "[object Uint8Array]";
  var uint8ClampedTag = "[object Uint8ClampedArray]";
  var uint16Tag = "[object Uint16Array]";
  var uint32Tag = "[object Uint32Array]";
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] = typedArrayTags[arrayBufferTag$1] = typedArrayTags[boolTag$1] = typedArrayTags[dataViewTag$2] = typedArrayTags[dateTag$1] = typedArrayTags[errorTag$1] = typedArrayTags[funcTag] = typedArrayTags[mapTag$2] = typedArrayTags[numberTag$1] = typedArrayTags[objectTag$2] = typedArrayTags[regexpTag$1] = typedArrayTags[setTag$2] = typedArrayTags[stringTag$2] = typedArrayTags[weakMapTag$1] = false;
  function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
  }
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }
  var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
  var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal$1.process;
  var nodeUtil = (function() {
    try {
      var types = freeModule && freeModule.require && freeModule.require("util").types;
      if (types) {
        return types;
      }
      return freeProcess && freeProcess.binding && freeProcess.binding("util");
    } catch (e) {
    }
  })();
  var nodeUtil$1 = nodeUtil;
  var nodeIsTypedArray = nodeUtil$1 && nodeUtil$1.isTypedArray;
  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
  var isTypedArray$1 = isTypedArray;
  function safeGet(object, key) {
    if (key === "constructor" && typeof object[key] === "function") {
      return;
    }
    if (key == "__proto__") {
      return;
    }
    return object[key];
  }
  var objectProto$7 = Object.prototype;
  var hasOwnProperty$6 = objectProto$7.hasOwnProperty;
  function assignValue(object, key, value) {
    var objValue = object[key];
    if (!(hasOwnProperty$6.call(object, key) && eq(objValue, value)) || value === void 0 && !(key in object)) {
      baseAssignValue(object, key, value);
    }
  }
  function copyObject(source, props, object, customizer) {
    var isNew = !object;
    object || (object = {});
    var index = -1, length3 = props.length;
    while (++index < length3) {
      var key = props[index];
      var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
      if (newValue === void 0) {
        newValue = source[key];
      }
      if (isNew) {
        baseAssignValue(object, key, newValue);
      } else {
        assignValue(object, key, newValue);
      }
    }
    return object;
  }
  function baseTimes(n, iteratee) {
    var index = -1, result = Array(n);
    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }
  var MAX_SAFE_INTEGER = 9007199254740991;
  var reIsUint = /^(?:0|[1-9]\d*)$/;
  function isIndex(value, length3) {
    var type2 = typeof value;
    length3 = length3 == null ? MAX_SAFE_INTEGER : length3;
    return !!length3 && (type2 == "number" || type2 != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length3);
  }
  var objectProto$6 = Object.prototype;
  var hasOwnProperty$5 = objectProto$6.hasOwnProperty;
  function arrayLikeKeys(value, inherited) {
    var isArr = isArray$3(value), isArg = !isArr && isArguments$1(value), isBuff = !isArr && !isArg && isBuffer$1(value), isType = !isArr && !isArg && !isBuff && isTypedArray$1(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length3 = result.length;
    for (var key in value) {
      if ((inherited || hasOwnProperty$5.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
      (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
      isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
      isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
      isIndex(key, length3)))) {
        result.push(key);
      }
    }
    return result;
  }
  function nativeKeysIn(object) {
    var result = [];
    if (object != null) {
      for (var key in Object(object)) {
        result.push(key);
      }
    }
    return result;
  }
  var objectProto$5 = Object.prototype;
  var hasOwnProperty$4 = objectProto$5.hasOwnProperty;
  function baseKeysIn(object) {
    if (!isObject$2(object)) {
      return nativeKeysIn(object);
    }
    var isProto = isPrototype(object), result = [];
    for (var key in object) {
      if (!(key == "constructor" && (isProto || !hasOwnProperty$4.call(object, key)))) {
        result.push(key);
      }
    }
    return result;
  }
  function keysIn(object) {
    return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
  }
  function toPlainObject(value) {
    return copyObject(value, keysIn(value));
  }
  function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
    var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
    if (stacked) {
      assignMergeValue(object, key, stacked);
      return;
    }
    var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
    var isCommon = newValue === void 0;
    if (isCommon) {
      var isArr = isArray$3(srcValue), isBuff = !isArr && isBuffer$1(srcValue), isTyped = !isArr && !isBuff && isTypedArray$1(srcValue);
      newValue = srcValue;
      if (isArr || isBuff || isTyped) {
        if (isArray$3(objValue)) {
          newValue = objValue;
        } else if (isArrayLikeObject(objValue)) {
          newValue = copyArray(objValue);
        } else if (isBuff) {
          isCommon = false;
          newValue = cloneBuffer(srcValue, true);
        } else if (isTyped) {
          isCommon = false;
          newValue = cloneTypedArray(srcValue, true);
        } else {
          newValue = [];
        }
      } else if (isPlainObject(srcValue) || isArguments$1(srcValue)) {
        newValue = objValue;
        if (isArguments$1(objValue)) {
          newValue = toPlainObject(objValue);
        } else if (!isObject$2(objValue) || isFunction(objValue)) {
          newValue = initCloneObject(srcValue);
        }
      } else {
        isCommon = false;
      }
    }
    if (isCommon) {
      stack.set(srcValue, newValue);
      mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
      stack["delete"](srcValue);
    }
    assignMergeValue(object, key, newValue);
  }
  function baseMerge(object, source, srcIndex, customizer, stack) {
    if (object === source) {
      return;
    }
    baseFor$1(source, function(srcValue, key) {
      stack || (stack = new Stack());
      if (isObject$2(srcValue)) {
        baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
      } else {
        var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : void 0;
        if (newValue === void 0) {
          newValue = srcValue;
        }
        assignMergeValue(object, key, newValue);
      }
    }, keysIn);
  }
  function identity5(value) {
    return value;
  }
  function apply$1(func, thisArg, args) {
    switch (args.length) {
      case 0:
        return func.call(thisArg);
      case 1:
        return func.call(thisArg, args[0]);
      case 2:
        return func.call(thisArg, args[0], args[1]);
      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }
  var nativeMax = Math.max;
  function overRest(func, start3, transform2) {
    start3 = nativeMax(start3 === void 0 ? func.length - 1 : start3, 0);
    return function() {
      var args = arguments, index = -1, length3 = nativeMax(args.length - start3, 0), array2 = Array(length3);
      while (++index < length3) {
        array2[index] = args[start3 + index];
      }
      index = -1;
      var otherArgs = Array(start3 + 1);
      while (++index < start3) {
        otherArgs[index] = args[index];
      }
      otherArgs[start3] = transform2(array2);
      return apply$1(func, this, otherArgs);
    };
  }
  function constant(value) {
    return function() {
      return value;
    };
  }
  var baseSetToString = !defineProperty$1 ? identity5 : function(func, string) {
    return defineProperty$1(func, "toString", {
      "configurable": true,
      "enumerable": false,
      "value": constant(string),
      "writable": true
    });
  };
  var baseSetToString$1 = baseSetToString;
  var HOT_COUNT = 800;
  var HOT_SPAN = 16;
  var nativeNow = Date.now;
  function shortOut(func) {
    var count = 0, lastCalled = 0;
    return function() {
      var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
      lastCalled = stamp;
      if (remaining > 0) {
        if (++count >= HOT_COUNT) {
          return arguments[0];
        }
      } else {
        count = 0;
      }
      return func.apply(void 0, arguments);
    };
  }
  var setToString = shortOut(baseSetToString$1);
  var setToString$1 = setToString;
  function baseRest(func, start3) {
    return setToString$1(overRest(func, start3, identity5), func + "");
  }
  function isIterateeCall(value, index, object) {
    if (!isObject$2(object)) {
      return false;
    }
    var type2 = typeof index;
    if (type2 == "number" ? isArrayLike(object) && isIndex(index, object.length) : type2 == "string" && index in object) {
      return eq(object[index], value);
    }
    return false;
  }
  function createAssigner(assigner) {
    return baseRest(function(object, sources) {
      var index = -1, length3 = sources.length, customizer = length3 > 1 ? sources[length3 - 1] : void 0, guard = length3 > 2 ? sources[2] : void 0;
      customizer = assigner.length > 3 && typeof customizer == "function" ? (length3--, customizer) : void 0;
      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        customizer = length3 < 3 ? void 0 : customizer;
        length3 = 1;
      }
      object = Object(object);
      while (++index < length3) {
        var source = sources[index];
        if (source) {
          assigner(object, source, index, customizer);
        }
      }
      return object;
    });
  }
  var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
    baseMerge(object, source, srcIndex, customizer);
  });
  var mergeWith$1 = mergeWith;
  var HASH_UNDEFINED = "__lodash_hash_undefined__";
  function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  }
  function setCacheHas(value) {
    return this.__data__.has(value);
  }
  function SetCache(values5) {
    var index = -1, length3 = values5 == null ? 0 : values5.length;
    this.__data__ = new MapCache();
    while (++index < length3) {
      this.add(values5[index]);
    }
  }
  SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
  SetCache.prototype.has = setCacheHas;
  function arraySome(array2, predicate) {
    var index = -1, length3 = array2 == null ? 0 : array2.length;
    while (++index < length3) {
      if (predicate(array2[index], index, array2)) {
        return true;
      }
    }
    return false;
  }
  function cacheHas(cache, key) {
    return cache.has(key);
  }
  var COMPARE_PARTIAL_FLAG$3 = 1;
  var COMPARE_UNORDERED_FLAG$1 = 2;
  function equalArrays(array2, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, arrLength = array2.length, othLength = other.length;
    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }
    var arrStacked = stack.get(array2);
    var othStacked = stack.get(other);
    if (arrStacked && othStacked) {
      return arrStacked == other && othStacked == array2;
    }
    var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$1 ? new SetCache() : void 0;
    stack.set(array2, other);
    stack.set(other, array2);
    while (++index < arrLength) {
      var arrValue = array2[index], othValue = other[index];
      if (customizer) {
        var compared = isPartial ? customizer(othValue, arrValue, index, other, array2, stack) : customizer(arrValue, othValue, index, array2, other, stack);
      }
      if (compared !== void 0) {
        if (compared) {
          continue;
        }
        result = false;
        break;
      }
      if (seen) {
        if (!arraySome(other, function(othValue2, othIndex) {
          if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
            return seen.push(othIndex);
          }
        })) {
          result = false;
          break;
        }
      } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
        result = false;
        break;
      }
    }
    stack["delete"](array2);
    stack["delete"](other);
    return result;
  }
  function mapToArray(map6) {
    var index = -1, result = Array(map6.size);
    map6.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }
  function setToArray(set7) {
    var index = -1, result = Array(set7.size);
    set7.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }
  var COMPARE_PARTIAL_FLAG$2 = 1;
  var COMPARE_UNORDERED_FLAG = 2;
  var boolTag = "[object Boolean]";
  var dateTag = "[object Date]";
  var errorTag = "[object Error]";
  var mapTag$1 = "[object Map]";
  var numberTag = "[object Number]";
  var regexpTag = "[object RegExp]";
  var setTag$1 = "[object Set]";
  var stringTag$1 = "[object String]";
  var symbolTag$1 = "[object Symbol]";
  var arrayBufferTag = "[object ArrayBuffer]";
  var dataViewTag$1 = "[object DataView]";
  var symbolProto$1 = Symbol$2 ? Symbol$2.prototype : void 0;
  var symbolValueOf = symbolProto$1 ? symbolProto$1.valueOf : void 0;
  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch (tag) {
      case dataViewTag$1:
        if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
          return false;
        }
        object = object.buffer;
        other = other.buffer;
      case arrayBufferTag:
        if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array$2(object), new Uint8Array$2(other))) {
          return false;
        }
        return true;
      case boolTag:
      case dateTag:
      case numberTag:
        return eq(+object, +other);
      case errorTag:
        return object.name == other.name && object.message == other.message;
      case regexpTag:
      case stringTag$1:
        return object == other + "";
      case mapTag$1:
        var convert = mapToArray;
      case setTag$1:
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2;
        convert || (convert = setToArray);
        if (object.size != other.size && !isPartial) {
          return false;
        }
        var stacked = stack.get(object);
        if (stacked) {
          return stacked == other;
        }
        bitmask |= COMPARE_UNORDERED_FLAG;
        stack.set(object, other);
        var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
        stack["delete"](object);
        return result;
      case symbolTag$1:
        if (symbolValueOf) {
          return symbolValueOf.call(object) == symbolValueOf.call(other);
        }
    }
    return false;
  }
  function arrayPush(array2, values5) {
    var index = -1, length3 = values5.length, offset2 = array2.length;
    while (++index < length3) {
      array2[offset2 + index] = values5[index];
    }
    return array2;
  }
  function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray$3(object) ? result : arrayPush(result, symbolsFunc(object));
  }
  function arrayFilter(array2, predicate) {
    var index = -1, length3 = array2 == null ? 0 : array2.length, resIndex = 0, result = [];
    while (++index < length3) {
      var value = array2[index];
      if (predicate(value, index, array2)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }
  function stubArray() {
    return [];
  }
  var objectProto$4 = Object.prototype;
  var propertyIsEnumerable2 = objectProto$4.propertyIsEnumerable;
  var nativeGetSymbols = Object.getOwnPropertySymbols;
  var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
    if (object == null) {
      return [];
    }
    object = Object(object);
    return arrayFilter(nativeGetSymbols(object), function(symbol3) {
      return propertyIsEnumerable2.call(object, symbol3);
    });
  };
  var getSymbols$1 = getSymbols;
  var nativeKeys = overArg(Object.keys, Object);
  var nativeKeys$1 = nativeKeys;
  var objectProto$3 = Object.prototype;
  var hasOwnProperty$3 = objectProto$3.hasOwnProperty;
  function baseKeys(object) {
    if (!isPrototype(object)) {
      return nativeKeys$1(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty$3.call(object, key) && key != "constructor") {
        result.push(key);
      }
    }
    return result;
  }
  function keys3(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
  }
  function getAllKeys(object) {
    return baseGetAllKeys(object, keys3, getSymbols$1);
  }
  var COMPARE_PARTIAL_FLAG$1 = 1;
  var objectProto$2 = Object.prototype;
  var hasOwnProperty$2 = objectProto$2.hasOwnProperty;
  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
    if (objLength != othLength && !isPartial) {
      return false;
    }
    var index = objLength;
    while (index--) {
      var key = objProps[index];
      if (!(isPartial ? key in other : hasOwnProperty$2.call(other, key))) {
        return false;
      }
    }
    var objStacked = stack.get(object);
    var othStacked = stack.get(other);
    if (objStacked && othStacked) {
      return objStacked == other && othStacked == object;
    }
    var result = true;
    stack.set(object, other);
    stack.set(other, object);
    var skipCtor = isPartial;
    while (++index < objLength) {
      key = objProps[index];
      var objValue = object[key], othValue = other[key];
      if (customizer) {
        var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
      }
      if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
        result = false;
        break;
      }
      skipCtor || (skipCtor = key == "constructor");
    }
    if (result && !skipCtor) {
      var objCtor = object.constructor, othCtor = other.constructor;
      if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
        result = false;
      }
    }
    stack["delete"](object);
    stack["delete"](other);
    return result;
  }
  var DataView2 = getNative(root$1, "DataView");
  var DataView$1 = DataView2;
  var Promise$1 = getNative(root$1, "Promise");
  var Promise$2 = Promise$1;
  var Set$1 = getNative(root$1, "Set");
  var Set$2 = Set$1;
  var WeakMap = getNative(root$1, "WeakMap");
  var WeakMap$1 = WeakMap;
  var mapTag = "[object Map]";
  var objectTag$1 = "[object Object]";
  var promiseTag = "[object Promise]";
  var setTag = "[object Set]";
  var weakMapTag = "[object WeakMap]";
  var dataViewTag = "[object DataView]";
  var dataViewCtorString = toSource(DataView$1);
  var mapCtorString = toSource(Map$2);
  var promiseCtorString = toSource(Promise$2);
  var setCtorString = toSource(Set$2);
  var weakMapCtorString = toSource(WeakMap$1);
  var getTag = baseGetTag;
  if (DataView$1 && getTag(new DataView$1(new ArrayBuffer(1))) != dataViewTag || Map$2 && getTag(new Map$2()) != mapTag || Promise$2 && getTag(Promise$2.resolve()) != promiseTag || Set$2 && getTag(new Set$2()) != setTag || WeakMap$1 && getTag(new WeakMap$1()) != weakMapTag) {
    getTag = function(value) {
      var result = baseGetTag(value), Ctor = result == objectTag$1 ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag;
          case mapCtorString:
            return mapTag;
          case promiseCtorString:
            return promiseTag;
          case setCtorString:
            return setTag;
          case weakMapCtorString:
            return weakMapTag;
        }
      }
      return result;
    };
  }
  var getTag$1 = getTag;
  var COMPARE_PARTIAL_FLAG = 1;
  var argsTag = "[object Arguments]";
  var arrayTag = "[object Array]";
  var objectTag = "[object Object]";
  var objectProto$1 = Object.prototype;
  var hasOwnProperty$1 = objectProto$1.hasOwnProperty;
  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray$3(object), othIsArr = isArray$3(other), objTag = objIsArr ? arrayTag : getTag$1(object), othTag = othIsArr ? arrayTag : getTag$1(other);
    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;
    var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
    if (isSameTag && isBuffer$1(object)) {
      if (!isBuffer$1(other)) {
        return false;
      }
      objIsArr = true;
      objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
      stack || (stack = new Stack());
      return objIsArr || isTypedArray$1(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
      var objIsWrapped = objIsObj && hasOwnProperty$1.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty$1.call(other, "__wrapped__");
      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
        stack || (stack = new Stack());
        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
      }
    }
    if (!isSameTag) {
      return false;
    }
    stack || (stack = new Stack());
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
  }
  function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) {
      return true;
    }
    if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
      return value !== value && other !== other;
    }
    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
  }
  function isEqual(value, other) {
    return baseIsEqual(value, other);
  }
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  function baseHas(object, key) {
    return object != null && hasOwnProperty.call(object, key);
  }
  var symbolTag = "[object Symbol]";
  function isSymbol(value) {
    return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
  }
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
  var reIsPlainProp = /^\w*$/;
  function isKey(value, object) {
    if (isArray$3(value)) {
      return false;
    }
    var type2 = typeof value;
    if (type2 == "number" || type2 == "symbol" || type2 == "boolean" || value == null || isSymbol(value)) {
      return true;
    }
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
  }
  var FUNC_ERROR_TEXT = "Expected a function";
  function memoize(func, resolver) {
    if (typeof func != "function" || resolver != null && typeof resolver != "function") {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    var memoized = function() {
      var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
      if (cache.has(key)) {
        return cache.get(key);
      }
      var result = func.apply(this, args);
      memoized.cache = cache.set(key, result) || cache;
      return result;
    };
    memoized.cache = new (memoize.Cache || MapCache)();
    return memoized;
  }
  memoize.Cache = MapCache;
  var MAX_MEMOIZE_SIZE = 500;
  function memoizeCapped(func) {
    var result = memoize(func, function(key) {
      if (cache.size === MAX_MEMOIZE_SIZE) {
        cache.clear();
      }
      return key;
    });
    var cache = result.cache;
    return result;
  }
  var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
  var reEscapeChar = /\\(\\)?/g;
  var stringToPath = memoizeCapped(function(string) {
    var result = [];
    if (string.charCodeAt(0) === 46) {
      result.push("");
    }
    string.replace(rePropName, function(match5, number5, quote, subString) {
      result.push(quote ? subString.replace(reEscapeChar, "$1") : number5 || match5);
    });
    return result;
  });
  var stringToPath$1 = stringToPath;
  function arrayMap(array2, iteratee) {
    var index = -1, length3 = array2 == null ? 0 : array2.length, result = Array(length3);
    while (++index < length3) {
      result[index] = iteratee(array2[index], index, array2);
    }
    return result;
  }
  var INFINITY$1 = 1 / 0;
  var symbolProto = Symbol$2 ? Symbol$2.prototype : void 0;
  var symbolToString = symbolProto ? symbolProto.toString : void 0;
  function baseToString(value) {
    if (typeof value == "string") {
      return value;
    }
    if (isArray$3(value)) {
      return arrayMap(value, baseToString) + "";
    }
    if (isSymbol(value)) {
      return symbolToString ? symbolToString.call(value) : "";
    }
    var result = value + "";
    return result == "0" && 1 / value == -INFINITY$1 ? "-0" : result;
  }
  function toString$3(value) {
    return value == null ? "" : baseToString(value);
  }
  function castPath(value, object) {
    if (isArray$3(value)) {
      return value;
    }
    return isKey(value, object) ? [value] : stringToPath$1(toString$3(value));
  }
  var INFINITY = 1 / 0;
  function toKey(value) {
    if (typeof value == "string" || isSymbol(value)) {
      return value;
    }
    var result = value + "";
    return result == "0" && 1 / value == -INFINITY ? "-0" : result;
  }
  function hasPath(object, path, hasFunc) {
    path = castPath(path, object);
    var index = -1, length3 = path.length, result = false;
    while (++index < length3) {
      var key = toKey(path[index]);
      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }
      object = object[key];
    }
    if (result || ++index != length3) {
      return result;
    }
    length3 = object == null ? 0 : object.length;
    return !!length3 && isLength(length3) && isIndex(key, length3) && (isArray$3(object) || isArguments$1(object));
  }
  function has(object, path) {
    return object != null && hasPath(object, path, baseHas);
  }
  function baseGet(object, path) {
    path = castPath(path, object);
    var index = 0, length3 = path.length;
    while (object != null && index < length3) {
      object = object[toKey(path[index++])];
    }
    return index && index == length3 ? object : void 0;
  }
  function get3(object, path, defaultValue) {
    var result = object == null ? void 0 : baseGet(object, path);
    return result === void 0 ? defaultValue : result;
  }
  function baseSet(object, path, value, customizer) {
    if (!isObject$2(object)) {
      return object;
    }
    path = castPath(path, object);
    var index = -1, length3 = path.length, lastIndex = length3 - 1, nested = object;
    while (nested != null && ++index < length3) {
      var key = toKey(path[index]), newValue = value;
      if (key === "__proto__" || key === "constructor" || key === "prototype") {
        return object;
      }
      if (index != lastIndex) {
        var objValue = nested[key];
        newValue = customizer ? customizer(objValue, key, nested) : void 0;
        if (newValue === void 0) {
          newValue = isObject$2(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
        }
      }
      assignValue(nested, key, newValue);
      nested = nested[key];
    }
    return object;
  }
  function set3(object, path, value) {
    return object == null ? object : baseSet(object, path, value);
  }
  var stringTag = "[object String]";
  function isString(value) {
    return typeof value == "string" || !isArray$3(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
  }
  var OptionsPreProcessors = {
    range: function range2(value) {
      return Math.max(+value, 1);
    },
    "date.highlight": function dateHighlight(args) {
      return castArray(args);
    },
    "subDomain.label": function subDomainLabel(value) {
      return (
        // eslint-disable-next-line
        isString(value) && value !== "" || isFunction(value) ? value : null
      );
    }
  };
  var Options = /* @__PURE__ */ (function() {
    function Options2() {
      var processors = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : OptionsPreProcessors;
      _classCallCheck(this, Options2);
      this.preProcessors = processors;
      this.options = {
        // selector string of the container to append the graph to
        // Accept any string value accepted by document.querySelector or CSS3
        // or an Element object
        itemSelector: OPTIONS_DEFAULT_ITEM_SELECTOR,
        // Number of domain to display on the graph
        range: OPTIONS_DEFAULT_RANGE,
        domain: {
          type: OPTIONS_DEFAULT_DOMAIN_TYPE,
          // Space between each domain, in pixel
          gutter: 4,
          padding: [0, 0, 0, 0],
          // Whether to enable dynamic domain size
          // The width/height on a domain depends on the number of
          // subDomains items count
          dynamicDimension: true,
          // Whether to show most recent date first
          sort: "asc",
          label: {
            // Formatting of the domain label
            // @default: undefined, will use the formatting
            // according to domain type
            // Accept any string accepted by dayjs.format()
            // or a function
            //
            // Refer to https://day.js.org/docs/en/display/format
            // for list of accepted string tokens used by dayjs.format()
            text: void 0,
            // valid: top, right, bottom, left
            position: "bottom",
            // Valid are the direct svg values: start, middle, end
            textAlign: "middle",
            // By default, there is no margin/padding around the label
            offset: {
              x: 0,
              y: 0
            },
            rotate: null,
            // Used only on vertical orientation
            width: 100,
            // Used only on horizontal orientation
            height: 25
          }
        },
        subDomain: {
          type: OPTIONS_DEFAULT_SUBDOMAIN_TYPE,
          // Width of each subDomain cell, in pixel
          width: OPTIONS_DEFAULT_SUBDOMAIN_WIDTH,
          // Height of each subDomain cell, in pixel
          height: OPTIONS_DEFAULT_SUBDOMAIN_HEIGHT,
          // Space between each subDomain cell, in pixel
          gutter: OPTIONS_DEFAULT_SUBDOMAIN_GUTTER,
          // Radius of each subDomain cell, in pixel
          radius: OPTIONS_DEFAULT_SUBDOMAIN_RADIUS,
          // Formatting of the text inside each subDomain cell
          // @default: null, no text
          // Accept any string accepted by dayjs.format()
          // or a function
          //
          // Refer to https://day.js.org/docs/en/display/format
          // for list of accepted string tokens used by dayjs.format()
          label: null,
          color: void 0,
          sort: "asc"
        },
        date: {
          // Start date of the graph
          // @default now
          start: /* @__PURE__ */ new Date(),
          min: void 0,
          max: void 0,
          // List of dates to highlight
          // Valid values:
          // - []: don't highlight anything
          // - an array of Date objects: highlight the specified dates
          highlight: [],
          locale: OPTIONS_DEFAULT_LOCALE,
          timezone: void 0
        },
        // Calendar orientation
        // false: display domains side by side
        // true : display domains one under the other
        verticalOrientation: false,
        data: {
          // Data source
          // URL, where to fetch the original datas
          source: "",
          // Data type
          // Default: json
          type: "json",
          requestInit: {},
          // keyname of the time property
          x: "",
          // keyname of the value property
          y: "",
          // Grouping function of the values
          groupY: "sum",
          defaultValue: null
        },
        scale: void 0,
        // Animation duration, in ms
        animationDuration: OPTIONS_DEFAULT_ANIMATION_DURATION,
        // Theme mode: dark/light
        theme: OPTIONS_DEFAULT_THEME,
        // Internally used options, do not edit not set
        x: {
          domainHorizontalLabelWidth: 0,
          domainVerticalLabelHeight: 0
        }
      };
    }
    _createClass(Options2, [{
      key: "set",
      value: function set$15(key, value) {
        if (!has(this.options, key) || isEqual(get3(this.options, key), value)) {
          return false;
        }
        set3(this.options, key, has(this.preProcessors, key) ? get3(this.preProcessors, key)(value) : value);
        return true;
      }
    }, {
      key: "init",
      value: function init2(opts) {
        var _this = this;
        this.options = Object.assign({}, mergeWith$1(this.options, opts, function(_, srcValue) {
          return Array.isArray(srcValue) ? srcValue : void 0;
        }));
        var options = this.options;
        Object.keys(this.preProcessors).forEach(function(key) {
          set3(options, key, get3(_this.preProcessors, key)(get3(options, key)));
        });
        if (typeof options.scale === "undefined") {
          this.initScale();
        }
        options.x.domainVerticalLabelHeight = options.domain.label.height;
        if (options.domain.label.position === "top" || options.domain.label.position === "bottom") {
          options.x.domainHorizontalLabelWidth = 0;
        } else {
          options.x.domainVerticalLabelHeight = 0;
          options.x.domainHorizontalLabelWidth = options.domain.label.width;
        }
        if (options.domain.label.text === null || options.domain.label.text === "") {
          options.x.domainVerticalLabelHeight = 0;
          options.x.domainHorizontalLabelWidth = 0;
        }
      }
    }, {
      key: "initScale",
      value: function initScale() {
        this.options.scale = {
          color: {
            scheme: SCALE_BASE_COLOR_SCHEME,
            type: SCALE_BASE_COLOR_TYPE,
            domain: SCALE_BASE_COLOR_DOMAIN
          }
        };
      }
    }]);
    return Options2;
  })();
  var anObject$2 = anObject$f;
  var regexpFlags$1 = function() {
    var that = anObject$2(this);
    var result = "";
    if (that.hasIndices) result += "d";
    if (that.global) result += "g";
    if (that.ignoreCase) result += "i";
    if (that.multiline) result += "m";
    if (that.dotAll) result += "s";
    if (that.unicode) result += "u";
    if (that.unicodeSets) result += "v";
    if (that.sticky) result += "y";
    return result;
  };
  var fails$4 = fails$u;
  var global$3 = global$n;
  var $RegExp$2 = global$3.RegExp;
  var UNSUPPORTED_Y$1 = fails$4(function() {
    var re4 = $RegExp$2("a", "y");
    re4.lastIndex = 2;
    return re4.exec("abcd") !== null;
  });
  var MISSED_STICKY = UNSUPPORTED_Y$1 || fails$4(function() {
    return !$RegExp$2("a", "y").sticky;
  });
  var BROKEN_CARET = UNSUPPORTED_Y$1 || fails$4(function() {
    var re4 = $RegExp$2("^r", "gy");
    re4.lastIndex = 2;
    return re4.exec("str") !== null;
  });
  var regexpStickyHelpers = {
    BROKEN_CARET,
    MISSED_STICKY,
    UNSUPPORTED_Y: UNSUPPORTED_Y$1
  };
  var fails$3 = fails$u;
  var global$2 = global$n;
  var $RegExp$1 = global$2.RegExp;
  var regexpUnsupportedDotAll = fails$3(function() {
    var re4 = $RegExp$1(".", "s");
    return !(re4.dotAll && re4.test("\n") && re4.flags === "s");
  });
  var fails$2 = fails$u;
  var global$1 = global$n;
  var $RegExp = global$1.RegExp;
  var regexpUnsupportedNcg = fails$2(function() {
    var re4 = $RegExp("(?<a>b)", "g");
    return re4.exec("b").groups.a !== "b" || "b".replace(re4, "$<a>c") !== "bc";
  });
  var call$2 = functionCall;
  var uncurryThis$5 = functionUncurryThis;
  var toString$2 = toString$9;
  var regexpFlags = regexpFlags$1;
  var stickyHelpers = regexpStickyHelpers;
  var shared = sharedExports;
  var create3 = objectCreate$1;
  var getInternalState = internalState.get;
  var UNSUPPORTED_DOT_ALL = regexpUnsupportedDotAll;
  var UNSUPPORTED_NCG = regexpUnsupportedNcg;
  var nativeReplace = shared("native-string-replace", String.prototype.replace);
  var nativeExec = RegExp.prototype.exec;
  var patchedExec = nativeExec;
  var charAt$2 = uncurryThis$5("".charAt);
  var indexOf = uncurryThis$5("".indexOf);
  var replace$1 = uncurryThis$5("".replace);
  var stringSlice$2 = uncurryThis$5("".slice);
  var UPDATES_LAST_INDEX_WRONG = (function() {
    var re1 = /a/;
    var re22 = /b*/g;
    call$2(nativeExec, re1, "a");
    call$2(nativeExec, re22, "a");
    return re1.lastIndex !== 0 || re22.lastIndex !== 0;
  })();
  var UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;
  var NPCG_INCLUDED = /()??/.exec("")[1] !== void 0;
  var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;
  if (PATCH) {
    patchedExec = function exec5(string) {
      var re4 = this;
      var state = getInternalState(re4);
      var str = toString$2(string);
      var raw = state.raw;
      var result, reCopy, lastIndex, match5, i, object, group;
      if (raw) {
        raw.lastIndex = re4.lastIndex;
        result = call$2(patchedExec, raw, str);
        re4.lastIndex = raw.lastIndex;
        return result;
      }
      var groups = state.groups;
      var sticky = UNSUPPORTED_Y && re4.sticky;
      var flags = call$2(regexpFlags, re4);
      var source = re4.source;
      var charsAdded = 0;
      var strCopy = str;
      if (sticky) {
        flags = replace$1(flags, "y", "");
        if (indexOf(flags, "g") === -1) {
          flags += "g";
        }
        strCopy = stringSlice$2(str, re4.lastIndex);
        if (re4.lastIndex > 0 && (!re4.multiline || re4.multiline && charAt$2(str, re4.lastIndex - 1) !== "\n")) {
          source = "(?: " + source + ")";
          strCopy = " " + strCopy;
          charsAdded++;
        }
        reCopy = new RegExp("^(?:" + source + ")", flags);
      }
      if (NPCG_INCLUDED) {
        reCopy = new RegExp("^" + source + "$(?!\\s)", flags);
      }
      if (UPDATES_LAST_INDEX_WRONG) lastIndex = re4.lastIndex;
      match5 = call$2(nativeExec, sticky ? reCopy : re4, strCopy);
      if (sticky) {
        if (match5) {
          match5.input = stringSlice$2(match5.input, charsAdded);
          match5[0] = stringSlice$2(match5[0], charsAdded);
          match5.index = re4.lastIndex;
          re4.lastIndex += match5[0].length;
        } else re4.lastIndex = 0;
      } else if (UPDATES_LAST_INDEX_WRONG && match5) {
        re4.lastIndex = re4.global ? match5.index + match5[0].length : lastIndex;
      }
      if (NPCG_INCLUDED && match5 && match5.length > 1) {
        call$2(nativeReplace, match5[0], reCopy, function() {
          for (i = 1; i < arguments.length - 2; i++) {
            if (arguments[i] === void 0) match5[i] = void 0;
          }
        });
      }
      if (match5 && groups) {
        match5.groups = object = create3(null);
        for (i = 0; i < groups.length; i++) {
          group = groups[i];
          object[group[0]] = match5[group[1]];
        }
      }
      return match5;
    };
  }
  var regexpExec$2 = patchedExec;
  var $$1 = _export;
  var exec = regexpExec$2;
  $$1({ target: "RegExp", proto: true, forced: /./.exec !== exec }, {
    exec
  });
  var uncurryThis$4 = functionUncurryThisClause;
  var defineBuiltIn = defineBuiltIn$9;
  var regexpExec$1 = regexpExec$2;
  var fails$1 = fails$u;
  var wellKnownSymbol$1 = wellKnownSymbol$m;
  var createNonEnumerableProperty = createNonEnumerableProperty$6;
  var SPECIES = wellKnownSymbol$1("species");
  var RegExpPrototype = RegExp.prototype;
  var fixRegexpWellKnownSymbolLogic = function(KEY, exec5, FORCED5, SHAM) {
    var SYMBOL = wellKnownSymbol$1(KEY);
    var DELEGATES_TO_SYMBOL = !fails$1(function() {
      var O = {};
      O[SYMBOL] = function() {
        return 7;
      };
      return ""[KEY](O) !== 7;
    });
    var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails$1(function() {
      var execCalled = false;
      var re4 = /a/;
      if (KEY === "split") {
        re4 = {};
        re4.constructor = {};
        re4.constructor[SPECIES] = function() {
          return re4;
        };
        re4.flags = "";
        re4[SYMBOL] = /./[SYMBOL];
      }
      re4.exec = function() {
        execCalled = true;
        return null;
      };
      re4[SYMBOL]("");
      return !execCalled;
    });
    if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || FORCED5) {
      var uncurriedNativeRegExpMethod = uncurryThis$4(/./[SYMBOL]);
      var methods = exec5(SYMBOL, ""[KEY], function(nativeMethod, regexp, str, arg2, forceStringMethod) {
        var uncurriedNativeMethod = uncurryThis$4(nativeMethod);
        var $exec = regexp.exec;
        if ($exec === regexpExec$1 || $exec === RegExpPrototype.exec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
          }
          return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
        }
        return { done: false };
      });
      defineBuiltIn(String.prototype, KEY, methods[0]);
      defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);
    }
    if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], "sham", true);
  };
  var charAt$1 = stringMultibyte.charAt;
  var advanceStringIndex$1 = function(S, index, unicode) {
    return index + (unicode ? charAt$1(S, index).length : 1);
  };
  var uncurryThis$3 = functionUncurryThis;
  var toObject = toObject$a;
  var floor = Math.floor;
  var charAt = uncurryThis$3("".charAt);
  var replace = uncurryThis$3("".replace);
  var stringSlice$1 = uncurryThis$3("".slice);
  var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
  var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;
  var getSubstitution$1 = function(matched, str, position3, captures, namedCaptures, replacement5) {
    var tailPos = position3 + matched.length;
    var m = captures.length;
    var symbols3 = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== void 0) {
      namedCaptures = toObject(namedCaptures);
      symbols3 = SUBSTITUTION_SYMBOLS;
    }
    return replace(replacement5, symbols3, function(match5, ch) {
      var capture;
      switch (charAt(ch, 0)) {
        case "$":
          return "$";
        case "&":
          return matched;
        case "`":
          return stringSlice$1(str, 0, position3);
        case "'":
          return stringSlice$1(str, tailPos);
        case "<":
          capture = namedCaptures[stringSlice$1(ch, 1, -1)];
          break;
        default:
          var n = +ch;
          if (n === 0) return match5;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match5;
            if (f <= m) return captures[f - 1] === void 0 ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);
            return match5;
          }
          capture = captures[n - 1];
      }
      return capture === void 0 ? "" : capture;
    });
  };
  var call$1 = functionCall;
  var anObject$1 = anObject$f;
  var isCallable$1 = isCallable$o;
  var classof = classofRaw$2;
  var regexpExec = regexpExec$2;
  var $TypeError = TypeError;
  var regexpExecAbstract = function(R, S) {
    var exec5 = R.exec;
    if (isCallable$1(exec5)) {
      var result = call$1(exec5, R, S);
      if (result !== null) anObject$1(result);
      return result;
    }
    if (classof(R) === "RegExp") return call$1(regexpExec, R, S);
    throw new $TypeError("RegExp#exec called on incompatible receiver");
  };
  var apply = functionApply;
  var call = functionCall;
  var uncurryThis$2 = functionUncurryThis;
  var fixRegExpWellKnownSymbolLogic = fixRegexpWellKnownSymbolLogic;
  var fails = fails$u;
  var anObject = anObject$f;
  var isCallable = isCallable$o;
  var isNullOrUndefined = isNullOrUndefined$8;
  var toIntegerOrInfinity = toIntegerOrInfinity$4;
  var toLength = toLength$3;
  var toString$1 = toString$9;
  var requireObjectCoercible$1 = requireObjectCoercible$7;
  var advanceStringIndex = advanceStringIndex$1;
  var getMethod = getMethod$4;
  var getSubstitution = getSubstitution$1;
  var regExpExec$1 = regexpExecAbstract;
  var wellKnownSymbol = wellKnownSymbol$m;
  var REPLACE = wellKnownSymbol("replace");
  var max3 = Math.max;
  var min4 = Math.min;
  var concat2 = uncurryThis$2([].concat);
  var push = uncurryThis$2([].push);
  var stringIndexOf$1 = uncurryThis$2("".indexOf);
  var stringSlice = uncurryThis$2("".slice);
  var maybeToString = function(it) {
    return it === void 0 ? it : String(it);
  };
  var REPLACE_KEEPS_$0 = (function() {
    return "a".replace(/./, "$0") === "$0";
  })();
  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function() {
    if (/./[REPLACE]) {
      return /./[REPLACE]("a", "$0") === "";
    }
    return false;
  })();
  var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function() {
    var re4 = /./;
    re4.exec = function() {
      var result = [];
      result.groups = { a: "7" };
      return result;
    };
    return "".replace(re4, "$<a>") !== "7";
  });
  fixRegExpWellKnownSymbolLogic("replace", function(_, nativeReplace2, maybeCallNative) {
    var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? "$" : "$0";
    return [
      // `String.prototype.replace` method
      // https://tc39.es/ecma262/#sec-string.prototype.replace
      function replace5(searchValue, replaceValue) {
        var O = requireObjectCoercible$1(this);
        var replacer = isNullOrUndefined(searchValue) ? void 0 : getMethod(searchValue, REPLACE);
        return replacer ? call(replacer, searchValue, O, replaceValue) : call(nativeReplace2, toString$1(O), searchValue, replaceValue);
      },
      // `RegExp.prototype[@@replace]` method
      // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
      function(string, replaceValue) {
        var rx = anObject(this);
        var S = toString$1(string);
        if (typeof replaceValue == "string" && stringIndexOf$1(replaceValue, UNSAFE_SUBSTITUTE) === -1 && stringIndexOf$1(replaceValue, "$<") === -1) {
          var res = maybeCallNative(nativeReplace2, rx, S, replaceValue);
          if (res.done) return res.value;
        }
        var functionalReplace = isCallable(replaceValue);
        if (!functionalReplace) replaceValue = toString$1(replaceValue);
        var global2 = rx.global;
        var fullUnicode;
        if (global2) {
          fullUnicode = rx.unicode;
          rx.lastIndex = 0;
        }
        var results = [];
        var result;
        while (true) {
          result = regExpExec$1(rx, S);
          if (result === null) break;
          push(results, result);
          if (!global2) break;
          var matchStr = toString$1(result[0]);
          if (matchStr === "") rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        }
        var accumulatedResult = "";
        var nextSourcePosition = 0;
        for (var i = 0; i < results.length; i++) {
          result = results[i];
          var matched = toString$1(result[0]);
          var position3 = max3(min4(toIntegerOrInfinity(result.index), S.length), 0);
          var captures = [];
          var replacement5;
          for (var j = 1; j < result.length; j++) push(captures, maybeToString(result[j]));
          var namedCaptures = result.groups;
          if (functionalReplace) {
            var replacerArgs = concat2([matched], captures, position3, S);
            if (namedCaptures !== void 0) push(replacerArgs, namedCaptures);
            replacement5 = toString$1(apply(replaceValue, void 0, replacerArgs));
          } else {
            replacement5 = getSubstitution(matched, S, position3, captures, namedCaptures, replaceValue);
          }
          if (position3 >= nextSourcePosition) {
            accumulatedResult += stringSlice(S, nextSourcePosition, position3) + replacement5;
            nextSourcePosition = position3 + matched.length;
          }
        }
        return accumulatedResult + stringSlice(S, nextSourcePosition);
      }
    ];
  }, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);
  var _DataFetcher_instances;
  var _DataFetcher_fetch;
  var DataFetcher = /* @__PURE__ */ (function() {
    function DataFetcher2(calendar2) {
      _classCallCheck(this, DataFetcher2);
      _DataFetcher_instances.add(this);
      this.calendar = calendar2;
    }
    _createClass(DataFetcher2, [{
      key: "getDatas",
      value: function getDatas(source, startTimestamp, endTimestamp) {
        return __awaiter(this, void 0, void 0, /* @__PURE__ */ _regeneratorRuntime().mark(function _callee() {
          var d;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                if (!(typeof source === "string" && source.length > 0)) {
                  _context.next = 2;
                  break;
                }
                return _context.abrupt("return", __classPrivateFieldGet(this, _DataFetcher_instances, "m", _DataFetcher_fetch).call(this, source, startTimestamp, endTimestamp));
              case 2:
                d = [];
                if (Array.isArray(source)) {
                  d = source;
                }
                return _context.abrupt("return", new Promise(function(resolve5) {
                  resolve5(d);
                }));
              case 5:
              case "end":
                return _context.stop();
            }
          }, _callee, this);
        }));
      }
    }, {
      key: "parseURI",
      value: function parseURI(str, startTimestamp, endTimestamp) {
        var _this = this;
        var newUri = str.replace(/\{\{start=(.*?)\}\}/g, function(_, format2) {
          return (
            // eslint-disable-next-line implicit-arrow-linebreak
            _this.calendar.dateHelper.date(startTimestamp).format(format2)
          );
        });
        newUri = newUri.replace(/\{\{end=(.*?)\}\}/g, function(_, format2) {
          return (
            // eslint-disable-next-line implicit-arrow-linebreak
            _this.calendar.dateHelper.date(endTimestamp).format(format2)
          );
        });
        return newUri;
      }
    }]);
    return DataFetcher2;
  })();
  _DataFetcher_instances = /* @__PURE__ */ new WeakSet(), _DataFetcher_fetch = function _DataFetcher_fetch2(source, startTimestamp, endTimestamp) {
    var _this$calendar$option = this.calendar.options.options.data, type2 = _this$calendar$option.type, requestInit = _this$calendar$option.requestInit;
    var url = this.parseURI(source, startTimestamp, endTimestamp);
    switch (type2) {
      case "json":
        return json_default(url, requestInit);
      case "csv":
        return csv2(url, requestInit);
      case "tsv":
        return dsv("	", url, requestInit);
      case "txt":
        return text_default3(url, requestInit);
      default:
        return new Promise(function(resolve5) {
          resolve5([]);
        });
    }
  };
  var DESCRIPTORS = descriptors;
  var FUNCTION_NAME_EXISTS = functionName.EXISTS;
  var uncurryThis$1 = functionUncurryThis;
  var defineBuiltInAccessor = defineBuiltInAccessor$3;
  var FunctionPrototype = Function.prototype;
  var functionToString = uncurryThis$1(FunctionPrototype.toString);
  var nameRE = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;
  var regExpExec = uncurryThis$1(nameRE.exec);
  var NAME = "name";
  if (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {
    defineBuiltInAccessor(FunctionPrototype, NAME, {
      configurable: true,
      get: function() {
        try {
          return regExpExec(nameRE, functionToString(this))[1];
        } catch (error) {
          return "";
        }
      }
    });
  }
  var dayjs_min = { exports: {} };
  (function(module2, exports2) {
    !(function(t, e) {
      module2.exports = e();
    })(commonjsGlobal, (function() {
      var t = 1e3, e = 6e4, n = 36e5, r = "millisecond", i = "second", s2 = "minute", u = "hour", a2 = "day", o = "week", c4 = "month", f = "quarter", h = "year", d = "date", l = "Invalid Date", $5 = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(t4) {
        var e3 = ["th", "st", "nd", "rd"], n2 = t4 % 100;
        return "[" + t4 + (e3[(n2 - 20) % 10] || e3[n2] || e3[0]) + "]";
      } }, m = function(t4, e3, n2) {
        var r2 = String(t4);
        return !r2 || r2.length >= e3 ? t4 : "" + Array(e3 + 1 - r2.length).join(n2) + t4;
      }, v = { s: m, z: function(t4) {
        var e3 = -t4.utcOffset(), n2 = Math.abs(e3), r2 = Math.floor(n2 / 60), i2 = n2 % 60;
        return (e3 <= 0 ? "+" : "-") + m(r2, 2, "0") + ":" + m(i2, 2, "0");
      }, m: function t4(e3, n2) {
        if (e3.date() < n2.date()) return -t4(n2, e3);
        var r2 = 12 * (n2.year() - e3.year()) + (n2.month() - e3.month()), i2 = e3.clone().add(r2, c4), s3 = n2 - i2 < 0, u2 = e3.clone().add(r2 + (s3 ? -1 : 1), c4);
        return +(-(r2 + (n2 - i2) / (s3 ? i2 - u2 : u2 - i2)) || 0);
      }, a: function(t4) {
        return t4 < 0 ? Math.ceil(t4) || 0 : Math.floor(t4);
      }, p: function(t4) {
        return { M: c4, y: h, w: o, d: a2, D: d, h: u, m: s2, s: i, ms: r, Q: f }[t4] || String(t4 || "").toLowerCase().replace(/s$/, "");
      }, u: function(t4) {
        return void 0 === t4;
      } }, g = "en", D2 = {};
      D2[g] = M;
      var p = "$isDayjsObject", S = function(t4) {
        return t4 instanceof _ || !(!t4 || !t4[p]);
      }, w = function t4(e3, n2, r2) {
        var i2;
        if (!e3) return g;
        if ("string" == typeof e3) {
          var s3 = e3.toLowerCase();
          D2[s3] && (i2 = s3), n2 && (D2[s3] = n2, i2 = s3);
          var u2 = e3.split("-");
          if (!i2 && u2.length > 1) return t4(u2[0]);
        } else {
          var a3 = e3.name;
          D2[a3] = e3, i2 = a3;
        }
        return !r2 && i2 && (g = i2), i2 || !r2 && g;
      }, O = function(t4, e3) {
        if (S(t4)) return t4.clone();
        var n2 = "object" == typeof e3 ? e3 : {};
        return n2.date = t4, n2.args = arguments, new _(n2);
      }, b = v;
      b.l = w, b.i = S, b.w = function(t4, e3) {
        return O(t4, { locale: e3.$L, utc: e3.$u, x: e3.$x, $offset: e3.$offset });
      };
      var _ = (function() {
        function M2(t4) {
          this.$L = w(t4.locale, null, true), this.parse(t4), this.$x = this.$x || t4.x || {}, this[p] = true;
        }
        var m2 = M2.prototype;
        return m2.parse = function(t4) {
          this.$d = (function(t5) {
            var e3 = t5.date, n2 = t5.utc;
            if (null === e3) return /* @__PURE__ */ new Date(NaN);
            if (b.u(e3)) return /* @__PURE__ */ new Date();
            if (e3 instanceof Date) return new Date(e3);
            if ("string" == typeof e3 && !/Z$/i.test(e3)) {
              var r2 = e3.match($5);
              if (r2) {
                var i2 = r2[2] - 1 || 0, s3 = (r2[7] || "0").substring(0, 3);
                return n2 ? new Date(Date.UTC(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s3)) : new Date(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s3);
              }
            }
            return new Date(e3);
          })(t4), this.init();
        }, m2.init = function() {
          var t4 = this.$d;
          this.$y = t4.getFullYear(), this.$M = t4.getMonth(), this.$D = t4.getDate(), this.$W = t4.getDay(), this.$H = t4.getHours(), this.$m = t4.getMinutes(), this.$s = t4.getSeconds(), this.$ms = t4.getMilliseconds();
        }, m2.$utils = function() {
          return b;
        }, m2.isValid = function() {
          return !(this.$d.toString() === l);
        }, m2.isSame = function(t4, e3) {
          var n2 = O(t4);
          return this.startOf(e3) <= n2 && n2 <= this.endOf(e3);
        }, m2.isAfter = function(t4, e3) {
          return O(t4) < this.startOf(e3);
        }, m2.isBefore = function(t4, e3) {
          return this.endOf(e3) < O(t4);
        }, m2.$g = function(t4, e3, n2) {
          return b.u(t4) ? this[e3] : this.set(n2, t4);
        }, m2.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, m2.valueOf = function() {
          return this.$d.getTime();
        }, m2.startOf = function(t4, e3) {
          var n2 = this, r2 = !!b.u(e3) || e3, f2 = b.p(t4), l2 = function(t5, e4) {
            var i2 = b.w(n2.$u ? Date.UTC(n2.$y, e4, t5) : new Date(n2.$y, e4, t5), n2);
            return r2 ? i2 : i2.endOf(a2);
          }, $6 = function(t5, e4) {
            return b.w(n2.toDate()[t5].apply(n2.toDate("s"), (r2 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e4)), n2);
          }, y2 = this.$W, M3 = this.$M, m3 = this.$D, v2 = "set" + (this.$u ? "UTC" : "");
          switch (f2) {
            case h:
              return r2 ? l2(1, 0) : l2(31, 11);
            case c4:
              return r2 ? l2(1, M3) : l2(0, M3 + 1);
            case o:
              var g2 = this.$locale().weekStart || 0, D3 = (y2 < g2 ? y2 + 7 : y2) - g2;
              return l2(r2 ? m3 - D3 : m3 + (6 - D3), M3);
            case a2:
            case d:
              return $6(v2 + "Hours", 0);
            case u:
              return $6(v2 + "Minutes", 1);
            case s2:
              return $6(v2 + "Seconds", 2);
            case i:
              return $6(v2 + "Milliseconds", 3);
            default:
              return this.clone();
          }
        }, m2.endOf = function(t4) {
          return this.startOf(t4, false);
        }, m2.$set = function(t4, e3) {
          var n2, o2 = b.p(t4), f2 = "set" + (this.$u ? "UTC" : ""), l2 = (n2 = {}, n2[a2] = f2 + "Date", n2[d] = f2 + "Date", n2[c4] = f2 + "Month", n2[h] = f2 + "FullYear", n2[u] = f2 + "Hours", n2[s2] = f2 + "Minutes", n2[i] = f2 + "Seconds", n2[r] = f2 + "Milliseconds", n2)[o2], $6 = o2 === a2 ? this.$D + (e3 - this.$W) : e3;
          if (o2 === c4 || o2 === h) {
            var y2 = this.clone().set(d, 1);
            y2.$d[l2]($6), y2.init(), this.$d = y2.set(d, Math.min(this.$D, y2.daysInMonth())).$d;
          } else l2 && this.$d[l2]($6);
          return this.init(), this;
        }, m2.set = function(t4, e3) {
          return this.clone().$set(t4, e3);
        }, m2.get = function(t4) {
          return this[b.p(t4)]();
        }, m2.add = function(r2, f2) {
          var d2, l2 = this;
          r2 = Number(r2);
          var $6 = b.p(f2), y2 = function(t4) {
            var e3 = O(l2);
            return b.w(e3.date(e3.date() + Math.round(t4 * r2)), l2);
          };
          if ($6 === c4) return this.set(c4, this.$M + r2);
          if ($6 === h) return this.set(h, this.$y + r2);
          if ($6 === a2) return y2(1);
          if ($6 === o) return y2(7);
          var M3 = (d2 = {}, d2[s2] = e, d2[u] = n, d2[i] = t, d2)[$6] || 1, m3 = this.$d.getTime() + r2 * M3;
          return b.w(m3, this);
        }, m2.subtract = function(t4, e3) {
          return this.add(-1 * t4, e3);
        }, m2.format = function(t4) {
          var e3 = this, n2 = this.$locale();
          if (!this.isValid()) return n2.invalidDate || l;
          var r2 = t4 || "YYYY-MM-DDTHH:mm:ssZ", i2 = b.z(this), s3 = this.$H, u2 = this.$m, a3 = this.$M, o2 = n2.weekdays, c5 = n2.months, f2 = n2.meridiem, h2 = function(t5, n3, i3, s4) {
            return t5 && (t5[n3] || t5(e3, r2)) || i3[n3].slice(0, s4);
          }, d2 = function(t5) {
            return b.s(s3 % 12 || 12, t5, "0");
          }, $6 = f2 || function(t5, e4, n3) {
            var r3 = t5 < 12 ? "AM" : "PM";
            return n3 ? r3.toLowerCase() : r3;
          };
          return r2.replace(y, (function(t5, r3) {
            return r3 || (function(t6) {
              switch (t6) {
                case "YY":
                  return String(e3.$y).slice(-2);
                case "YYYY":
                  return b.s(e3.$y, 4, "0");
                case "M":
                  return a3 + 1;
                case "MM":
                  return b.s(a3 + 1, 2, "0");
                case "MMM":
                  return h2(n2.monthsShort, a3, c5, 3);
                case "MMMM":
                  return h2(c5, a3);
                case "D":
                  return e3.$D;
                case "DD":
                  return b.s(e3.$D, 2, "0");
                case "d":
                  return String(e3.$W);
                case "dd":
                  return h2(n2.weekdaysMin, e3.$W, o2, 2);
                case "ddd":
                  return h2(n2.weekdaysShort, e3.$W, o2, 3);
                case "dddd":
                  return o2[e3.$W];
                case "H":
                  return String(s3);
                case "HH":
                  return b.s(s3, 2, "0");
                case "h":
                  return d2(1);
                case "hh":
                  return d2(2);
                case "a":
                  return $6(s3, u2, true);
                case "A":
                  return $6(s3, u2, false);
                case "m":
                  return String(u2);
                case "mm":
                  return b.s(u2, 2, "0");
                case "s":
                  return String(e3.$s);
                case "ss":
                  return b.s(e3.$s, 2, "0");
                case "SSS":
                  return b.s(e3.$ms, 3, "0");
                case "Z":
                  return i2;
              }
              return null;
            })(t5) || i2.replace(":", "");
          }));
        }, m2.utcOffset = function() {
          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }, m2.diff = function(r2, d2, l2) {
          var $6, y2 = this, M3 = b.p(d2), m3 = O(r2), v2 = (m3.utcOffset() - this.utcOffset()) * e, g2 = this - m3, D3 = function() {
            return b.m(y2, m3);
          };
          switch (M3) {
            case h:
              $6 = D3() / 12;
              break;
            case c4:
              $6 = D3();
              break;
            case f:
              $6 = D3() / 3;
              break;
            case o:
              $6 = (g2 - v2) / 6048e5;
              break;
            case a2:
              $6 = (g2 - v2) / 864e5;
              break;
            case u:
              $6 = g2 / n;
              break;
            case s2:
              $6 = g2 / e;
              break;
            case i:
              $6 = g2 / t;
              break;
            default:
              $6 = g2;
          }
          return l2 ? $6 : b.a($6);
        }, m2.daysInMonth = function() {
          return this.endOf(c4).$D;
        }, m2.$locale = function() {
          return D2[this.$L];
        }, m2.locale = function(t4, e3) {
          if (!t4) return this.$L;
          var n2 = this.clone(), r2 = w(t4, e3, true);
          return r2 && (n2.$L = r2), n2;
        }, m2.clone = function() {
          return b.w(this.$d, this);
        }, m2.toDate = function() {
          return new Date(this.valueOf());
        }, m2.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, m2.toISOString = function() {
          return this.$d.toISOString();
        }, m2.toString = function() {
          return this.$d.toUTCString();
        }, M2;
      })(), k2 = _.prototype;
      return O.prototype = k2, [["$ms", r], ["$s", i], ["$m", s2], ["$H", u], ["$W", a2], ["$M", c4], ["$y", h], ["$D", d]].forEach((function(t4) {
        k2[t4[1]] = function(e3) {
          return this.$g(e3, t4[0], t4[1]);
        };
      })), O.extend = function(t4, e3) {
        return t4.$i || (t4(e3, _, O), t4.$i = true), O;
      }, O.locale = w, O.isDayjs = S, O.unix = function(t4) {
        return O(1e3 * t4);
      }, O.en = D2[g], O.Ls = D2, O.p = {}, O;
    }));
  })(dayjs_min);
  var dayjs_minExports = dayjs_min.exports;
  var dayjs2 = /* @__PURE__ */ getDefaultExportFromCjs(dayjs_minExports);
  var weekOfYear$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(e, t) {
      module2.exports = t();
    })(commonjsGlobal, (function() {
      var e = "week", t = "year";
      return function(i, n, r) {
        var f = n.prototype;
        f.week = function(i2) {
          if (void 0 === i2 && (i2 = null), null !== i2) return this.add(7 * (i2 - this.week()), "day");
          var n2 = this.$locale().yearStart || 1;
          if (11 === this.month() && this.date() > 25) {
            var f2 = r(this).startOf(t).add(1, t).date(n2), s2 = r(this).endOf(e);
            if (f2.isBefore(s2)) return 1;
          }
          var a2 = r(this).startOf(t).date(n2).startOf(e).subtract(1, "millisecond"), o = this.diff(a2, e, true);
          return o < 0 ? r(this).startOf("week").week() : Math.ceil(o);
        }, f.weeks = function(e3) {
          return void 0 === e3 && (e3 = null), this.week(e3);
        };
      };
    }));
  })(weekOfYear$1);
  var weekOfYearExports = weekOfYear$1.exports;
  var weekOfYear = /* @__PURE__ */ getDefaultExportFromCjs(weekOfYearExports);
  var dayOfYear$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(e, t) {
      module2.exports = t();
    })(commonjsGlobal, (function() {
      return function(e, t, n) {
        t.prototype.dayOfYear = function(e3) {
          var t4 = Math.round((n(this).startOf("day") - n(this).startOf("year")) / 864e5) + 1;
          return null == e3 ? t4 : this.add(e3 - t4, "day");
        };
      };
    }));
  })(dayOfYear$1);
  var dayOfYearExports = dayOfYear$1.exports;
  var dayOfYear = /* @__PURE__ */ getDefaultExportFromCjs(dayOfYearExports);
  var weekday$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(e, t) {
      module2.exports = t();
    })(commonjsGlobal, (function() {
      return function(e, t) {
        t.prototype.weekday = function(e3) {
          var t4 = this.$locale().weekStart || 0, i = this.$W, n = (i < t4 ? i + 7 : i) - t4;
          return this.$utils().u(e3) ? n : this.subtract(n, "day").add(e3, "day");
        };
      };
    }));
  })(weekday$1);
  var weekdayExports = weekday$1.exports;
  var weekday = /* @__PURE__ */ getDefaultExportFromCjs(weekdayExports);
  var minMax$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(e, n) {
      module2.exports = n();
    })(commonjsGlobal, (function() {
      return function(e, n, t) {
        var i = function(e3, n2) {
          if (!n2 || !n2.length || 1 === n2.length && !n2[0] || 1 === n2.length && Array.isArray(n2[0]) && !n2[0].length) return null;
          var t4;
          1 === n2.length && n2[0].length > 0 && (n2 = n2[0]);
          t4 = (n2 = n2.filter((function(e4) {
            return e4;
          })))[0];
          for (var i2 = 1; i2 < n2.length; i2 += 1) n2[i2].isValid() && !n2[i2][e3](t4) || (t4 = n2[i2]);
          return t4;
        };
        t.max = function() {
          var e3 = [].slice.call(arguments, 0);
          return i("isAfter", e3);
        }, t.min = function() {
          var e3 = [].slice.call(arguments, 0);
          return i("isBefore", e3);
        };
      };
    }));
  })(minMax$1);
  var minMaxExports = minMax$1.exports;
  var minMax = /* @__PURE__ */ getDefaultExportFromCjs(minMaxExports);
  var isoWeeksInYear$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(e, n) {
      module2.exports = n();
    })(commonjsGlobal, (function() {
      return function(e, n) {
        n.prototype.isoWeeksInYear = function() {
          var e3 = this.isLeapYear(), n2 = this.endOf("y").day();
          return 4 === n2 || e3 && 5 === n2 ? 53 : 52;
        };
      };
    }));
  })(isoWeeksInYear$1);
  var isoWeeksInYearExports = isoWeeksInYear$1.exports;
  var isoWeeksInYear = /* @__PURE__ */ getDefaultExportFromCjs(isoWeeksInYearExports);
  var isoWeek$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(e, t) {
      module2.exports = t();
    })(commonjsGlobal, (function() {
      var e = "day";
      return function(t, i, s2) {
        var a2 = function(t4) {
          return t4.add(4 - t4.isoWeekday(), e);
        }, d = i.prototype;
        d.isoWeekYear = function() {
          return a2(this).year();
        }, d.isoWeek = function(t4) {
          if (!this.$utils().u(t4)) return this.add(7 * (t4 - this.isoWeek()), e);
          var i2, d2, n2, o, r = a2(this), u = (i2 = this.isoWeekYear(), d2 = this.$u, n2 = (d2 ? s2.utc : s2)().year(i2).startOf("year"), o = 4 - n2.isoWeekday(), n2.isoWeekday() > 4 && (o += 7), n2.add(o, e));
          return r.diff(u, "week") + 1;
        }, d.isoWeekday = function(e3) {
          return this.$utils().u(e3) ? this.day() || 7 : this.day(this.day() % 7 ? e3 : e3 - 7);
        };
        var n = d.startOf;
        d.startOf = function(e3, t4) {
          var i2 = this.$utils(), s3 = !!i2.u(t4) || t4;
          return "isoweek" === i2.p(e3) ? s3 ? this.date(this.date() - (this.isoWeekday() - 1)).startOf("day") : this.date(this.date() - 1 - (this.isoWeekday() - 1) + 7).endOf("day") : n.bind(this)(e3, t4);
        };
      };
    }));
  })(isoWeek$1);
  var isoWeekExports = isoWeek$1.exports;
  var isoWeek = /* @__PURE__ */ getDefaultExportFromCjs(isoWeekExports);
  var isLeapYear$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(e, t) {
      module2.exports = t();
    })(commonjsGlobal, (function() {
      return function(e, t) {
        t.prototype.isLeapYear = function() {
          return this.$y % 4 == 0 && this.$y % 100 != 0 || this.$y % 400 == 0;
        };
      };
    }));
  })(isLeapYear$1);
  var isLeapYearExports = isLeapYear$1.exports;
  var isLeapYear = /* @__PURE__ */ getDefaultExportFromCjs(isLeapYearExports);
  var advancedFormat$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(e, t) {
      module2.exports = t();
    })(commonjsGlobal, (function() {
      return function(e, t) {
        var r = t.prototype, n = r.format;
        r.format = function(e3) {
          var t4 = this, r2 = this.$locale();
          if (!this.isValid()) return n.bind(this)(e3);
          var s2 = this.$utils(), a2 = (e3 || "YYYY-MM-DDTHH:mm:ssZ").replace(/\[([^\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g, (function(e4) {
            switch (e4) {
              case "Q":
                return Math.ceil((t4.$M + 1) / 3);
              case "Do":
                return r2.ordinal(t4.$D);
              case "gggg":
                return t4.weekYear();
              case "GGGG":
                return t4.isoWeekYear();
              case "wo":
                return r2.ordinal(t4.week(), "W");
              case "w":
              case "ww":
                return s2.s(t4.week(), "w" === e4 ? 1 : 2, "0");
              case "W":
              case "WW":
                return s2.s(t4.isoWeek(), "W" === e4 ? 1 : 2, "0");
              case "k":
              case "kk":
                return s2.s(String(0 === t4.$H ? 24 : t4.$H), "k" === e4 ? 1 : 2, "0");
              case "X":
                return Math.floor(t4.$d.getTime() / 1e3);
              case "x":
                return t4.$d.getTime();
              case "z":
                return "[" + t4.offsetName() + "]";
              case "zzz":
                return "[" + t4.offsetName("long") + "]";
              default:
                return e4;
            }
          }));
          return n.bind(this)(a2);
        };
      };
    }));
  })(advancedFormat$1);
  var advancedFormatExports = advancedFormat$1.exports;
  var advancedFormat = /* @__PURE__ */ getDefaultExportFromCjs(advancedFormatExports);
  var utc$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(t, i) {
      module2.exports = i();
    })(commonjsGlobal, (function() {
      var t = "minute", i = /[+-]\d\d(?::?\d\d)?/g, e = /([+-]|\d\d)/g;
      return function(s2, f, n) {
        var u = f.prototype;
        n.utc = function(t4) {
          var i2 = { date: t4, utc: true, args: arguments };
          return new f(i2);
        }, u.utc = function(i2) {
          var e3 = n(this.toDate(), { locale: this.$L, utc: true });
          return i2 ? e3.add(this.utcOffset(), t) : e3;
        }, u.local = function() {
          return n(this.toDate(), { locale: this.$L, utc: false });
        };
        var o = u.parse;
        u.parse = function(t4) {
          t4.utc && (this.$u = true), this.$utils().u(t4.$offset) || (this.$offset = t4.$offset), o.call(this, t4);
        };
        var r = u.init;
        u.init = function() {
          if (this.$u) {
            var t4 = this.$d;
            this.$y = t4.getUTCFullYear(), this.$M = t4.getUTCMonth(), this.$D = t4.getUTCDate(), this.$W = t4.getUTCDay(), this.$H = t4.getUTCHours(), this.$m = t4.getUTCMinutes(), this.$s = t4.getUTCSeconds(), this.$ms = t4.getUTCMilliseconds();
          } else r.call(this);
        };
        var a2 = u.utcOffset;
        u.utcOffset = function(s3, f2) {
          var n2 = this.$utils().u;
          if (n2(s3)) return this.$u ? 0 : n2(this.$offset) ? a2.call(this) : this.$offset;
          if ("string" == typeof s3 && (s3 = (function(t4) {
            void 0 === t4 && (t4 = "");
            var s4 = t4.match(i);
            if (!s4) return null;
            var f3 = ("" + s4[0]).match(e) || ["-", 0, 0], n3 = f3[0], u3 = 60 * +f3[1] + +f3[2];
            return 0 === u3 ? 0 : "+" === n3 ? u3 : -u3;
          })(s3), null === s3)) return this;
          var u2 = Math.abs(s3) <= 16 ? 60 * s3 : s3, o2 = this;
          if (f2) return o2.$offset = u2, o2.$u = 0 === s3, o2;
          if (0 !== s3) {
            var r2 = this.$u ? this.toDate().getTimezoneOffset() : -1 * this.utcOffset();
            (o2 = this.local().add(u2 + r2, t)).$offset = u2, o2.$x.$localOffset = r2;
          } else o2 = this.utc();
          return o2;
        };
        var h = u.format;
        u.format = function(t4) {
          var i2 = t4 || (this.$u ? "YYYY-MM-DDTHH:mm:ss[Z]" : "");
          return h.call(this, i2);
        }, u.valueOf = function() {
          var t4 = this.$utils().u(this.$offset) ? 0 : this.$offset + (this.$x.$localOffset || this.$d.getTimezoneOffset());
          return this.$d.valueOf() - 6e4 * t4;
        }, u.isUTC = function() {
          return !!this.$u;
        }, u.toISOString = function() {
          return this.toDate().toISOString();
        }, u.toString = function() {
          return this.toDate().toUTCString();
        };
        var l = u.toDate;
        u.toDate = function(t4) {
          return "s" === t4 && this.$offset ? n(this.format("YYYY-MM-DD HH:mm:ss:SSS")).toDate() : l.call(this);
        };
        var c4 = u.diff;
        u.diff = function(t4, i2, e3) {
          if (t4 && this.$u === t4.$u) return c4.call(this, t4, i2, e3);
          var s3 = this.local(), f2 = n(t4).local();
          return c4.call(s3, f2, i2, e3);
        };
      };
    }));
  })(utc$1);
  var utcExports = utc$1.exports;
  var utc = /* @__PURE__ */ getDefaultExportFromCjs(utcExports);
  var timezone$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(t, e) {
      module2.exports = e();
    })(commonjsGlobal, (function() {
      var t = { year: 0, month: 1, day: 2, hour: 3, minute: 4, second: 5 }, e = {};
      return function(n, i, o) {
        var r, a2 = function(t4, n2, i2) {
          void 0 === i2 && (i2 = {});
          var o2 = new Date(t4), r2 = (function(t5, n3) {
            void 0 === n3 && (n3 = {});
            var i3 = n3.timeZoneName || "short", o3 = t5 + "|" + i3, r3 = e[o3];
            return r3 || (r3 = new Intl.DateTimeFormat("en-US", { hour12: false, timeZone: t5, year: "numeric", month: "2-digit", day: "2-digit", hour: "2-digit", minute: "2-digit", second: "2-digit", timeZoneName: i3 }), e[o3] = r3), r3;
          })(n2, i2);
          return r2.formatToParts(o2);
        }, u = function(e3, n2) {
          for (var i2 = a2(e3, n2), r2 = [], u2 = 0; u2 < i2.length; u2 += 1) {
            var f2 = i2[u2], s3 = f2.type, m = f2.value, c4 = t[s3];
            c4 >= 0 && (r2[c4] = parseInt(m, 10));
          }
          var d = r2[3], l = 24 === d ? 0 : d, h = r2[0] + "-" + r2[1] + "-" + r2[2] + " " + l + ":" + r2[4] + ":" + r2[5] + ":000", v = +e3;
          return (o.utc(h).valueOf() - (v -= v % 1e3)) / 6e4;
        }, f = i.prototype;
        f.tz = function(t4, e3) {
          void 0 === t4 && (t4 = r);
          var n2 = this.utcOffset(), i2 = this.toDate(), a3 = i2.toLocaleString("en-US", { timeZone: t4 }), u2 = Math.round((i2 - new Date(a3)) / 1e3 / 60), f2 = o(a3, { locale: this.$L }).$set("millisecond", this.$ms).utcOffset(15 * -Math.round(i2.getTimezoneOffset() / 15) - u2, true);
          if (e3) {
            var s3 = f2.utcOffset();
            f2 = f2.add(n2 - s3, "minute");
          }
          return f2.$x.$timezone = t4, f2;
        }, f.offsetName = function(t4) {
          var e3 = this.$x.$timezone || o.tz.guess(), n2 = a2(this.valueOf(), e3, { timeZoneName: t4 }).find((function(t5) {
            return "timezonename" === t5.type.toLowerCase();
          }));
          return n2 && n2.value;
        };
        var s2 = f.startOf;
        f.startOf = function(t4, e3) {
          if (!this.$x || !this.$x.$timezone) return s2.call(this, t4, e3);
          var n2 = o(this.format("YYYY-MM-DD HH:mm:ss:SSS"), { locale: this.$L });
          return s2.call(n2, t4, e3).tz(this.$x.$timezone, true);
        }, o.tz = function(t4, e3, n2) {
          var i2 = n2 && e3, a3 = n2 || e3 || r, f2 = u(+o(), a3);
          if ("string" != typeof t4) return o(t4).tz(a3);
          var s3 = (function(t5, e4, n3) {
            var i3 = t5 - 60 * e4 * 1e3, o2 = u(i3, n3);
            if (e4 === o2) return [i3, e4];
            var r2 = u(i3 -= 60 * (o2 - e4) * 1e3, n3);
            return o2 === r2 ? [i3, o2] : [t5 - 60 * Math.min(o2, r2) * 1e3, Math.max(o2, r2)];
          })(o.utc(t4, i2).valueOf(), f2, a3), m = s3[0], c4 = s3[1], d = o(m).utcOffset(c4);
          return d.$x.$timezone = a3, d;
        }, o.tz.guess = function() {
          return Intl.DateTimeFormat().resolvedOptions().timeZone;
        }, o.tz.setDefault = function(t4) {
          r = t4;
        };
      };
    }));
  })(timezone$1);
  var timezoneExports = timezone$1.exports;
  var timezone = /* @__PURE__ */ getDefaultExportFromCjs(timezoneExports);
  var localeData$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(n, e) {
      module2.exports = e();
    })(commonjsGlobal, (function() {
      return function(n, e, t) {
        var r = e.prototype, o = function(n2) {
          return n2 && (n2.indexOf ? n2 : n2.s);
        }, u = function(n2, e3, t4, r2, u2) {
          var i2 = n2.name ? n2 : n2.$locale(), a3 = o(i2[e3]), s3 = o(i2[t4]), f = a3 || s3.map((function(n3) {
            return n3.slice(0, r2);
          }));
          if (!u2) return f;
          var d = i2.weekStart;
          return f.map((function(n3, e4) {
            return f[(e4 + (d || 0)) % 7];
          }));
        }, i = function() {
          return t.Ls[t.locale()];
        }, a2 = function(n2, e3) {
          return n2.formats[e3] || (function(n3) {
            return n3.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, (function(n4, e4, t4) {
              return e4 || t4.slice(1);
            }));
          })(n2.formats[e3.toUpperCase()]);
        }, s2 = function() {
          var n2 = this;
          return { months: function(e3) {
            return e3 ? e3.format("MMMM") : u(n2, "months");
          }, monthsShort: function(e3) {
            return e3 ? e3.format("MMM") : u(n2, "monthsShort", "months", 3);
          }, firstDayOfWeek: function() {
            return n2.$locale().weekStart || 0;
          }, weekdays: function(e3) {
            return e3 ? e3.format("dddd") : u(n2, "weekdays");
          }, weekdaysMin: function(e3) {
            return e3 ? e3.format("dd") : u(n2, "weekdaysMin", "weekdays", 2);
          }, weekdaysShort: function(e3) {
            return e3 ? e3.format("ddd") : u(n2, "weekdaysShort", "weekdays", 3);
          }, longDateFormat: function(e3) {
            return a2(n2.$locale(), e3);
          }, meridiem: this.$locale().meridiem, ordinal: this.$locale().ordinal };
        };
        r.localeData = function() {
          return s2.bind(this)();
        }, t.localeData = function() {
          var n2 = i();
          return { firstDayOfWeek: function() {
            return n2.weekStart || 0;
          }, weekdays: function() {
            return t.weekdays();
          }, weekdaysShort: function() {
            return t.weekdaysShort();
          }, weekdaysMin: function() {
            return t.weekdaysMin();
          }, months: function() {
            return t.months();
          }, monthsShort: function() {
            return t.monthsShort();
          }, longDateFormat: function(e3) {
            return a2(n2, e3);
          }, meridiem: n2.meridiem, ordinal: n2.ordinal };
        }, t.months = function() {
          return u(i(), "months");
        }, t.monthsShort = function() {
          return u(i(), "monthsShort", "months", 3);
        }, t.weekdays = function(n2) {
          return u(i(), "weekdays", null, null, n2);
        }, t.weekdaysShort = function(n2) {
          return u(i(), "weekdaysShort", "weekdays", 3, n2);
        }, t.weekdaysMin = function(n2) {
          return u(i(), "weekdaysMin", "weekdays", 2, n2);
        };
      };
    }));
  })(localeData$1);
  var localeDataExports = localeData$1.exports;
  var localeData = /* @__PURE__ */ getDefaultExportFromCjs(localeDataExports);
  var localizedFormat$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(e, t) {
      module2.exports = t();
    })(commonjsGlobal, (function() {
      var e = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" };
      return function(t, o, n) {
        var r = o.prototype, i = r.format;
        n.en.formats = e, r.format = function(t4) {
          void 0 === t4 && (t4 = "YYYY-MM-DDTHH:mm:ssZ");
          var o2 = this.$locale().formats, n2 = (function(t5, o3) {
            return t5.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, (function(t6, n3, r2) {
              var i2 = r2 && r2.toUpperCase();
              return n3 || o3[r2] || e[r2] || o3[i2].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, (function(e3, t7, o4) {
                return t7 || o4.slice(1);
              }));
            }));
          })(t4, void 0 === o2 ? {} : o2);
          return i.call(this, n2);
        };
      };
    }));
  })(localizedFormat$1);
  var localizedFormatExports = localizedFormat$1.exports;
  var localizedFormat = /* @__PURE__ */ getDefaultExportFromCjs(localizedFormatExports);
  var updateLocale$1 = { exports: {} };
  (function(module2, exports2) {
    !(function(e, n) {
      module2.exports = n();
    })(commonjsGlobal, (function() {
      return function(e, n, t) {
        t.updateLocale = function(e3, n2) {
          var o = t.Ls[e3];
          if (o) return (n2 ? Object.keys(n2) : []).forEach((function(e4) {
            o[e4] = n2[e4];
          })), o;
        };
      };
    }));
  })(updateLocale$1);
  var updateLocaleExports = updateLocale$1.exports;
  var updateLocale = /* @__PURE__ */ getDefaultExportFromCjs(updateLocaleExports);
  dayjs2.extend(weekOfYear);
  dayjs2.extend(isoWeeksInYear);
  dayjs2.extend(isoWeek);
  dayjs2.extend(isLeapYear);
  dayjs2.extend(dayOfYear);
  dayjs2.extend(weekday);
  dayjs2.extend(minMax);
  dayjs2.extend(advancedFormat);
  dayjs2.extend(utc);
  dayjs2.extend(timezone);
  dayjs2.extend(localeData);
  dayjs2.extend(localizedFormat);
  dayjs2.extend(updateLocale);
  var DEFAULT_LOCALE = "en";
  var DateHelper = /* @__PURE__ */ (function() {
    function DateHelper2() {
      _classCallCheck(this, DateHelper2);
      var _a;
      this.locale = DEFAULT_LOCALE;
      this.timezone = dayjs2.tz.guess();
      if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object") {
        (_a = window).dayjs || (_a.dayjs = dayjs2);
      }
    }
    _createClass(DateHelper2, [{
      key: "setup",
      value: function setup(_ref) {
        var options = _ref.options;
        return __awaiter(this, void 0, void 0, /* @__PURE__ */ _regeneratorRuntime().mark(function _callee() {
          var userLocale, locale3;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                this.timezone = options.date.timezone || dayjs2.tz.guess();
                userLocale = options.date.locale;
                if (!(typeof userLocale === "string" && userLocale !== DEFAULT_LOCALE)) {
                  _context.next = 17;
                  break;
                }
                if (!((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object")) {
                  _context.next = 12;
                  break;
                }
                _context.t0 = window["dayjs_locale_".concat(userLocale)];
                if (_context.t0) {
                  _context.next = 9;
                  break;
                }
                _context.next = 8;
                return this.loadBrowserLocale(userLocale);
              case 8:
                _context.t0 = _context.sent;
              case 9:
                locale3 = _context.t0;
                _context.next = 15;
                break;
              case 12:
                _context.next = 14;
                return this.loadNodeLocale(userLocale);
              case 14:
                locale3 = _context.sent;
              case 15:
                dayjs2.locale(userLocale);
                this.locale = locale3;
              case 17:
                if (_typeof(userLocale) === "object") {
                  if (userLocale.hasOwnProperty("name")) {
                    dayjs2.locale(userLocale.name, userLocale);
                    this.locale = userLocale;
                  } else {
                    this.locale = dayjs2.updateLocale(DEFAULT_LOCALE, userLocale);
                  }
                }
              case 18:
              case "end":
                return _context.stop();
            }
          }, _callee, this);
        }));
      }
      // eslint-disable-next-line class-methods-use-this
    }, {
      key: "extend",
      value: function extend2(dayjsPlugin) {
        return dayjs2.extend(dayjsPlugin);
      }
      /**
       * Return the week number, relative to its month
       *
       * @param  {number|Date} d Date or timestamp in milliseconds
       * @returns {number} The week number, relative to the month [0-5]
       */
    }, {
      key: "getMonthWeekNumber",
      value: function getMonthWeekNumber(d) {
        var dayjsDate = this.date(d);
        var date2 = dayjsDate.startOf("day");
        var endOfWeek = dayjsDate.startOf("month").endOf("week");
        if (date2 <= endOfWeek) {
          return 1;
        }
        return Math.ceil(date2.diff(endOfWeek, "weeks", true)) + 1;
      }
      /**
       * Return the number of weeks in the given month
       *
       * As there is no fixed standard to specify which month a partial week should
       * belongs to, the ISO week date standard is used, where:
       * - the first week of the month should have at least 4 days
       *
       *  @see https://en.wikipedia.org/wiki/ISO_week_date
       *
       * @param  {Timestamp | dayjs.Dayjs} d Datejs object or timestamp
       * @return {number}         The number of weeks
       */
    }, {
      key: "getWeeksCountInMonth",
      value: function getWeeksCountInMonth(d) {
        var pivotDate = this.date(d);
        return this.getLastWeekOfMonth(pivotDate).diff(this.getFirstWeekOfMonth(pivotDate), "week") + 1;
      }
      /**
       * Return the start of the first week of the month
       *
       * @see getWeeksCountInMonth() about standard warning
       * @return {dayjs.Dayjs} A dayjs object representing the start of the
       * first week
       */
    }, {
      key: "getFirstWeekOfMonth",
      value: function getFirstWeekOfMonth(d) {
        var startOfMonth = this.date(d).startOf("month");
        var startOfFirstWeek = startOfMonth.startOf("week");
        if (startOfMonth.weekday() > 4) {
          startOfFirstWeek = startOfFirstWeek.add(1, "week");
        }
        return startOfFirstWeek;
      }
      /**
       * Return the end of the last week of the month
       *
       * @see getWeeksCountInMonth() about standard warning
       * @return {dayjs.Dayjs} A dayjs object representing the end of the last week
       */
    }, {
      key: "getLastWeekOfMonth",
      value: function getLastWeekOfMonth(d) {
        var endOfMonth = this.date(d).endOf("month");
        var endOfLastWeek = endOfMonth.endOf("week");
        if (endOfMonth.weekday() < 4) {
          endOfLastWeek = endOfLastWeek.subtract(1, "week");
        }
        return endOfLastWeek;
      }
    }, {
      key: "date",
      value: function date2() {
        var d = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : /* @__PURE__ */ new Date();
        if (dayjs2.isDayjs(d)) {
          return d;
        }
        return dayjs2(d).tz(this.timezone).utcOffset(0).locale(this.locale);
      }
    }, {
      key: "format",
      value: function format2(timestamp, formatter) {
        if (typeof formatter === "function") {
          for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
            args[_key - 2] = arguments[_key];
          }
          return formatter.apply(void 0, [timestamp].concat(args));
        }
        if (typeof formatter === "string") {
          return this.date(timestamp).format(formatter);
        }
        return null;
      }
      /**
       * Return an array of time interval
       *
       * @param  {number|Date} date A random date included in the wanted interval
       * @param  {number|Date} range Length of the wanted interval, or a stop date.
       * @param  {boolean} range Whether the end date should be excluded
       *                         from the result
       * @returns {Array<number>} Array of unix timestamp, in milliseconds
       */
    }, {
      key: "intervals",
      value: function intervals(interval2, date2, range3) {
        var excludeEnd = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;
        var start3 = this.date(date2);
        var end2;
        if (typeof range3 === "number") {
          end2 = start3.add(range3, interval2);
        } else if (dayjs2.isDayjs(range3)) {
          end2 = range3;
        } else {
          end2 = this.date(range3);
        }
        start3 = start3.startOf(interval2);
        end2 = end2.startOf(interval2);
        var pivot = dayjs2.min(start3, end2);
        end2 = dayjs2.max(start3, end2);
        var result = [];
        if (!excludeEnd) {
          end2 = end2.add(1, "second");
        }
        do {
          result.push(+pivot);
          pivot = pivot.add(1, interval2);
        } while (pivot < end2);
        return result;
      }
      // this function will work cross-browser for loading scripts asynchronously
      // eslint-disable-next-line class-methods-use-this
    }, {
      key: "loadBrowserLocale",
      value: function loadBrowserLocale(userLocale) {
        return new Promise(function(resolve5, reject5) {
          var s2 = document.createElement("script");
          s2.type = "text/javascript";
          s2.async = true;
          s2.src = "https://cdn.jsdelivr.net/npm/dayjs@1/locale/".concat(userLocale, ".js");
          s2.onerror = function(err) {
            reject5(err);
          };
          s2.onload = function() {
            resolve5(window["dayjs_locale_".concat(userLocale)]);
          };
          document.head.appendChild(s2);
        });
      }
      // eslint-disable-next-line class-methods-use-this
    }, {
      key: "loadNodeLocale",
      value: function loadNodeLocale(userLocale) {
        return import("dayjs/locale/".concat(userLocale, ".js"));
      }
    }]);
    return DateHelper2;
  })();
  var $ = _export;
  var uncurryThis = functionUncurryThis;
  var notARegExp = notARegexp;
  var requireObjectCoercible = requireObjectCoercible$7;
  var toString3 = toString$9;
  var correctIsRegExpLogic = correctIsRegexpLogic;
  var stringIndexOf = uncurryThis("".indexOf);
  $({ target: "String", proto: true, forced: !correctIsRegExpLogic("includes") }, {
    includes: function includes2(searchString) {
      return !!~stringIndexOf(
        toString3(requireObjectCoercible(this)),
        toString3(notARegExp(searchString)),
        arguments.length > 1 ? arguments[1] : void 0
      );
    }
  });
  var ALLOWED_DATA_TYPES = ["json", "csv", "tsv", "txt"];
  function validate(templateCollection, _ref) {
    var domain = _ref.domain, subDomain = _ref.subDomain, data6 = _ref.data;
    var domainType = domain.type;
    var subDomainType = subDomain.type;
    if (!templateCollection.has(domainType)) {
      throw new Error("'".concat(domainType, "' is not a valid domain type'"));
    }
    if (!templateCollection.has(subDomainType)) {
      throw new Error("'".concat(subDomainType, "' is not a valid subDomain type'"));
    }
    if (data6.type && !ALLOWED_DATA_TYPES.includes(data6.type)) {
      throw new Error("The data type '".concat(data6.type, "' is not valid data type"));
    }
    if (!(templateCollection.get(subDomainType).allowedDomainType || []).includes(domainType)) {
      throw new Error("The subDomain.type '".concat(subDomainType, "' can not be used together ") + "with the domain type ".concat(domainType));
    }
    return true;
  }
  var collection = collection$3;
  var collectionStrong = collectionStrong$2;
  collection("Set", function(init2) {
    return function Set2() {
      return init2(this, arguments.length ? arguments[0] : void 0);
    };
  }, collectionStrong);
  function createPlugin(Creator, calendar2) {
    return new Creator(calendar2);
  }
  function extractPluginName(PluginClass, options) {
    return "".concat(new PluginClass().name).concat((options === null || options === void 0 ? void 0 : options.key) || "");
  }
  var PluginManager = /* @__PURE__ */ (function() {
    function PluginManager2(calendar2) {
      _classCallCheck(this, PluginManager2);
      this.calendar = calendar2;
      this.settings = /* @__PURE__ */ new Map();
      this.plugins = /* @__PURE__ */ new Map();
      this.pendingPaint = /* @__PURE__ */ new Set();
    }
    _createClass(PluginManager2, [{
      key: "add",
      value: function add(plugins) {
        var _this = this;
        plugins.forEach(function(_ref) {
          var _ref2 = _slicedToArray(_ref, 2), PluginClass = _ref2[0], pluginOptions = _ref2[1];
          var name = extractPluginName(PluginClass, pluginOptions);
          var existingPlugin = _this.plugins.get(name);
          if (existingPlugin && _this.settings.get(name) && isEqual(_this.settings.get(name).options, pluginOptions)) {
            return;
          }
          _this.settings.set(name, {
            options: pluginOptions,
            dirty: true
          });
          if (!_this.plugins.has(name)) {
            _this.plugins.set(name, createPlugin(PluginClass, _this.calendar));
          }
          _this.pendingPaint.add(_this.plugins.get(name));
        });
      }
    }, {
      key: "setupAll",
      value: function setupAll() {
        var _this2 = this;
        this.plugins.forEach(function(pluginInstance, name) {
          var settings = _this2.settings.get(name);
          if (typeof settings !== "undefined") {
            if (settings.dirty) {
              pluginInstance.setup(settings.options);
              settings.dirty = false;
              _this2.settings.set(name, settings);
            }
          }
        });
      }
    }, {
      key: "paintAll",
      value: function paintAll() {
        return Array.from(this.pendingPaint.values()).map(function(p) {
          return p.paint();
        });
      }
    }, {
      key: "destroyAll",
      value: function destroyAll() {
        return this.allPlugins().map(function(p) {
          return p.destroy();
        });
      }
    }, {
      key: "getFromPosition",
      value: function getFromPosition(position3) {
        return this.allPlugins().filter(function(plugin) {
          var _a;
          return ((_a = plugin.options) === null || _a === void 0 ? void 0 : _a.position) === position3;
        });
      }
    }, {
      key: "getHeightFromPosition",
      value: function getHeightFromPosition(position3) {
        return this.getFromPosition(position3).map(function(d) {
          return d.options.dimensions.height;
        }).reduce(function(a2, b) {
          return a2 + b;
        }, 0);
      }
    }, {
      key: "getWidthFromPosition",
      value: function getWidthFromPosition(position3) {
        return this.getFromPosition(position3).map(function(d) {
          return d.options.dimensions.width;
        }).reduce(function(a2, b) {
          return a2 + b;
        }, 0);
      }
    }, {
      key: "allPlugins",
      value: function allPlugins() {
        return Array.from(this.plugins.values());
      }
    }]);
    return PluginManager2;
  })();
  var VERSION = "4.2.4";
  var minuteTemplate = function minuteTemplate2(DateHelper2) {
    var COLUMNS_COUNT = 10;
    var ROWS_COUNT = 6;
    var ALLOWED_DOMAIN_TYPE = ["day", "hour"];
    return {
      name: "minute",
      allowedDomainType: ALLOWED_DOMAIN_TYPE,
      rowsCount: function rowsCount() {
        return COLUMNS_COUNT;
      },
      columnsCount: function columnsCount() {
        return ROWS_COUNT;
      },
      mapping: function mapping(startTimestamp, endTimestamp) {
        return (
          // eslint-disable-next-line implicit-arrow-linebreak
          DateHelper2.intervals("minute", startTimestamp, DateHelper2.date(endTimestamp)).map(function(ts, index) {
            return {
              t: ts,
              x: Math.floor(index / COLUMNS_COUNT),
              y: index % COLUMNS_COUNT
            };
          })
        );
      },
      extractUnit: function extractUnit(ts) {
        return DateHelper2.date(ts).startOf("minute").valueOf();
      }
    };
  };
  var hourTemplate = function hourTemplate2(DateHelper2, _ref) {
    var domain = _ref.domain;
    var TOTAL_ITEMS = 24;
    var ROWS_COUNT = 6;
    var ALLOWED_DOMAIN_TYPE = ["month", "week", "day"];
    return {
      name: "hour",
      allowedDomainType: ALLOWED_DOMAIN_TYPE,
      rowsCount: function rowsCount() {
        return ROWS_COUNT;
      },
      columnsCount: function columnsCount(ts) {
        switch (domain.type) {
          case "week":
            return TOTAL_ITEMS / ROWS_COUNT * 7;
          case "month":
            return TOTAL_ITEMS / ROWS_COUNT * (domain.dynamicDimension ? DateHelper2.date(ts).daysInMonth() : 31);
          case "day":
          default:
            return TOTAL_ITEMS / ROWS_COUNT;
        }
      },
      mapping: function mapping(startTimestamp, endTimestamp) {
        return (
          // eslint-disable-next-line implicit-arrow-linebreak
          DateHelper2.intervals("hour", startTimestamp, DateHelper2.date(endTimestamp)).map(function(ts) {
            var date2 = DateHelper2.date(ts);
            var hour = date2.hour();
            var monthDate = date2.date();
            var baseX = Math.floor(hour / ROWS_COUNT);
            var columnOffset = TOTAL_ITEMS / ROWS_COUNT;
            if (domain.type === "month") {
              baseX += (monthDate - 1) * columnOffset;
            }
            if (domain.type === "week") {
              baseX += +date2.format("d") * columnOffset;
            }
            return {
              t: ts,
              x: baseX,
              y: Math.floor(hour % ROWS_COUNT)
            };
          })
        );
      },
      extractUnit: function extractUnit(ts) {
        return DateHelper2.date(ts).startOf("hour").valueOf();
      }
    };
  };
  var dayTemplate$2 = function dayTemplate(DateHelper2, _ref) {
    var domain = _ref.domain, verticalOrientation = _ref.verticalOrientation;
    var ROWS_COUNT = 7;
    var ALLOWED_DOMAIN_TYPE = ["year", "month", "week"];
    return {
      name: "day",
      allowedDomainType: ALLOWED_DOMAIN_TYPE,
      rowsCount: function rowsCount() {
        return domain.type === "week" ? 1 : ROWS_COUNT;
      },
      columnsCount: function columnsCount(ts) {
        switch (domain.type) {
          case "month":
            return Math.ceil(domain.dynamicDimension && !verticalOrientation ? DateHelper2.getMonthWeekNumber(DateHelper2.date(ts).endOf("month")) : 6);
          case "year":
            return Math.ceil(domain.dynamicDimension ? DateHelper2.date(ts).endOf("year").dayOfYear() / ROWS_COUNT : 54);
          case "week":
          default:
            return ROWS_COUNT;
        }
      },
      mapping: function mapping(startTimestamp, endTimestamp) {
        var weekNumber = 0;
        var x = -1;
        return DateHelper2.intervals("day", startTimestamp, DateHelper2.date(endTimestamp)).map(function(ts) {
          var date2 = DateHelper2.date(ts);
          switch (domain.type) {
            case "month":
              x = DateHelper2.getMonthWeekNumber(ts) - 1;
              break;
            case "year":
              if (weekNumber !== date2.week()) {
                weekNumber = date2.week();
                x += 1;
              }
              break;
            case "week":
              x = date2.weekday();
              break;
          }
          return {
            t: ts,
            x,
            y: domain.type === "week" ? 0 : date2.weekday()
          };
        });
      },
      extractUnit: function extractUnit(ts) {
        return DateHelper2.date(ts).startOf("day").valueOf();
      }
    };
  };
  var dayTemplate$1 = function dayTemplate2(DateHelper2, _ref) {
    var domain = _ref.domain, verticalOrientation = _ref.verticalOrientation;
    var COLUMNS_COUNT = 7;
    var ALLOWED_DOMAIN_TYPE = ["year", "month", "week"];
    return {
      name: "xDay",
      allowedDomainType: ALLOWED_DOMAIN_TYPE,
      rowsCount: function rowsCount(ts) {
        switch (domain.type) {
          case "month":
            return Math.ceil(domain.dynamicDimension && !verticalOrientation ? DateHelper2.getMonthWeekNumber(DateHelper2.date(ts).endOf("month")) : 6);
          case "year":
            return Math.ceil(domain.dynamicDimension ? DateHelper2.date(ts).endOf("year").dayOfYear() / COLUMNS_COUNT : 54);
          case "week":
          default:
            return COLUMNS_COUNT;
        }
      },
      columnsCount: function columnsCount() {
        if (domain.type === "week") {
          return 1;
        }
        return COLUMNS_COUNT;
      },
      mapping: function mapping(startTimestamp, endTimestamp) {
        return (
          // eslint-disable-next-line implicit-arrow-linebreak
          DateHelper2.intervals("day", startTimestamp, DateHelper2.date(endTimestamp)).map(function(ts) {
            var date2 = DateHelper2.date(ts);
            var endWeekNumber = date2.endOf("year").week();
            var x = 0;
            switch (domain.type) {
              case "month":
                x = DateHelper2.getMonthWeekNumber(ts) - 1;
                break;
              case "year":
                if (endWeekNumber === 1 && date2.week() === endWeekNumber) {
                  x = date2.subtract(1, "week").week() + 1;
                }
                x = date2.week() - 1;
                break;
              case "week":
                x = date2.weekday();
                break;
            }
            return {
              t: ts,
              y: x,
              x: domain.type === "week" ? 0 : date2.weekday()
            };
          })
        );
      },
      extractUnit: function extractUnit(ts) {
        return DateHelper2.date(ts).startOf("day").valueOf();
      }
    };
  };
  var dayTemplate3 = function dayTemplate4(DateHelper2) {
    var ROWS_COUNT = 7;
    var ALLOWED_DOMAIN_TYPE = ["month"];
    return {
      name: "ghDay",
      allowedDomainType: ALLOWED_DOMAIN_TYPE,
      rowsCount: function rowsCount() {
        return ROWS_COUNT;
      },
      columnsCount: function columnsCount(ts) {
        return DateHelper2.getWeeksCountInMonth(ts);
      },
      mapping: function mapping(startTimestamp, endTimestamp) {
        var clampStart = DateHelper2.getFirstWeekOfMonth(startTimestamp);
        var clampEnd = DateHelper2.getFirstWeekOfMonth(endTimestamp);
        var x = -1;
        var pivotDay = clampStart.weekday();
        return DateHelper2.intervals("day", clampStart, clampEnd).map(function(ts) {
          var weekday2 = DateHelper2.date(ts).weekday();
          if (weekday2 === pivotDay) {
            x += 1;
          }
          return {
            t: ts,
            x,
            y: weekday2
          };
        });
      },
      extractUnit: function extractUnit(ts) {
        return DateHelper2.date(ts).startOf("day").valueOf();
      }
    };
  };
  var weekTemplate = function weekTemplate2(DateHelper2, _ref) {
    var domain = _ref.domain;
    var ALLOWED_DOMAIN_TYPE = ["year", "month"];
    return {
      name: "week",
      allowedDomainType: ALLOWED_DOMAIN_TYPE,
      rowsCount: function rowsCount() {
        return 1;
      },
      columnsCount: function columnsCount(ts) {
        switch (domain.type) {
          case "year":
            return domain.dynamicDimension ? DateHelper2.date(ts).endOf("year").isoWeeksInYear() : 53;
          case "month":
            return domain.dynamicDimension ? DateHelper2.getWeeksCountInMonth(ts) : 5;
          default:
            return 1;
        }
      },
      mapping: function mapping(startTimestamp, endTimestamp) {
        var clampStart = DateHelper2.getFirstWeekOfMonth(startTimestamp);
        var clampEnd = DateHelper2.getFirstWeekOfMonth(endTimestamp);
        return DateHelper2.intervals("week", clampStart, clampEnd).map(function(ts, i) {
          return {
            t: ts,
            x: i,
            y: 0
          };
        });
      },
      extractUnit: function extractUnit(ts) {
        return DateHelper2.date(ts).startOf("week").valueOf();
      }
    };
  };
  var monthTemplate = function monthTemplate2(DateHelper2) {
    var ALLOWED_DOMAIN_TYPE = ["year"];
    return {
      name: "month",
      allowedDomainType: ALLOWED_DOMAIN_TYPE,
      rowsCount: function rowsCount() {
        return 1;
      },
      columnsCount: function columnsCount() {
        return 12;
      },
      mapping: function mapping(startTimestamp, endTimestamp) {
        return (
          // eslint-disable-next-line implicit-arrow-linebreak
          DateHelper2.intervals("month", startTimestamp, DateHelper2.date(endTimestamp)).map(function(ts) {
            return {
              t: ts,
              x: DateHelper2.date(ts).month(),
              y: 0
            };
          })
        );
      },
      extractUnit: function extractUnit(ts) {
        return DateHelper2.date(ts).startOf("month").valueOf();
      }
    };
  };
  var yearTemplate = function yearTemplate2(DateHelper2) {
    var ALLOWED_DOMAIN_TYPE = [];
    return {
      name: "year",
      allowedDomainType: ALLOWED_DOMAIN_TYPE,
      rowsCount: function rowsCount() {
        return 1;
      },
      columnsCount: function columnsCount() {
        return 1;
      },
      mapping: function mapping(startTimestamp, endTimestamp) {
        return (
          // eslint-disable-next-line implicit-arrow-linebreak
          DateHelper2.intervals("year", startTimestamp, DateHelper2.date(endTimestamp)).map(function(ts, index) {
            return {
              t: ts,
              x: index,
              y: 0
            };
          })
        );
      },
      extractUnit: function extractUnit(ts) {
        return DateHelper2.date(ts).startOf("year").valueOf();
      }
    };
  };
  var DefaultTemplates = [minuteTemplate, hourTemplate, dayTemplate$2, dayTemplate$1, dayTemplate3, weekTemplate, monthTemplate, yearTemplate];
  var TemplateCollection = /* @__PURE__ */ (function() {
    function TemplateCollection2(dateHelper, options) {
      _classCallCheck(this, TemplateCollection2);
      this.settings = /* @__PURE__ */ new Map();
      this.dateHelper = dateHelper;
      this.options = options;
      this.initiated = false;
    }
    _createClass(TemplateCollection2, [{
      key: "get",
      value: function get7(subDomainType) {
        return this.settings.get(subDomainType);
      }
    }, {
      key: "has",
      value: function has5(subDomainType) {
        return this.settings.has(subDomainType);
      }
    }, {
      key: "init",
      value: function init2() {
        if (!this.initiated) {
          this.initiated = true;
          this.add(DefaultTemplates);
        }
      }
    }, {
      key: "add",
      value: function add(templates) {
        var _this = this;
        this.init();
        var tplWithParent = [];
        castArray(templates).forEach(function(f) {
          var template = f(_this.dateHelper, _this.options.options);
          _this.settings.set(template.name, template);
          if (template.hasOwnProperty("parent")) {
            tplWithParent.push(template.name);
          }
        });
        tplWithParent.forEach(function(name) {
          var parentTemplate = _this.settings.get(_this.settings.get(name).parent);
          if (!parentTemplate) {
            return;
          }
          _this.settings.set(name, Object.assign(Object.assign({}, parentTemplate), _this.settings.get(name)));
        });
      }
    }]);
    return TemplateCollection2;
  })();
  var CalHeatmap = /* @__PURE__ */ (function() {
    function CalHeatmap2() {
      _classCallCheck(this, CalHeatmap2);
      this.options = new Options();
      this.dateHelper = new DateHelper();
      this.templateCollection = new TemplateCollection(this.dateHelper, this.options);
      this.dataFetcher = new DataFetcher(this);
      this.navigator = new Navigator(this);
      this.populator = new Populator(this);
      this.calendarPainter = new CalendarPainter(this);
      this.eventEmitter = new EventEmitter();
      this.pluginManager = new PluginManager(this);
    }
    _createClass(CalHeatmap2, [{
      key: "createDomainCollection",
      value: function createDomainCollection(startDate, range3) {
        var excludeEnd = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
        return new DomainCollection(this.dateHelper, this.options.options.domain.type, startDate, range3, excludeEnd);
      }
      // =========================================================================
      // PUBLIC API
      // =========================================================================
      /**
       * Setup and paint the calendar with the given options
       *
       * @param  {Object} options The Options object
       * @return A Promise, which will fulfill once all the underlying asynchronous
       * tasks settle, whether resolved or rejected.
       */
    }, {
      key: "paint",
      value: function paint(options, plugins) {
        return __awaiter(this, void 0, void 0, /* @__PURE__ */ _regeneratorRuntime().mark(function _callee() {
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                this.options.init(options);
                _context.next = 3;
                return this.dateHelper.setup(this.options);
              case 3:
                this.templateCollection.init();
                _context.prev = 4;
                validate(this.templateCollection, this.options.options);
                _context.next = 11;
                break;
              case 8:
                _context.prev = 8;
                _context.t0 = _context["catch"](4);
                return _context.abrupt("return", Promise.reject(_context.t0));
              case 11:
                if (plugins) {
                  this.pluginManager.add(castArray(plugins));
                }
                this.calendarPainter.setup();
                this.domainCollection = new DomainCollection(this.dateHelper);
                this.navigator.loadNewDomains(this.createDomainCollection(this.options.options.date.start, this.options.options.range));
                return _context.abrupt("return", Promise.allSettled([this.calendarPainter.paint(), this.fill()]));
              case 16:
              case "end":
                return _context.stop();
            }
          }, _callee, this, [[4, 8]]);
        }));
      }
      /**
       * Add a new subDomainTemplate
       *
       * @since 4.0.0
       * @param  {SubDomainTemplate[] | SubDomainTemplate} templates
       * A single, or an array of SubDomainTemplate object
       * @return void
       */
    }, {
      key: "addTemplates",
      value: function addTemplates(templates) {
        this.templateCollection.add(templates);
      }
      /**
       * Shift the calendar by n domains forward
       *
       * @param {number} n Number of domain intervals to shift forward
       * @return A Promise, which will fulfill once all the underlying asynchronous
       * tasks settle, whether resolved or rejected.
       */
    }, {
      key: "next",
      value: function next5() {
        var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
        var loadDirection = this.navigator.loadNewDomains(this.createDomainCollection(this.domainCollection.max, n + 1).slice(n), ScrollDirection.SCROLL_FORWARD);
        return Promise.allSettled([this.calendarPainter.paint(loadDirection), this.fill()]);
      }
      /**
       * Shift the calendar by n domains backward
       *
       * @param {number} n Number of domain intervals to shift backward
       * @return A Promise, which will fulfill once all the underlying asynchronous
       * tasks settle, whether resolved or rejected.
       */
    }, {
      key: "previous",
      value: function previous() {
        var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
        var loadDirection = this.navigator.loadNewDomains(this.createDomainCollection(this.domainCollection.min, -n), ScrollDirection.SCROLL_BACKWARD);
        return Promise.allSettled([this.calendarPainter.paint(loadDirection), this.fill()]);
      }
      /**
       * Jump directly to a specific date
       *
       * JumpTo will scroll the calendar until the wanted domain with the specified
       * date is visible. Unless you set reset to true, the wanted domain
       * will not necessarily be the first domain of the calendar.
       *
       * @param {Date} date Jump to the domain containing that date
       * @param {boolean} reset Whether the wanted domain
       * should be the first domain of the calendar
       * @return A Promise, which will fulfill once all the underlying asynchronous
       * tasks settle, whether resolved or rejected.
       */
    }, {
      key: "jumpTo",
      value: function jumpTo(date2) {
        var reset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        return Promise.allSettled([this.calendarPainter.paint(this.navigator.jumpTo(date2, reset)), this.fill()]);
      }
      /**
       * Fill the calendar with the given data
       *
       * @param  {Object|string}    dataSource    The calendar's datasource,
       * same type as `options.data.source`
       * @return A Promise, which will fulfill once all the underlying asynchronous
       * tasks settle, whether resolved or rejected.
       */
    }, {
      key: "fill",
      value: function fill3() {
        var _this = this;
        var dataSource = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.options.options.data.source;
        var options = this.options.options;
        var template = this.templateCollection;
        var endDate = this.dateHelper.intervals(options.domain.type, this.domainCollection.max, 2)[1];
        var dataPromise = this.dataFetcher.getDatas(dataSource, this.domainCollection.min, endDate);
        return new Promise(function(resolve5, reject5) {
          dataPromise.then(function(data6) {
            _this.domainCollection.fill(data6, options.data, template.get(options.subDomain.type).extractUnit);
            _this.populator.populate();
            resolve5(null);
          }, function(error) {
            reject5(error);
          });
        });
      }
      /**
       * Listener for all events
       *
       * @since 4.0.0
       * @param  {string}  eventName  Name of the event to listen to
       * @param  {function} Callback function to execute on event trigger
       * @return void
       */
    }, {
      key: "on",
      value: function on(name, fn2) {
        this.eventEmitter.on(name, fn2);
      }
    }, {
      key: "dimensions",
      value: function dimensions() {
        return this.calendarPainter.dimensions;
      }
      /**
       * Destroy the calendar
       *
       * @since  3.3.6
       * @return A Promise, which will fulfill once all the underlying asynchronous
       * tasks settle, whether resolved or rejected.
       */
    }, {
      key: "destroy",
      value: function destroy() {
        return this.calendarPainter.destroy();
      }
    }, {
      key: "extendDayjs",
      value: function extendDayjs(plugin) {
        return this.dateHelper.extend(plugin);
      }
    }]);
    return CalHeatmap2;
  })();
  CalHeatmap.VERSION = VERSION;

  // node_modules/cal-heatmap/dist/plugins/LegendLite.esm.js
  function _iterableToArrayLimit2(arr, i) {
    var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
    if (null != _i) {
      var _s, _e, _x, _r, _arr = [], _n = true, _d = false;
      try {
        if (_x = (_i = _i.call(arr)).next, 0 === i) {
          if (Object(_i) !== _i) return;
          _n = false;
        } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = true) ;
      } catch (err) {
        _d = true, _e = err;
      } finally {
        try {
          if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
        } finally {
          if (_d) throw _e;
        }
      }
      return _arr;
    }
  }
  function _classCallCheck2(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _defineProperties2(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey2(descriptor.key), descriptor);
    }
  }
  function _createClass2(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties2(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties2(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
      writable: false
    });
    return Constructor;
  }
  function _defineProperty2(obj, key, value) {
    key = _toPropertyKey2(key);
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  function _slicedToArray2(arr, i) {
    return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
  }
  function _toConsumableArray2(arr) {
    return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread2();
  }
  function _arrayWithoutHoles2(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray2(arr);
  }
  function _arrayWithHoles2(arr) {
    if (Array.isArray(arr)) return arr;
  }
  function _iterableToArray2(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }
  function _unsupportedIterableToArray2(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray2(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray2(o, minLen);
  }
  function _arrayLikeToArray2(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
  function _nonIterableSpread2() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _nonIterableRest2() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _toPrimitive2(input, hint) {
    if (typeof input !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== void 0) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
  function _toPropertyKey2(arg) {
    var key = _toPrimitive2(arg, "string");
    return typeof key === "symbol" ? key : String(key);
  }
  var commonjsGlobal2 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
  var fails$p2 = function(exec5) {
    try {
      return !!exec5();
    } catch (error) {
      return true;
    }
  };
  var fails$o2 = fails$p2;
  var descriptors2 = !fails$o2(function() {
    return Object.defineProperty({}, 1, { get: function() {
      return 7;
    } })[1] !== 7;
  });
  var fails$n2 = fails$p2;
  var functionBindNative2 = !fails$n2(function() {
    var test5 = (function() {
    }).bind();
    return typeof test5 != "function" || test5.hasOwnProperty("prototype");
  });
  var NATIVE_BIND$32 = functionBindNative2;
  var FunctionPrototype$32 = Function.prototype;
  var call$g2 = FunctionPrototype$32.call;
  var uncurryThisWithBind2 = NATIVE_BIND$32 && FunctionPrototype$32.bind.bind(call$g2, call$g2);
  var functionUncurryThis2 = NATIVE_BIND$32 ? uncurryThisWithBind2 : function(fn2) {
    return function() {
      return call$g2.apply(fn2, arguments);
    };
  };
  var isNullOrUndefined$72 = function(it) {
    return it === null || it === void 0;
  };
  var isNullOrUndefined$62 = isNullOrUndefined$72;
  var $TypeError$f2 = TypeError;
  var requireObjectCoercible$52 = function(it) {
    if (isNullOrUndefined$62(it)) throw new $TypeError$f2("Can't call method on " + it);
    return it;
  };
  var requireObjectCoercible$42 = requireObjectCoercible$52;
  var $Object$42 = Object;
  var toObject$82 = function(argument) {
    return $Object$42(requireObjectCoercible$42(argument));
  };
  var uncurryThis$p2 = functionUncurryThis2;
  var toObject$72 = toObject$82;
  var hasOwnProperty2 = uncurryThis$p2({}.hasOwnProperty);
  var hasOwnProperty_12 = Object.hasOwn || function hasOwn3(it, key) {
    return hasOwnProperty2(toObject$72(it), key);
  };
  var DESCRIPTORS$d2 = descriptors2;
  var hasOwn$b2 = hasOwnProperty_12;
  var FunctionPrototype$22 = Function.prototype;
  var getDescriptor2 = DESCRIPTORS$d2 && Object.getOwnPropertyDescriptor;
  var EXISTS$12 = hasOwn$b2(FunctionPrototype$22, "name");
  var PROPER2 = EXISTS$12 && (function something2() {
  }).name === "something";
  var CONFIGURABLE$12 = EXISTS$12 && (!DESCRIPTORS$d2 || DESCRIPTORS$d2 && getDescriptor2(FunctionPrototype$22, "name").configurable);
  var functionName2 = {
    EXISTS: EXISTS$12,
    PROPER: PROPER2,
    CONFIGURABLE: CONFIGURABLE$12
  };
  var makeBuiltIn$32 = { exports: {} };
  var documentAll$22 = typeof document == "object" && document.all;
  var IS_HTMLDDA2 = typeof documentAll$22 == "undefined" && documentAll$22 !== void 0;
  var documentAll_12 = {
    all: documentAll$22,
    IS_HTMLDDA: IS_HTMLDDA2
  };
  var $documentAll$12 = documentAll_12;
  var documentAll$12 = $documentAll$12.all;
  var isCallable$m2 = $documentAll$12.IS_HTMLDDA ? function(argument) {
    return typeof argument == "function" || argument === documentAll$12;
  } : function(argument) {
    return typeof argument == "function";
  };
  var check2 = function(it) {
    return it && it.Math === Math && it;
  };
  var global$k2 = (
    // eslint-disable-next-line es/no-global-this -- safe
    check2(typeof globalThis == "object" && globalThis) || check2(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
    check2(typeof self == "object" && self) || check2(typeof commonjsGlobal2 == "object" && commonjsGlobal2) || check2(typeof commonjsGlobal2 == "object" && commonjsGlobal2) || // eslint-disable-next-line no-new-func -- fallback
    /* @__PURE__ */ (function() {
      return this;
    })() || Function("return this")()
  );
  var global$j2 = global$k2;
  var defineProperty$72 = Object.defineProperty;
  var defineGlobalProperty$32 = function(key, value) {
    try {
      defineProperty$72(global$j2, key, { value, configurable: true, writable: true });
    } catch (error) {
      global$j2[key] = value;
    }
    return value;
  };
  var global$i2 = global$k2;
  var defineGlobalProperty$22 = defineGlobalProperty$32;
  var SHARED2 = "__core-js_shared__";
  var store$32 = global$i2[SHARED2] || defineGlobalProperty$22(SHARED2, {});
  var sharedStore2 = store$32;
  var uncurryThis$o2 = functionUncurryThis2;
  var isCallable$l2 = isCallable$m2;
  var store$22 = sharedStore2;
  var functionToString$12 = uncurryThis$o2(Function.toString);
  if (!isCallable$l2(store$22.inspectSource)) {
    store$22.inspectSource = function(it) {
      return functionToString$12(it);
    };
  }
  var inspectSource$32 = store$22.inspectSource;
  var global$h2 = global$k2;
  var isCallable$k2 = isCallable$m2;
  var WeakMap$12 = global$h2.WeakMap;
  var weakMapBasicDetection2 = isCallable$k2(WeakMap$12) && /native code/.test(String(WeakMap$12));
  var isCallable$j2 = isCallable$m2;
  var $documentAll2 = documentAll_12;
  var documentAll2 = $documentAll2.all;
  var isObject$i2 = $documentAll2.IS_HTMLDDA ? function(it) {
    return typeof it == "object" ? it !== null : isCallable$j2(it) || it === documentAll2;
  } : function(it) {
    return typeof it == "object" ? it !== null : isCallable$j2(it);
  };
  var objectDefineProperty2 = {};
  var global$g2 = global$k2;
  var isObject$h2 = isObject$i2;
  var document$32 = global$g2.document;
  var EXISTS2 = isObject$h2(document$32) && isObject$h2(document$32.createElement);
  var documentCreateElement$22 = function(it) {
    return EXISTS2 ? document$32.createElement(it) : {};
  };
  var DESCRIPTORS$c2 = descriptors2;
  var fails$m2 = fails$p2;
  var createElement$12 = documentCreateElement$22;
  var ie8DomDefine2 = !DESCRIPTORS$c2 && !fails$m2(function() {
    return Object.defineProperty(createElement$12("div"), "a", {
      get: function() {
        return 7;
      }
    }).a !== 7;
  });
  var DESCRIPTORS$b2 = descriptors2;
  var fails$l2 = fails$p2;
  var v8PrototypeDefineBug2 = DESCRIPTORS$b2 && fails$l2(function() {
    return Object.defineProperty(function() {
    }, "prototype", {
      value: 42,
      writable: false
    }).prototype !== 42;
  });
  var isObject$g2 = isObject$i2;
  var $String$52 = String;
  var $TypeError$e2 = TypeError;
  var anObject$c2 = function(argument) {
    if (isObject$g2(argument)) return argument;
    throw new $TypeError$e2($String$52(argument) + " is not an object");
  };
  var NATIVE_BIND$22 = functionBindNative2;
  var call$f2 = Function.prototype.call;
  var functionCall2 = NATIVE_BIND$22 ? call$f2.bind(call$f2) : function() {
    return call$f2.apply(call$f2, arguments);
  };
  var global$f2 = global$k2;
  var isCallable$i2 = isCallable$m2;
  var aFunction2 = function(argument) {
    return isCallable$i2(argument) ? argument : void 0;
  };
  var getBuiltIn$72 = function(namespace, method) {
    return arguments.length < 2 ? aFunction2(global$f2[namespace]) : global$f2[namespace] && global$f2[namespace][method];
  };
  var uncurryThis$n2 = functionUncurryThis2;
  var objectIsPrototypeOf2 = uncurryThis$n2({}.isPrototypeOf);
  var engineUserAgent2 = typeof navigator != "undefined" && String(navigator.userAgent) || "";
  var global$e2 = global$k2;
  var userAgent$52 = engineUserAgent2;
  var process$32 = global$e2.process;
  var Deno$12 = global$e2.Deno;
  var versions2 = process$32 && process$32.versions || Deno$12 && Deno$12.version;
  var v82 = versions2 && versions2.v8;
  var match2;
  var version2;
  if (v82) {
    match2 = v82.split(".");
    version2 = match2[0] > 0 && match2[0] < 4 ? 1 : +(match2[0] + match2[1]);
  }
  if (!version2 && userAgent$52) {
    match2 = userAgent$52.match(/Edge\/(\d+)/);
    if (!match2 || match2[1] >= 74) {
      match2 = userAgent$52.match(/Chrome\/(\d+)/);
      if (match2) version2 = +match2[1];
    }
  }
  var engineV8Version2 = version2;
  var V8_VERSION$32 = engineV8Version2;
  var fails$k2 = fails$p2;
  var global$d2 = global$k2;
  var $String$42 = global$d2.String;
  var symbolConstructorDetection2 = !!Object.getOwnPropertySymbols && !fails$k2(function() {
    var symbol3 = Symbol("symbol detection");
    return !$String$42(symbol3) || !(Object(symbol3) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION$32 && V8_VERSION$32 < 41;
  });
  var NATIVE_SYMBOL$12 = symbolConstructorDetection2;
  var useSymbolAsUid2 = NATIVE_SYMBOL$12 && !Symbol.sham && typeof Symbol.iterator == "symbol";
  var getBuiltIn$62 = getBuiltIn$72;
  var isCallable$h2 = isCallable$m2;
  var isPrototypeOf$22 = objectIsPrototypeOf2;
  var USE_SYMBOL_AS_UID$12 = useSymbolAsUid2;
  var $Object$32 = Object;
  var isSymbol$22 = USE_SYMBOL_AS_UID$12 ? function(it) {
    return typeof it == "symbol";
  } : function(it) {
    var $Symbol = getBuiltIn$62("Symbol");
    return isCallable$h2($Symbol) && isPrototypeOf$22($Symbol.prototype, $Object$32(it));
  };
  var $String$32 = String;
  var tryToString$52 = function(argument) {
    try {
      return $String$32(argument);
    } catch (error) {
      return "Object";
    }
  };
  var isCallable$g2 = isCallable$m2;
  var tryToString$42 = tryToString$52;
  var $TypeError$d2 = TypeError;
  var aCallable$a2 = function(argument) {
    if (isCallable$g2(argument)) return argument;
    throw new $TypeError$d2(tryToString$42(argument) + " is not a function");
  };
  var aCallable$92 = aCallable$a2;
  var isNullOrUndefined$52 = isNullOrUndefined$72;
  var getMethod$32 = function(V, P) {
    var func = V[P];
    return isNullOrUndefined$52(func) ? void 0 : aCallable$92(func);
  };
  var call$e2 = functionCall2;
  var isCallable$f2 = isCallable$m2;
  var isObject$f2 = isObject$i2;
  var $TypeError$c2 = TypeError;
  var ordinaryToPrimitive$12 = function(input, pref) {
    var fn2, val;
    if (pref === "string" && isCallable$f2(fn2 = input.toString) && !isObject$f2(val = call$e2(fn2, input))) return val;
    if (isCallable$f2(fn2 = input.valueOf) && !isObject$f2(val = call$e2(fn2, input))) return val;
    if (pref !== "string" && isCallable$f2(fn2 = input.toString) && !isObject$f2(val = call$e2(fn2, input))) return val;
    throw new $TypeError$c2("Can't convert object to primitive value");
  };
  var shared$32 = { exports: {} };
  var store$12 = sharedStore2;
  (shared$32.exports = function(key, value) {
    return store$12[key] || (store$12[key] = value !== void 0 ? value : {});
  })("versions", []).push({
    version: "3.34.0",
    mode: "global",
    copyright: "\xA9 2014-2023 Denis Pushkarev (zloirock.ru)",
    license: "https://github.com/zloirock/core-js/blob/v3.34.0/LICENSE",
    source: "https://github.com/zloirock/core-js"
  });
  var sharedExports2 = shared$32.exports;
  var uncurryThis$m2 = functionUncurryThis2;
  var id$22 = 0;
  var postfix2 = Math.random();
  var toString$82 = uncurryThis$m2(1 .toString);
  var uid$32 = function(key) {
    return "Symbol(" + (key === void 0 ? "" : key) + ")_" + toString$82(++id$22 + postfix2, 36);
  };
  var global$c2 = global$k2;
  var shared$22 = sharedExports2;
  var hasOwn$a2 = hasOwnProperty_12;
  var uid$22 = uid$32;
  var NATIVE_SYMBOL2 = symbolConstructorDetection2;
  var USE_SYMBOL_AS_UID2 = useSymbolAsUid2;
  var Symbol$12 = global$c2.Symbol;
  var WellKnownSymbolsStore2 = shared$22("wks");
  var createWellKnownSymbol2 = USE_SYMBOL_AS_UID2 ? Symbol$12["for"] || Symbol$12 : Symbol$12 && Symbol$12.withoutSetter || uid$22;
  var wellKnownSymbol$k2 = function(name) {
    if (!hasOwn$a2(WellKnownSymbolsStore2, name)) {
      WellKnownSymbolsStore2[name] = NATIVE_SYMBOL2 && hasOwn$a2(Symbol$12, name) ? Symbol$12[name] : createWellKnownSymbol2("Symbol." + name);
    }
    return WellKnownSymbolsStore2[name];
  };
  var call$d2 = functionCall2;
  var isObject$e2 = isObject$i2;
  var isSymbol$12 = isSymbol$22;
  var getMethod$22 = getMethod$32;
  var ordinaryToPrimitive2 = ordinaryToPrimitive$12;
  var wellKnownSymbol$j2 = wellKnownSymbol$k2;
  var $TypeError$b2 = TypeError;
  var TO_PRIMITIVE2 = wellKnownSymbol$j2("toPrimitive");
  var toPrimitive$12 = function(input, pref) {
    if (!isObject$e2(input) || isSymbol$12(input)) return input;
    var exoticToPrim = getMethod$22(input, TO_PRIMITIVE2);
    var result;
    if (exoticToPrim) {
      if (pref === void 0) pref = "default";
      result = call$d2(exoticToPrim, input, pref);
      if (!isObject$e2(result) || isSymbol$12(result)) return result;
      throw new $TypeError$b2("Can't convert object to primitive value");
    }
    if (pref === void 0) pref = "number";
    return ordinaryToPrimitive2(input, pref);
  };
  var toPrimitive2 = toPrimitive$12;
  var isSymbol2 = isSymbol$22;
  var toPropertyKey$32 = function(argument) {
    var key = toPrimitive2(argument, "string");
    return isSymbol2(key) ? key : key + "";
  };
  var DESCRIPTORS$a2 = descriptors2;
  var IE8_DOM_DEFINE$12 = ie8DomDefine2;
  var V8_PROTOTYPE_DEFINE_BUG$12 = v8PrototypeDefineBug2;
  var anObject$b2 = anObject$c2;
  var toPropertyKey$22 = toPropertyKey$32;
  var $TypeError$a2 = TypeError;
  var $defineProperty2 = Object.defineProperty;
  var $getOwnPropertyDescriptor$12 = Object.getOwnPropertyDescriptor;
  var ENUMERABLE2 = "enumerable";
  var CONFIGURABLE2 = "configurable";
  var WRITABLE2 = "writable";
  objectDefineProperty2.f = DESCRIPTORS$a2 ? V8_PROTOTYPE_DEFINE_BUG$12 ? function defineProperty4(O, P, Attributes) {
    anObject$b2(O);
    P = toPropertyKey$22(P);
    anObject$b2(Attributes);
    if (typeof O === "function" && P === "prototype" && "value" in Attributes && WRITABLE2 in Attributes && !Attributes[WRITABLE2]) {
      var current = $getOwnPropertyDescriptor$12(O, P);
      if (current && current[WRITABLE2]) {
        O[P] = Attributes.value;
        Attributes = {
          configurable: CONFIGURABLE2 in Attributes ? Attributes[CONFIGURABLE2] : current[CONFIGURABLE2],
          enumerable: ENUMERABLE2 in Attributes ? Attributes[ENUMERABLE2] : current[ENUMERABLE2],
          writable: false
        };
      }
    }
    return $defineProperty2(O, P, Attributes);
  } : $defineProperty2 : function defineProperty5(O, P, Attributes) {
    anObject$b2(O);
    P = toPropertyKey$22(P);
    anObject$b2(Attributes);
    if (IE8_DOM_DEFINE$12) try {
      return $defineProperty2(O, P, Attributes);
    } catch (error) {
    }
    if ("get" in Attributes || "set" in Attributes) throw new $TypeError$a2("Accessors not supported");
    if ("value" in Attributes) O[P] = Attributes.value;
    return O;
  };
  var createPropertyDescriptor$42 = function(bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value
    };
  };
  var DESCRIPTORS$92 = descriptors2;
  var definePropertyModule$42 = objectDefineProperty2;
  var createPropertyDescriptor$32 = createPropertyDescriptor$42;
  var createNonEnumerableProperty$52 = DESCRIPTORS$92 ? function(object, key, value) {
    return definePropertyModule$42.f(object, key, createPropertyDescriptor$32(1, value));
  } : function(object, key, value) {
    object[key] = value;
    return object;
  };
  var shared$12 = sharedExports2;
  var uid$12 = uid$32;
  var keys4 = shared$12("keys");
  var sharedKey$32 = function(key) {
    return keys4[key] || (keys4[key] = uid$12(key));
  };
  var hiddenKeys$52 = {};
  var NATIVE_WEAK_MAP2 = weakMapBasicDetection2;
  var global$b2 = global$k2;
  var isObject$d2 = isObject$i2;
  var createNonEnumerableProperty$42 = createNonEnumerableProperty$52;
  var hasOwn$92 = hasOwnProperty_12;
  var shared2 = sharedStore2;
  var sharedKey$22 = sharedKey$32;
  var hiddenKeys$42 = hiddenKeys$52;
  var OBJECT_ALREADY_INITIALIZED2 = "Object already initialized";
  var TypeError$22 = global$b2.TypeError;
  var WeakMap2 = global$b2.WeakMap;
  var set$12;
  var get4;
  var has2;
  var enforce2 = function(it) {
    return has2(it) ? get4(it) : set$12(it, {});
  };
  var getterFor2 = function(TYPE) {
    return function(it) {
      var state;
      if (!isObject$d2(it) || (state = get4(it)).type !== TYPE) {
        throw new TypeError$22("Incompatible receiver, " + TYPE + " required");
      }
      return state;
    };
  };
  if (NATIVE_WEAK_MAP2 || shared2.state) {
    store = shared2.state || (shared2.state = new WeakMap2());
    store.get = store.get;
    store.has = store.has;
    store.set = store.set;
    set$12 = function(it, metadata) {
      if (store.has(it)) throw new TypeError$22(OBJECT_ALREADY_INITIALIZED2);
      metadata.facade = it;
      store.set(it, metadata);
      return metadata;
    };
    get4 = function(it) {
      return store.get(it) || {};
    };
    has2 = function(it) {
      return store.has(it);
    };
  } else {
    STATE = sharedKey$22("state");
    hiddenKeys$42[STATE] = true;
    set$12 = function(it, metadata) {
      if (hasOwn$92(it, STATE)) throw new TypeError$22(OBJECT_ALREADY_INITIALIZED2);
      metadata.facade = it;
      createNonEnumerableProperty$42(it, STATE, metadata);
      return metadata;
    };
    get4 = function(it) {
      return hasOwn$92(it, STATE) ? it[STATE] : {};
    };
    has2 = function(it) {
      return hasOwn$92(it, STATE);
    };
  }
  var store;
  var STATE;
  var internalState2 = {
    set: set$12,
    get: get4,
    has: has2,
    enforce: enforce2,
    getterFor: getterFor2
  };
  var uncurryThis$l2 = functionUncurryThis2;
  var fails$j2 = fails$p2;
  var isCallable$e2 = isCallable$m2;
  var hasOwn$82 = hasOwnProperty_12;
  var DESCRIPTORS$82 = descriptors2;
  var CONFIGURABLE_FUNCTION_NAME$12 = functionName2.CONFIGURABLE;
  var inspectSource$22 = inspectSource$32;
  var InternalStateModule$52 = internalState2;
  var enforceInternalState2 = InternalStateModule$52.enforce;
  var getInternalState$22 = InternalStateModule$52.get;
  var $String$22 = String;
  var defineProperty$62 = Object.defineProperty;
  var stringSlice$32 = uncurryThis$l2("".slice);
  var replace$12 = uncurryThis$l2("".replace);
  var join3 = uncurryThis$l2([].join);
  var CONFIGURABLE_LENGTH2 = DESCRIPTORS$82 && !fails$j2(function() {
    return defineProperty$62(function() {
    }, "length", { value: 8 }).length !== 8;
  });
  var TEMPLATE2 = String(String).split("String");
  var makeBuiltIn$22 = makeBuiltIn$32.exports = function(value, name, options) {
    if (stringSlice$32($String$22(name), 0, 7) === "Symbol(") {
      name = "[" + replace$12($String$22(name), /^Symbol\(([^)]*)\)/, "$1") + "]";
    }
    if (options && options.getter) name = "get " + name;
    if (options && options.setter) name = "set " + name;
    if (!hasOwn$82(value, "name") || CONFIGURABLE_FUNCTION_NAME$12 && value.name !== name) {
      if (DESCRIPTORS$82) defineProperty$62(value, "name", { value: name, configurable: true });
      else value.name = name;
    }
    if (CONFIGURABLE_LENGTH2 && options && hasOwn$82(options, "arity") && value.length !== options.arity) {
      defineProperty$62(value, "length", { value: options.arity });
    }
    try {
      if (options && hasOwn$82(options, "constructor") && options.constructor) {
        if (DESCRIPTORS$82) defineProperty$62(value, "prototype", { writable: false });
      } else if (value.prototype) value.prototype = void 0;
    } catch (error) {
    }
    var state = enforceInternalState2(value);
    if (!hasOwn$82(state, "source")) {
      state.source = join3(TEMPLATE2, typeof name == "string" ? name : "");
    }
    return value;
  };
  Function.prototype.toString = makeBuiltIn$22(function toString4() {
    return isCallable$e2(this) && getInternalState$22(this).source || inspectSource$22(this);
  }, "toString");
  var makeBuiltInExports2 = makeBuiltIn$32.exports;
  var makeBuiltIn$12 = makeBuiltInExports2;
  var defineProperty$52 = objectDefineProperty2;
  var defineBuiltInAccessor$32 = function(target, name, descriptor) {
    if (descriptor.get) makeBuiltIn$12(descriptor.get, name, { getter: true });
    if (descriptor.set) makeBuiltIn$12(descriptor.set, name, { setter: true });
    return defineProperty$52.f(target, name, descriptor);
  };
  var DESCRIPTORS$72 = descriptors2;
  var FUNCTION_NAME_EXISTS2 = functionName2.EXISTS;
  var uncurryThis$k2 = functionUncurryThis2;
  var defineBuiltInAccessor$22 = defineBuiltInAccessor$32;
  var FunctionPrototype$12 = Function.prototype;
  var functionToString2 = uncurryThis$k2(FunctionPrototype$12.toString);
  var nameRE2 = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;
  var regExpExec2 = uncurryThis$k2(nameRE2.exec);
  var NAME2 = "name";
  if (DESCRIPTORS$72 && !FUNCTION_NAME_EXISTS2) {
    defineBuiltInAccessor$22(FunctionPrototype$12, NAME2, {
      configurable: true,
      get: function() {
        try {
          return regExpExec2(nameRE2, functionToString2(this))[1];
        } catch (error) {
          return "";
        }
      }
    });
  }
  var objectGetOwnPropertyDescriptor2 = {};
  var objectPropertyIsEnumerable2 = {};
  var $propertyIsEnumerable$12 = {}.propertyIsEnumerable;
  var getOwnPropertyDescriptor$32 = Object.getOwnPropertyDescriptor;
  var NASHORN_BUG2 = getOwnPropertyDescriptor$32 && !$propertyIsEnumerable$12.call({ 1: 2 }, 1);
  objectPropertyIsEnumerable2.f = NASHORN_BUG2 ? function propertyIsEnumerable3(V) {
    var descriptor = getOwnPropertyDescriptor$32(this, V);
    return !!descriptor && descriptor.enumerable;
  } : $propertyIsEnumerable$12;
  var uncurryThis$j2 = functionUncurryThis2;
  var toString$72 = uncurryThis$j2({}.toString);
  var stringSlice$22 = uncurryThis$j2("".slice);
  var classofRaw$22 = function(it) {
    return stringSlice$22(toString$72(it), 8, -1);
  };
  var uncurryThis$i2 = functionUncurryThis2;
  var fails$i2 = fails$p2;
  var classof$a2 = classofRaw$22;
  var $Object$22 = Object;
  var split2 = uncurryThis$i2("".split);
  var indexedObject2 = fails$i2(function() {
    return !$Object$22("z").propertyIsEnumerable(0);
  }) ? function(it) {
    return classof$a2(it) === "String" ? split2(it, "") : $Object$22(it);
  } : $Object$22;
  var IndexedObject$32 = indexedObject2;
  var requireObjectCoercible$32 = requireObjectCoercible$52;
  var toIndexedObject$92 = function(it) {
    return IndexedObject$32(requireObjectCoercible$32(it));
  };
  var DESCRIPTORS$62 = descriptors2;
  var call$c2 = functionCall2;
  var propertyIsEnumerableModule$12 = objectPropertyIsEnumerable2;
  var createPropertyDescriptor$22 = createPropertyDescriptor$42;
  var toIndexedObject$82 = toIndexedObject$92;
  var toPropertyKey$12 = toPropertyKey$32;
  var hasOwn$72 = hasOwnProperty_12;
  var IE8_DOM_DEFINE2 = ie8DomDefine2;
  var $getOwnPropertyDescriptor2 = Object.getOwnPropertyDescriptor;
  objectGetOwnPropertyDescriptor2.f = DESCRIPTORS$62 ? $getOwnPropertyDescriptor2 : function getOwnPropertyDescriptor3(O, P) {
    O = toIndexedObject$82(O);
    P = toPropertyKey$12(P);
    if (IE8_DOM_DEFINE2) try {
      return $getOwnPropertyDescriptor2(O, P);
    } catch (error) {
    }
    if (hasOwn$72(O, P)) return createPropertyDescriptor$22(!call$c2(propertyIsEnumerableModule$12.f, O, P), O[P]);
  };
  var isCallable$d2 = isCallable$m2;
  var definePropertyModule$32 = objectDefineProperty2;
  var makeBuiltIn2 = makeBuiltInExports2;
  var defineGlobalProperty$12 = defineGlobalProperty$32;
  var defineBuiltIn$82 = function(O, key, value, options) {
    if (!options) options = {};
    var simple = options.enumerable;
    var name = options.name !== void 0 ? options.name : key;
    if (isCallable$d2(value)) makeBuiltIn2(value, name, options);
    if (options.global) {
      if (simple) O[key] = value;
      else defineGlobalProperty$12(key, value);
    } else {
      try {
        if (!options.unsafe) delete O[key];
        else if (O[key]) simple = true;
      } catch (error) {
      }
      if (simple) O[key] = value;
      else definePropertyModule$32.f(O, key, {
        value,
        enumerable: false,
        configurable: !options.nonConfigurable,
        writable: !options.nonWritable
      });
    }
    return O;
  };
  var objectGetOwnPropertyNames2 = {};
  var ceil2 = Math.ceil;
  var floor$12 = Math.floor;
  var mathTrunc2 = Math.trunc || function trunc3(x) {
    var n = +x;
    return (n > 0 ? floor$12 : ceil2)(n);
  };
  var trunc4 = mathTrunc2;
  var toIntegerOrInfinity$32 = function(argument) {
    var number5 = +argument;
    return number5 !== number5 || number5 === 0 ? 0 : trunc4(number5);
  };
  var toIntegerOrInfinity$22 = toIntegerOrInfinity$32;
  var max$22 = Math.max;
  var min$22 = Math.min;
  var toAbsoluteIndex$32 = function(index, length3) {
    var integer = toIntegerOrInfinity$22(index);
    return integer < 0 ? max$22(integer + length3, 0) : min$22(integer, length3);
  };
  var toIntegerOrInfinity$12 = toIntegerOrInfinity$32;
  var min$12 = Math.min;
  var toLength$22 = function(argument) {
    return argument > 0 ? min$12(toIntegerOrInfinity$12(argument), 9007199254740991) : 0;
  };
  var toLength$12 = toLength$22;
  var lengthOfArrayLike$82 = function(obj) {
    return toLength$12(obj.length);
  };
  var toIndexedObject$72 = toIndexedObject$92;
  var toAbsoluteIndex$22 = toAbsoluteIndex$32;
  var lengthOfArrayLike$72 = lengthOfArrayLike$82;
  var createMethod$42 = function(IS_INCLUDES) {
    return function($this, el, fromIndex) {
      var O = toIndexedObject$72($this);
      var length3 = lengthOfArrayLike$72(O);
      var index = toAbsoluteIndex$22(fromIndex, length3);
      var value;
      if (IS_INCLUDES && el !== el) while (length3 > index) {
        value = O[index++];
        if (value !== value) return true;
      }
      else for (; length3 > index; index++) {
        if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
      }
      return !IS_INCLUDES && -1;
    };
  };
  var arrayIncludes2 = {
    // `Array.prototype.includes` method
    // https://tc39.es/ecma262/#sec-array.prototype.includes
    includes: createMethod$42(true),
    // `Array.prototype.indexOf` method
    // https://tc39.es/ecma262/#sec-array.prototype.indexof
    indexOf: createMethod$42(false)
  };
  var uncurryThis$h2 = functionUncurryThis2;
  var hasOwn$62 = hasOwnProperty_12;
  var toIndexedObject$62 = toIndexedObject$92;
  var indexOf2 = arrayIncludes2.indexOf;
  var hiddenKeys$32 = hiddenKeys$52;
  var push$32 = uncurryThis$h2([].push);
  var objectKeysInternal2 = function(object, names) {
    var O = toIndexedObject$62(object);
    var i = 0;
    var result = [];
    var key;
    for (key in O) !hasOwn$62(hiddenKeys$32, key) && hasOwn$62(O, key) && push$32(result, key);
    while (names.length > i) if (hasOwn$62(O, key = names[i++])) {
      ~indexOf2(result, key) || push$32(result, key);
    }
    return result;
  };
  var enumBugKeys$32 = [
    "constructor",
    "hasOwnProperty",
    "isPrototypeOf",
    "propertyIsEnumerable",
    "toLocaleString",
    "toString",
    "valueOf"
  ];
  var internalObjectKeys$12 = objectKeysInternal2;
  var enumBugKeys$22 = enumBugKeys$32;
  var hiddenKeys$22 = enumBugKeys$22.concat("length", "prototype");
  objectGetOwnPropertyNames2.f = Object.getOwnPropertyNames || function getOwnPropertyNames3(O) {
    return internalObjectKeys$12(O, hiddenKeys$22);
  };
  var objectGetOwnPropertySymbols2 = {};
  objectGetOwnPropertySymbols2.f = Object.getOwnPropertySymbols;
  var getBuiltIn$52 = getBuiltIn$72;
  var uncurryThis$g2 = functionUncurryThis2;
  var getOwnPropertyNamesModule$12 = objectGetOwnPropertyNames2;
  var getOwnPropertySymbolsModule$12 = objectGetOwnPropertySymbols2;
  var anObject$a2 = anObject$c2;
  var concat$12 = uncurryThis$g2([].concat);
  var ownKeys$12 = getBuiltIn$52("Reflect", "ownKeys") || function ownKeys3(it) {
    var keys12 = getOwnPropertyNamesModule$12.f(anObject$a2(it));
    var getOwnPropertySymbols = getOwnPropertySymbolsModule$12.f;
    return getOwnPropertySymbols ? concat$12(keys12, getOwnPropertySymbols(it)) : keys12;
  };
  var hasOwn$52 = hasOwnProperty_12;
  var ownKeys4 = ownKeys$12;
  var getOwnPropertyDescriptorModule2 = objectGetOwnPropertyDescriptor2;
  var definePropertyModule$22 = objectDefineProperty2;
  var copyConstructorProperties$12 = function(target, source, exceptions) {
    var keys12 = ownKeys4(source);
    var defineProperty13 = definePropertyModule$22.f;
    var getOwnPropertyDescriptor9 = getOwnPropertyDescriptorModule2.f;
    for (var i = 0; i < keys12.length; i++) {
      var key = keys12[i];
      if (!hasOwn$52(target, key) && !(exceptions && hasOwn$52(exceptions, key))) {
        defineProperty13(target, key, getOwnPropertyDescriptor9(source, key));
      }
    }
  };
  var fails$h2 = fails$p2;
  var isCallable$c2 = isCallable$m2;
  var replacement2 = /#|\.prototype\./;
  var isForced$32 = function(feature, detection) {
    var value = data3[normalize3(feature)];
    return value === POLYFILL2 ? true : value === NATIVE2 ? false : isCallable$c2(detection) ? fails$h2(detection) : !!detection;
  };
  var normalize3 = isForced$32.normalize = function(string) {
    return String(string).replace(replacement2, ".").toLowerCase();
  };
  var data3 = isForced$32.data = {};
  var NATIVE2 = isForced$32.NATIVE = "N";
  var POLYFILL2 = isForced$32.POLYFILL = "P";
  var isForced_12 = isForced$32;
  var global$a2 = global$k2;
  var getOwnPropertyDescriptor$22 = objectGetOwnPropertyDescriptor2.f;
  var createNonEnumerableProperty$32 = createNonEnumerableProperty$52;
  var defineBuiltIn$72 = defineBuiltIn$82;
  var defineGlobalProperty2 = defineGlobalProperty$32;
  var copyConstructorProperties2 = copyConstructorProperties$12;
  var isForced$22 = isForced_12;
  var _export2 = function(options, source) {
    var TARGET = options.target;
    var GLOBAL = options.global;
    var STATIC = options.stat;
    var FORCED5, target, key, targetProperty, sourceProperty, descriptor;
    if (GLOBAL) {
      target = global$a2;
    } else if (STATIC) {
      target = global$a2[TARGET] || defineGlobalProperty2(TARGET, {});
    } else {
      target = (global$a2[TARGET] || {}).prototype;
    }
    if (target) for (key in source) {
      sourceProperty = source[key];
      if (options.dontCallGetSet) {
        descriptor = getOwnPropertyDescriptor$22(target, key);
        targetProperty = descriptor && descriptor.value;
      } else targetProperty = target[key];
      FORCED5 = isForced$22(GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key, options.forced);
      if (!FORCED5 && targetProperty !== void 0) {
        if (typeof sourceProperty == typeof targetProperty) continue;
        copyConstructorProperties2(sourceProperty, targetProperty);
      }
      if (options.sham || targetProperty && targetProperty.sham) {
        createNonEnumerableProperty$32(sourceProperty, "sham", true);
      }
      defineBuiltIn$72(target, key, sourceProperty, options);
    }
  };
  var internalObjectKeys2 = objectKeysInternal2;
  var enumBugKeys$12 = enumBugKeys$32;
  var objectKeys$32 = Object.keys || function keys5(O) {
    return internalObjectKeys2(O, enumBugKeys$12);
  };
  var DESCRIPTORS$52 = descriptors2;
  var uncurryThis$f2 = functionUncurryThis2;
  var call$b2 = functionCall2;
  var fails$g2 = fails$p2;
  var objectKeys$22 = objectKeys$32;
  var getOwnPropertySymbolsModule2 = objectGetOwnPropertySymbols2;
  var propertyIsEnumerableModule2 = objectPropertyIsEnumerable2;
  var toObject$62 = toObject$82;
  var IndexedObject$22 = indexedObject2;
  var $assign2 = Object.assign;
  var defineProperty$42 = Object.defineProperty;
  var concat3 = uncurryThis$f2([].concat);
  var objectAssign2 = !$assign2 || fails$g2(function() {
    if (DESCRIPTORS$52 && $assign2({ b: 1 }, $assign2(defineProperty$42({}, "a", {
      enumerable: true,
      get: function() {
        defineProperty$42(this, "b", {
          value: 3,
          enumerable: false
        });
      }
    }), { b: 2 })).b !== 1) return true;
    var A2 = {};
    var B2 = {};
    var symbol3 = Symbol("assign detection");
    var alphabet = "abcdefghijklmnopqrst";
    A2[symbol3] = 7;
    alphabet.split("").forEach(function(chr) {
      B2[chr] = chr;
    });
    return $assign2({}, A2)[symbol3] !== 7 || objectKeys$22($assign2({}, B2)).join("") !== alphabet;
  }) ? function assign3(target, source) {
    var T = toObject$62(target);
    var argumentsLength = arguments.length;
    var index = 1;
    var getOwnPropertySymbols = getOwnPropertySymbolsModule2.f;
    var propertyIsEnumerable7 = propertyIsEnumerableModule2.f;
    while (argumentsLength > index) {
      var S = IndexedObject$22(arguments[index++]);
      var keys12 = getOwnPropertySymbols ? concat3(objectKeys$22(S), getOwnPropertySymbols(S)) : objectKeys$22(S);
      var length3 = keys12.length;
      var j = 0;
      var key;
      while (length3 > j) {
        key = keys12[j++];
        if (!DESCRIPTORS$52 || call$b2(propertyIsEnumerable7, S, key)) T[key] = S[key];
      }
    }
    return T;
  } : $assign2;
  var $$m2 = _export2;
  var assign4 = objectAssign2;
  $$m2({ target: "Object", stat: true, arity: 2, forced: Object.assign !== assign4 }, {
    assign: assign4
  });
  var wellKnownSymbol$i2 = wellKnownSymbol$k2;
  var TO_STRING_TAG$22 = wellKnownSymbol$i2("toStringTag");
  var test$12 = {};
  test$12[TO_STRING_TAG$22] = "z";
  var toStringTagSupport2 = String(test$12) === "[object z]";
  var TO_STRING_TAG_SUPPORT$22 = toStringTagSupport2;
  var isCallable$b2 = isCallable$m2;
  var classofRaw$12 = classofRaw$22;
  var wellKnownSymbol$h2 = wellKnownSymbol$k2;
  var TO_STRING_TAG$12 = wellKnownSymbol$h2("toStringTag");
  var $Object$12 = Object;
  var CORRECT_ARGUMENTS2 = classofRaw$12(/* @__PURE__ */ (function() {
    return arguments;
  })()) === "Arguments";
  var tryGet2 = function(it, key) {
    try {
      return it[key];
    } catch (error) {
    }
  };
  var classof$92 = TO_STRING_TAG_SUPPORT$22 ? classofRaw$12 : function(it) {
    var O, tag, result;
    return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet2(O = $Object$12(it), TO_STRING_TAG$12)) == "string" ? tag : CORRECT_ARGUMENTS2 ? classofRaw$12(O) : (result = classofRaw$12(O)) === "Object" && isCallable$b2(O.callee) ? "Arguments" : result;
  };
  var TO_STRING_TAG_SUPPORT$12 = toStringTagSupport2;
  var classof$82 = classof$92;
  var objectToString$12 = TO_STRING_TAG_SUPPORT$12 ? {}.toString : function toString5() {
    return "[object " + classof$82(this) + "]";
  };
  var TO_STRING_TAG_SUPPORT2 = toStringTagSupport2;
  var defineBuiltIn$62 = defineBuiltIn$82;
  var toString$62 = objectToString$12;
  if (!TO_STRING_TAG_SUPPORT2) {
    defineBuiltIn$62(Object.prototype, "toString", toString$62, { unsafe: true });
  }
  var global$92 = global$k2;
  var classof$72 = classofRaw$22;
  var engineIsNode2 = classof$72(global$92.process) === "process";
  var uncurryThis$e2 = functionUncurryThis2;
  var aCallable$82 = aCallable$a2;
  var functionUncurryThisAccessor2 = function(object, key, method) {
    try {
      return uncurryThis$e2(aCallable$82(Object.getOwnPropertyDescriptor(object, key)[method]));
    } catch (error) {
    }
  };
  var isCallable$a2 = isCallable$m2;
  var $String$12 = String;
  var $TypeError$92 = TypeError;
  var aPossiblePrototype$12 = function(argument) {
    if (typeof argument == "object" || isCallable$a2(argument)) return argument;
    throw new $TypeError$92("Can't set " + $String$12(argument) + " as a prototype");
  };
  var uncurryThisAccessor2 = functionUncurryThisAccessor2;
  var anObject$92 = anObject$c2;
  var aPossiblePrototype2 = aPossiblePrototype$12;
  var objectSetPrototypeOf2 = Object.setPrototypeOf || ("__proto__" in {} ? (function() {
    var CORRECT_SETTER = false;
    var test5 = {};
    var setter;
    try {
      setter = uncurryThisAccessor2(Object.prototype, "__proto__", "set");
      setter(test5, []);
      CORRECT_SETTER = test5 instanceof Array;
    } catch (error) {
    }
    return function setPrototypeOf5(O, proto) {
      anObject$92(O);
      aPossiblePrototype2(proto);
      if (CORRECT_SETTER) setter(O, proto);
      else O.__proto__ = proto;
      return O;
    };
  })() : void 0);
  var defineProperty$32 = objectDefineProperty2.f;
  var hasOwn$42 = hasOwnProperty_12;
  var wellKnownSymbol$g2 = wellKnownSymbol$k2;
  var TO_STRING_TAG2 = wellKnownSymbol$g2("toStringTag");
  var setToStringTag$52 = function(target, TAG, STATIC) {
    if (target && !STATIC) target = target.prototype;
    if (target && !hasOwn$42(target, TO_STRING_TAG2)) {
      defineProperty$32(target, TO_STRING_TAG2, { configurable: true, value: TAG });
    }
  };
  var getBuiltIn$42 = getBuiltIn$72;
  var defineBuiltInAccessor$12 = defineBuiltInAccessor$32;
  var wellKnownSymbol$f2 = wellKnownSymbol$k2;
  var DESCRIPTORS$42 = descriptors2;
  var SPECIES$52 = wellKnownSymbol$f2("species");
  var setSpecies$22 = function(CONSTRUCTOR_NAME) {
    var Constructor = getBuiltIn$42(CONSTRUCTOR_NAME);
    if (DESCRIPTORS$42 && Constructor && !Constructor[SPECIES$52]) {
      defineBuiltInAccessor$12(Constructor, SPECIES$52, {
        configurable: true,
        get: function() {
          return this;
        }
      });
    }
  };
  var isPrototypeOf$12 = objectIsPrototypeOf2;
  var $TypeError$82 = TypeError;
  var anInstance$42 = function(it, Prototype) {
    if (isPrototypeOf$12(Prototype, it)) return it;
    throw new $TypeError$82("Incorrect invocation");
  };
  var uncurryThis$d2 = functionUncurryThis2;
  var fails$f2 = fails$p2;
  var isCallable$92 = isCallable$m2;
  var classof$62 = classof$92;
  var getBuiltIn$32 = getBuiltIn$72;
  var inspectSource$12 = inspectSource$32;
  var noop3 = function() {
  };
  var empty3 = [];
  var construct2 = getBuiltIn$32("Reflect", "construct");
  var constructorRegExp2 = /^\s*(?:class|function)\b/;
  var exec2 = uncurryThis$d2(constructorRegExp2.exec);
  var INCORRECT_TO_STRING2 = !constructorRegExp2.test(noop3);
  var isConstructorModern2 = function isConstructor4(argument) {
    if (!isCallable$92(argument)) return false;
    try {
      construct2(noop3, empty3, argument);
      return true;
    } catch (error) {
      return false;
    }
  };
  var isConstructorLegacy2 = function isConstructor5(argument) {
    if (!isCallable$92(argument)) return false;
    switch (classof$62(argument)) {
      case "AsyncFunction":
      case "GeneratorFunction":
      case "AsyncGeneratorFunction":
        return false;
    }
    try {
      return INCORRECT_TO_STRING2 || !!exec2(constructorRegExp2, inspectSource$12(argument));
    } catch (error) {
      return true;
    }
  };
  isConstructorLegacy2.sham = true;
  var isConstructor$42 = !construct2 || fails$f2(function() {
    var called;
    return isConstructorModern2(isConstructorModern2.call) || !isConstructorModern2(Object) || !isConstructorModern2(function() {
      called = true;
    }) || called;
  }) ? isConstructorLegacy2 : isConstructorModern2;
  var isConstructor$32 = isConstructor$42;
  var tryToString$32 = tryToString$52;
  var $TypeError$72 = TypeError;
  var aConstructor$12 = function(argument) {
    if (isConstructor$32(argument)) return argument;
    throw new $TypeError$72(tryToString$32(argument) + " is not a constructor");
  };
  var anObject$82 = anObject$c2;
  var aConstructor2 = aConstructor$12;
  var isNullOrUndefined$42 = isNullOrUndefined$72;
  var wellKnownSymbol$e2 = wellKnownSymbol$k2;
  var SPECIES$42 = wellKnownSymbol$e2("species");
  var speciesConstructor$12 = function(O, defaultConstructor) {
    var C2 = anObject$82(O).constructor;
    var S;
    return C2 === void 0 || isNullOrUndefined$42(S = anObject$82(C2)[SPECIES$42]) ? defaultConstructor : aConstructor2(S);
  };
  var NATIVE_BIND$12 = functionBindNative2;
  var FunctionPrototype2 = Function.prototype;
  var apply$12 = FunctionPrototype2.apply;
  var call$a2 = FunctionPrototype2.call;
  var functionApply2 = typeof Reflect == "object" && Reflect.apply || (NATIVE_BIND$12 ? call$a2.bind(apply$12) : function() {
    return call$a2.apply(apply$12, arguments);
  });
  var classofRaw2 = classofRaw$22;
  var uncurryThis$c2 = functionUncurryThis2;
  var functionUncurryThisClause2 = function(fn2) {
    if (classofRaw2(fn2) === "Function") return uncurryThis$c2(fn2);
  };
  var uncurryThis$b2 = functionUncurryThisClause2;
  var aCallable$72 = aCallable$a2;
  var NATIVE_BIND2 = functionBindNative2;
  var bind$72 = uncurryThis$b2(uncurryThis$b2.bind);
  var functionBindContext2 = function(fn2, that) {
    aCallable$72(fn2);
    return that === void 0 ? fn2 : NATIVE_BIND2 ? bind$72(fn2, that) : function() {
      return fn2.apply(that, arguments);
    };
  };
  var getBuiltIn$22 = getBuiltIn$72;
  var html$22 = getBuiltIn$22("document", "documentElement");
  var uncurryThis$a2 = functionUncurryThis2;
  var arraySlice$32 = uncurryThis$a2([].slice);
  var $TypeError$62 = TypeError;
  var validateArgumentsLength$12 = function(passed, required) {
    if (passed < required) throw new $TypeError$62("Not enough arguments");
    return passed;
  };
  var userAgent$42 = engineUserAgent2;
  var engineIsIos2 = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$42);
  var global$82 = global$k2;
  var apply2 = functionApply2;
  var bind$62 = functionBindContext2;
  var isCallable$82 = isCallable$m2;
  var hasOwn$32 = hasOwnProperty_12;
  var fails$e2 = fails$p2;
  var html$12 = html$22;
  var arraySlice$22 = arraySlice$32;
  var createElement2 = documentCreateElement$22;
  var validateArgumentsLength2 = validateArgumentsLength$12;
  var IS_IOS$12 = engineIsIos2;
  var IS_NODE$32 = engineIsNode2;
  var set4 = global$82.setImmediate;
  var clear2 = global$82.clearImmediate;
  var process$22 = global$82.process;
  var Dispatch3 = global$82.Dispatch;
  var Function$12 = global$82.Function;
  var MessageChannel2 = global$82.MessageChannel;
  var String$12 = global$82.String;
  var counter2 = 0;
  var queue$22 = {};
  var ONREADYSTATECHANGE2 = "onreadystatechange";
  var $location2;
  var defer2;
  var channel2;
  var port2;
  fails$e2(function() {
    $location2 = global$82.location;
  });
  var run2 = function(id6) {
    if (hasOwn$32(queue$22, id6)) {
      var fn2 = queue$22[id6];
      delete queue$22[id6];
      fn2();
    }
  };
  var runner2 = function(id6) {
    return function() {
      run2(id6);
    };
  };
  var eventListener2 = function(event) {
    run2(event.data);
  };
  var globalPostMessageDefer2 = function(id6) {
    global$82.postMessage(String$12(id6), $location2.protocol + "//" + $location2.host);
  };
  if (!set4 || !clear2) {
    set4 = function setImmediate(handler) {
      validateArgumentsLength2(arguments.length, 1);
      var fn2 = isCallable$82(handler) ? handler : Function$12(handler);
      var args = arraySlice$22(arguments, 1);
      queue$22[++counter2] = function() {
        apply2(fn2, void 0, args);
      };
      defer2(counter2);
      return counter2;
    };
    clear2 = function clearImmediate(id6) {
      delete queue$22[id6];
    };
    if (IS_NODE$32) {
      defer2 = function(id6) {
        process$22.nextTick(runner2(id6));
      };
    } else if (Dispatch3 && Dispatch3.now) {
      defer2 = function(id6) {
        Dispatch3.now(runner2(id6));
      };
    } else if (MessageChannel2 && !IS_IOS$12) {
      channel2 = new MessageChannel2();
      port2 = channel2.port2;
      channel2.port1.onmessage = eventListener2;
      defer2 = bind$62(port2.postMessage, port2);
    } else if (global$82.addEventListener && isCallable$82(global$82.postMessage) && !global$82.importScripts && $location2 && $location2.protocol !== "file:" && !fails$e2(globalPostMessageDefer2)) {
      defer2 = globalPostMessageDefer2;
      global$82.addEventListener("message", eventListener2, false);
    } else if (ONREADYSTATECHANGE2 in createElement2("script")) {
      defer2 = function(id6) {
        html$12.appendChild(createElement2("script"))[ONREADYSTATECHANGE2] = function() {
          html$12.removeChild(this);
          run2(id6);
        };
      };
    } else {
      defer2 = function(id6) {
        setTimeout(runner2(id6), 0);
      };
    }
  }
  var task$12 = {
    set: set4,
    clear: clear2
  };
  var Queue$22 = function() {
    this.head = null;
    this.tail = null;
  };
  Queue$22.prototype = {
    add: function(item) {
      var entry = { item, next: null };
      var tail = this.tail;
      if (tail) tail.next = entry;
      else this.head = entry;
      this.tail = entry;
    },
    get: function() {
      var entry = this.head;
      if (entry) {
        var next5 = this.head = entry.next;
        if (next5 === null) this.tail = null;
        return entry.item;
      }
    }
  };
  var queue$12 = Queue$22;
  var userAgent$32 = engineUserAgent2;
  var engineIsIosPebble2 = /ipad|iphone|ipod/i.test(userAgent$32) && typeof Pebble != "undefined";
  var userAgent$22 = engineUserAgent2;
  var engineIsWebosWebkit2 = /web0s(?!.*chrome)/i.test(userAgent$22);
  var global$72 = global$k2;
  var bind$52 = functionBindContext2;
  var getOwnPropertyDescriptor$12 = objectGetOwnPropertyDescriptor2.f;
  var macrotask2 = task$12.set;
  var Queue$12 = queue$12;
  var IS_IOS2 = engineIsIos2;
  var IS_IOS_PEBBLE2 = engineIsIosPebble2;
  var IS_WEBOS_WEBKIT2 = engineIsWebosWebkit2;
  var IS_NODE$22 = engineIsNode2;
  var MutationObserver2 = global$72.MutationObserver || global$72.WebKitMutationObserver;
  var document$22 = global$72.document;
  var process$12 = global$72.process;
  var Promise$12 = global$72.Promise;
  var queueMicrotaskDescriptor2 = getOwnPropertyDescriptor$12(global$72, "queueMicrotask");
  var microtask$12 = queueMicrotaskDescriptor2 && queueMicrotaskDescriptor2.value;
  var notify$12;
  var toggle2;
  var node2;
  var promise2;
  var then2;
  if (!microtask$12) {
    queue = new Queue$12();
    flush = function() {
      var parent, fn2;
      if (IS_NODE$22 && (parent = process$12.domain)) parent.exit();
      while (fn2 = queue.get()) try {
        fn2();
      } catch (error) {
        if (queue.head) notify$12();
        throw error;
      }
      if (parent) parent.enter();
    };
    if (!IS_IOS2 && !IS_NODE$22 && !IS_WEBOS_WEBKIT2 && MutationObserver2 && document$22) {
      toggle2 = true;
      node2 = document$22.createTextNode("");
      new MutationObserver2(flush).observe(node2, { characterData: true });
      notify$12 = function() {
        node2.data = toggle2 = !toggle2;
      };
    } else if (!IS_IOS_PEBBLE2 && Promise$12 && Promise$12.resolve) {
      promise2 = Promise$12.resolve(void 0);
      promise2.constructor = Promise$12;
      then2 = bind$52(promise2.then, promise2);
      notify$12 = function() {
        then2(flush);
      };
    } else if (IS_NODE$22) {
      notify$12 = function() {
        process$12.nextTick(flush);
      };
    } else {
      macrotask2 = bind$52(macrotask2, global$72);
      notify$12 = function() {
        macrotask2(flush);
      };
    }
    microtask$12 = function(fn2) {
      if (!queue.head) notify$12();
      queue.add(fn2);
    };
  }
  var queue;
  var flush;
  var microtask_12 = microtask$12;
  var hostReportErrors$12 = function(a2, b) {
    try {
      arguments.length === 1 ? console.error(a2) : console.error(a2, b);
    } catch (error) {
    }
  };
  var perform$42 = function(exec5) {
    try {
      return { error: false, value: exec5() };
    } catch (error) {
      return { error: true, value: error };
    }
  };
  var global$62 = global$k2;
  var promiseNativeConstructor2 = global$62.Promise;
  var engineIsDeno2 = typeof Deno == "object" && Deno && typeof Deno.version == "object";
  var IS_DENO$12 = engineIsDeno2;
  var IS_NODE$12 = engineIsNode2;
  var engineIsBrowser2 = !IS_DENO$12 && !IS_NODE$12 && typeof window == "object" && typeof document == "object";
  var global$52 = global$k2;
  var NativePromiseConstructor$32 = promiseNativeConstructor2;
  var isCallable$72 = isCallable$m2;
  var isForced$12 = isForced_12;
  var inspectSource2 = inspectSource$32;
  var wellKnownSymbol$d2 = wellKnownSymbol$k2;
  var IS_BROWSER2 = engineIsBrowser2;
  var IS_DENO2 = engineIsDeno2;
  var V8_VERSION$22 = engineV8Version2;
  NativePromiseConstructor$32 && NativePromiseConstructor$32.prototype;
  var SPECIES$32 = wellKnownSymbol$d2("species");
  var SUBCLASSING2 = false;
  var NATIVE_PROMISE_REJECTION_EVENT$12 = isCallable$72(global$52.PromiseRejectionEvent);
  var FORCED_PROMISE_CONSTRUCTOR$52 = isForced$12("Promise", function() {
    var PROMISE_CONSTRUCTOR_SOURCE = inspectSource2(NativePromiseConstructor$32);
    var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor$32);
    if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION$22 === 66) return true;
    if (!V8_VERSION$22 || V8_VERSION$22 < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
      var promise5 = new NativePromiseConstructor$32(function(resolve5) {
        resolve5(1);
      });
      var FakePromise = function(exec5) {
        exec5(function() {
        }, function() {
        });
      };
      var constructor = promise5.constructor = {};
      constructor[SPECIES$32] = FakePromise;
      SUBCLASSING2 = promise5.then(function() {
      }) instanceof FakePromise;
      if (!SUBCLASSING2) return true;
    }
    return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER2 || IS_DENO2) && !NATIVE_PROMISE_REJECTION_EVENT$12;
  });
  var promiseConstructorDetection2 = {
    CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$52,
    REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$12,
    SUBCLASSING: SUBCLASSING2
  };
  var newPromiseCapability$22 = {};
  var aCallable$62 = aCallable$a2;
  var $TypeError$52 = TypeError;
  var PromiseCapability2 = function(C2) {
    var resolve5, reject5;
    this.promise = new C2(function($$resolve, $$reject) {
      if (resolve5 !== void 0 || reject5 !== void 0) throw new $TypeError$52("Bad Promise constructor");
      resolve5 = $$resolve;
      reject5 = $$reject;
    });
    this.resolve = aCallable$62(resolve5);
    this.reject = aCallable$62(reject5);
  };
  newPromiseCapability$22.f = function(C2) {
    return new PromiseCapability2(C2);
  };
  var $$l2 = _export2;
  var IS_NODE2 = engineIsNode2;
  var global$42 = global$k2;
  var call$92 = functionCall2;
  var defineBuiltIn$52 = defineBuiltIn$82;
  var setPrototypeOf$22 = objectSetPrototypeOf2;
  var setToStringTag$42 = setToStringTag$52;
  var setSpecies$12 = setSpecies$22;
  var aCallable$52 = aCallable$a2;
  var isCallable$62 = isCallable$m2;
  var isObject$c2 = isObject$i2;
  var anInstance$32 = anInstance$42;
  var speciesConstructor2 = speciesConstructor$12;
  var task2 = task$12.set;
  var microtask2 = microtask_12;
  var hostReportErrors2 = hostReportErrors$12;
  var perform$32 = perform$42;
  var Queue2 = queue$12;
  var InternalStateModule$42 = internalState2;
  var NativePromiseConstructor$22 = promiseNativeConstructor2;
  var PromiseConstructorDetection2 = promiseConstructorDetection2;
  var newPromiseCapabilityModule$42 = newPromiseCapability$22;
  var PROMISE2 = "Promise";
  var FORCED_PROMISE_CONSTRUCTOR$42 = PromiseConstructorDetection2.CONSTRUCTOR;
  var NATIVE_PROMISE_REJECTION_EVENT2 = PromiseConstructorDetection2.REJECTION_EVENT;
  var NATIVE_PROMISE_SUBCLASSING2 = PromiseConstructorDetection2.SUBCLASSING;
  var getInternalPromiseState2 = InternalStateModule$42.getterFor(PROMISE2);
  var setInternalState$42 = InternalStateModule$42.set;
  var NativePromisePrototype$12 = NativePromiseConstructor$22 && NativePromiseConstructor$22.prototype;
  var PromiseConstructor2 = NativePromiseConstructor$22;
  var PromisePrototype2 = NativePromisePrototype$12;
  var TypeError$12 = global$42.TypeError;
  var document$12 = global$42.document;
  var process2 = global$42.process;
  var newPromiseCapability$12 = newPromiseCapabilityModule$42.f;
  var newGenericPromiseCapability2 = newPromiseCapability$12;
  var DISPATCH_EVENT2 = !!(document$12 && document$12.createEvent && global$42.dispatchEvent);
  var UNHANDLED_REJECTION2 = "unhandledrejection";
  var REJECTION_HANDLED2 = "rejectionhandled";
  var PENDING2 = 0;
  var FULFILLED2 = 1;
  var REJECTED2 = 2;
  var HANDLED2 = 1;
  var UNHANDLED2 = 2;
  var Internal2;
  var OwnPromiseCapability2;
  var PromiseWrapper2;
  var nativeThen2;
  var isThenable2 = function(it) {
    var then5;
    return isObject$c2(it) && isCallable$62(then5 = it.then) ? then5 : false;
  };
  var callReaction2 = function(reaction, state) {
    var value = state.value;
    var ok = state.state === FULFILLED2;
    var handler = ok ? reaction.ok : reaction.fail;
    var resolve5 = reaction.resolve;
    var reject5 = reaction.reject;
    var domain = reaction.domain;
    var result, then5, exited;
    try {
      if (handler) {
        if (!ok) {
          if (state.rejection === UNHANDLED2) onHandleUnhandled2(state);
          state.rejection = HANDLED2;
        }
        if (handler === true) result = value;
        else {
          if (domain) domain.enter();
          result = handler(value);
          if (domain) {
            domain.exit();
            exited = true;
          }
        }
        if (result === reaction.promise) {
          reject5(new TypeError$12("Promise-chain cycle"));
        } else if (then5 = isThenable2(result)) {
          call$92(then5, result, resolve5, reject5);
        } else resolve5(result);
      } else reject5(value);
    } catch (error) {
      if (domain && !exited) domain.exit();
      reject5(error);
    }
  };
  var notify2 = function(state, isReject) {
    if (state.notified) return;
    state.notified = true;
    microtask2(function() {
      var reactions = state.reactions;
      var reaction;
      while (reaction = reactions.get()) {
        callReaction2(reaction, state);
      }
      state.notified = false;
      if (isReject && !state.rejection) onUnhandled2(state);
    });
  };
  var dispatchEvent3 = function(name, promise5, reason) {
    var event, handler;
    if (DISPATCH_EVENT2) {
      event = document$12.createEvent("Event");
      event.promise = promise5;
      event.reason = reason;
      event.initEvent(name, false, true);
      global$42.dispatchEvent(event);
    } else event = { promise: promise5, reason };
    if (!NATIVE_PROMISE_REJECTION_EVENT2 && (handler = global$42["on" + name])) handler(event);
    else if (name === UNHANDLED_REJECTION2) hostReportErrors2("Unhandled promise rejection", reason);
  };
  var onUnhandled2 = function(state) {
    call$92(task2, global$42, function() {
      var promise5 = state.facade;
      var value = state.value;
      var IS_UNHANDLED = isUnhandled2(state);
      var result;
      if (IS_UNHANDLED) {
        result = perform$32(function() {
          if (IS_NODE2) {
            process2.emit("unhandledRejection", value, promise5);
          } else dispatchEvent3(UNHANDLED_REJECTION2, promise5, value);
        });
        state.rejection = IS_NODE2 || isUnhandled2(state) ? UNHANDLED2 : HANDLED2;
        if (result.error) throw result.value;
      }
    });
  };
  var isUnhandled2 = function(state) {
    return state.rejection !== HANDLED2 && !state.parent;
  };
  var onHandleUnhandled2 = function(state) {
    call$92(task2, global$42, function() {
      var promise5 = state.facade;
      if (IS_NODE2) {
        process2.emit("rejectionHandled", promise5);
      } else dispatchEvent3(REJECTION_HANDLED2, promise5, state.value);
    });
  };
  var bind$42 = function(fn2, state, unwrap) {
    return function(value) {
      fn2(state, value, unwrap);
    };
  };
  var internalReject2 = function(state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    state.value = value;
    state.state = REJECTED2;
    notify2(state, true);
  };
  var internalResolve2 = function(state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    try {
      if (state.facade === value) throw new TypeError$12("Promise can't be resolved itself");
      var then5 = isThenable2(value);
      if (then5) {
        microtask2(function() {
          var wrapper = { done: false };
          try {
            call$92(
              then5,
              value,
              bind$42(internalResolve2, wrapper, state),
              bind$42(internalReject2, wrapper, state)
            );
          } catch (error) {
            internalReject2(wrapper, error, state);
          }
        });
      } else {
        state.value = value;
        state.state = FULFILLED2;
        notify2(state, false);
      }
    } catch (error) {
      internalReject2({ done: false }, error, state);
    }
  };
  if (FORCED_PROMISE_CONSTRUCTOR$42) {
    PromiseConstructor2 = function Promise2(executor) {
      anInstance$32(this, PromisePrototype2);
      aCallable$52(executor);
      call$92(Internal2, this);
      var state = getInternalPromiseState2(this);
      try {
        executor(bind$42(internalResolve2, state), bind$42(internalReject2, state));
      } catch (error) {
        internalReject2(state, error);
      }
    };
    PromisePrototype2 = PromiseConstructor2.prototype;
    Internal2 = function Promise2(executor) {
      setInternalState$42(this, {
        type: PROMISE2,
        done: false,
        notified: false,
        parent: false,
        reactions: new Queue2(),
        rejection: false,
        state: PENDING2,
        value: void 0
      });
    };
    Internal2.prototype = defineBuiltIn$52(PromisePrototype2, "then", function then5(onFulfilled, onRejected) {
      var state = getInternalPromiseState2(this);
      var reaction = newPromiseCapability$12(speciesConstructor2(this, PromiseConstructor2));
      state.parent = true;
      reaction.ok = isCallable$62(onFulfilled) ? onFulfilled : true;
      reaction.fail = isCallable$62(onRejected) && onRejected;
      reaction.domain = IS_NODE2 ? process2.domain : void 0;
      if (state.state === PENDING2) state.reactions.add(reaction);
      else microtask2(function() {
        callReaction2(reaction, state);
      });
      return reaction.promise;
    });
    OwnPromiseCapability2 = function() {
      var promise5 = new Internal2();
      var state = getInternalPromiseState2(promise5);
      this.promise = promise5;
      this.resolve = bind$42(internalResolve2, state);
      this.reject = bind$42(internalReject2, state);
    };
    newPromiseCapabilityModule$42.f = newPromiseCapability$12 = function(C2) {
      return C2 === PromiseConstructor2 || C2 === PromiseWrapper2 ? new OwnPromiseCapability2(C2) : newGenericPromiseCapability2(C2);
    };
    if (isCallable$62(NativePromiseConstructor$22) && NativePromisePrototype$12 !== Object.prototype) {
      nativeThen2 = NativePromisePrototype$12.then;
      if (!NATIVE_PROMISE_SUBCLASSING2) {
        defineBuiltIn$52(NativePromisePrototype$12, "then", function then5(onFulfilled, onRejected) {
          var that = this;
          return new PromiseConstructor2(function(resolve5, reject5) {
            call$92(nativeThen2, that, resolve5, reject5);
          }).then(onFulfilled, onRejected);
        }, { unsafe: true });
      }
      try {
        delete NativePromisePrototype$12.constructor;
      } catch (error) {
      }
      if (setPrototypeOf$22) {
        setPrototypeOf$22(NativePromisePrototype$12, PromisePrototype2);
      }
    }
  }
  $$l2({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR$42 }, {
    Promise: PromiseConstructor2
  });
  setToStringTag$42(PromiseConstructor2, PROMISE2, false);
  setSpecies$12(PROMISE2);
  var iterators2 = {};
  var wellKnownSymbol$c2 = wellKnownSymbol$k2;
  var Iterators$42 = iterators2;
  var ITERATOR$52 = wellKnownSymbol$c2("iterator");
  var ArrayPrototype$12 = Array.prototype;
  var isArrayIteratorMethod$22 = function(it) {
    return it !== void 0 && (Iterators$42.Array === it || ArrayPrototype$12[ITERATOR$52] === it);
  };
  var classof$52 = classof$92;
  var getMethod$12 = getMethod$32;
  var isNullOrUndefined$32 = isNullOrUndefined$72;
  var Iterators$32 = iterators2;
  var wellKnownSymbol$b2 = wellKnownSymbol$k2;
  var ITERATOR$42 = wellKnownSymbol$b2("iterator");
  var getIteratorMethod$32 = function(it) {
    if (!isNullOrUndefined$32(it)) return getMethod$12(it, ITERATOR$42) || getMethod$12(it, "@@iterator") || Iterators$32[classof$52(it)];
  };
  var call$82 = functionCall2;
  var aCallable$42 = aCallable$a2;
  var anObject$72 = anObject$c2;
  var tryToString$22 = tryToString$52;
  var getIteratorMethod$22 = getIteratorMethod$32;
  var $TypeError$42 = TypeError;
  var getIterator$22 = function(argument, usingIterator) {
    var iteratorMethod = arguments.length < 2 ? getIteratorMethod$22(argument) : usingIterator;
    if (aCallable$42(iteratorMethod)) return anObject$72(call$82(iteratorMethod, argument));
    throw new $TypeError$42(tryToString$22(argument) + " is not iterable");
  };
  var call$72 = functionCall2;
  var anObject$62 = anObject$c2;
  var getMethod2 = getMethod$32;
  var iteratorClose$22 = function(iterator, kind, value) {
    var innerResult, innerError;
    anObject$62(iterator);
    try {
      innerResult = getMethod2(iterator, "return");
      if (!innerResult) {
        if (kind === "throw") throw value;
        return value;
      }
      innerResult = call$72(innerResult, iterator);
    } catch (error) {
      innerError = true;
      innerResult = error;
    }
    if (kind === "throw") throw value;
    if (innerError) throw innerResult;
    anObject$62(innerResult);
    return value;
  };
  var bind$32 = functionBindContext2;
  var call$62 = functionCall2;
  var anObject$52 = anObject$c2;
  var tryToString$12 = tryToString$52;
  var isArrayIteratorMethod$12 = isArrayIteratorMethod$22;
  var lengthOfArrayLike$62 = lengthOfArrayLike$82;
  var isPrototypeOf2 = objectIsPrototypeOf2;
  var getIterator$12 = getIterator$22;
  var getIteratorMethod$12 = getIteratorMethod$32;
  var iteratorClose$12 = iteratorClose$22;
  var $TypeError$32 = TypeError;
  var Result2 = function(stopped, result) {
    this.stopped = stopped;
    this.result = result;
  };
  var ResultPrototype2 = Result2.prototype;
  var iterate$62 = function(iterable, unboundFunction, options) {
    var that = options && options.that;
    var AS_ENTRIES = !!(options && options.AS_ENTRIES);
    var IS_RECORD = !!(options && options.IS_RECORD);
    var IS_ITERATOR = !!(options && options.IS_ITERATOR);
    var INTERRUPTED = !!(options && options.INTERRUPTED);
    var fn2 = bind$32(unboundFunction, that);
    var iterator, iterFn, index, length3, result, next5, step;
    var stop = function(condition) {
      if (iterator) iteratorClose$12(iterator, "normal", condition);
      return new Result2(true, condition);
    };
    var callFn = function(value) {
      if (AS_ENTRIES) {
        anObject$52(value);
        return INTERRUPTED ? fn2(value[0], value[1], stop) : fn2(value[0], value[1]);
      }
      return INTERRUPTED ? fn2(value, stop) : fn2(value);
    };
    if (IS_RECORD) {
      iterator = iterable.iterator;
    } else if (IS_ITERATOR) {
      iterator = iterable;
    } else {
      iterFn = getIteratorMethod$12(iterable);
      if (!iterFn) throw new $TypeError$32(tryToString$12(iterable) + " is not iterable");
      if (isArrayIteratorMethod$12(iterFn)) {
        for (index = 0, length3 = lengthOfArrayLike$62(iterable); length3 > index; index++) {
          result = callFn(iterable[index]);
          if (result && isPrototypeOf2(ResultPrototype2, result)) return result;
        }
        return new Result2(false);
      }
      iterator = getIterator$12(iterable, iterFn);
    }
    next5 = IS_RECORD ? iterable.next : iterator.next;
    while (!(step = call$62(next5, iterator)).done) {
      try {
        result = callFn(step.value);
      } catch (error) {
        iteratorClose$12(iterator, "throw", error);
      }
      if (typeof result == "object" && result && isPrototypeOf2(ResultPrototype2, result)) return result;
    }
    return new Result2(false);
  };
  var wellKnownSymbol$a2 = wellKnownSymbol$k2;
  var ITERATOR$32 = wellKnownSymbol$a2("iterator");
  var SAFE_CLOSING2 = false;
  try {
    called = 0;
    iteratorWithReturn = {
      next: function() {
        return { done: !!called++ };
      },
      "return": function() {
        SAFE_CLOSING2 = true;
      }
    };
    iteratorWithReturn[ITERATOR$32] = function() {
      return this;
    };
    Array.from(iteratorWithReturn, function() {
      throw 2;
    });
  } catch (error) {
  }
  var called;
  var iteratorWithReturn;
  var checkCorrectnessOfIteration$32 = function(exec5, SKIP_CLOSING) {
    try {
      if (!SKIP_CLOSING && !SAFE_CLOSING2) return false;
    } catch (error) {
      return false;
    }
    var ITERATION_SUPPORT = false;
    try {
      var object = {};
      object[ITERATOR$32] = function() {
        return {
          next: function() {
            return { done: ITERATION_SUPPORT = true };
          }
        };
      };
      exec5(object);
    } catch (error) {
    }
    return ITERATION_SUPPORT;
  };
  var NativePromiseConstructor$12 = promiseNativeConstructor2;
  var checkCorrectnessOfIteration$22 = checkCorrectnessOfIteration$32;
  var FORCED_PROMISE_CONSTRUCTOR$32 = promiseConstructorDetection2.CONSTRUCTOR;
  var promiseStaticsIncorrectIteration2 = FORCED_PROMISE_CONSTRUCTOR$32 || !checkCorrectnessOfIteration$22(function(iterable) {
    NativePromiseConstructor$12.all(iterable).then(void 0, function() {
    });
  });
  var $$k2 = _export2;
  var call$52 = functionCall2;
  var aCallable$32 = aCallable$a2;
  var newPromiseCapabilityModule$32 = newPromiseCapability$22;
  var perform$22 = perform$42;
  var iterate$52 = iterate$62;
  var PROMISE_STATICS_INCORRECT_ITERATION$22 = promiseStaticsIncorrectIteration2;
  $$k2({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$22 }, {
    all: function all2(iterable) {
      var C2 = this;
      var capability = newPromiseCapabilityModule$32.f(C2);
      var resolve5 = capability.resolve;
      var reject5 = capability.reject;
      var result = perform$22(function() {
        var $promiseResolve = aCallable$32(C2.resolve);
        var values5 = [];
        var counter5 = 0;
        var remaining = 1;
        iterate$52(iterable, function(promise5) {
          var index = counter5++;
          var alreadyCalled = false;
          remaining++;
          call$52($promiseResolve, C2, promise5).then(function(value) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values5[index] = value;
            --remaining || resolve5(values5);
          }, reject5);
        });
        --remaining || resolve5(values5);
      });
      if (result.error) reject5(result.value);
      return capability.promise;
    }
  });
  var $$j2 = _export2;
  var FORCED_PROMISE_CONSTRUCTOR$22 = promiseConstructorDetection2.CONSTRUCTOR;
  var NativePromiseConstructor2 = promiseNativeConstructor2;
  var getBuiltIn$12 = getBuiltIn$72;
  var isCallable$52 = isCallable$m2;
  var defineBuiltIn$42 = defineBuiltIn$82;
  var NativePromisePrototype2 = NativePromiseConstructor2 && NativePromiseConstructor2.prototype;
  $$j2({ target: "Promise", proto: true, forced: FORCED_PROMISE_CONSTRUCTOR$22, real: true }, {
    "catch": function(onRejected) {
      return this.then(void 0, onRejected);
    }
  });
  if (isCallable$52(NativePromiseConstructor2)) {
    method = getBuiltIn$12("Promise").prototype["catch"];
    if (NativePromisePrototype2["catch"] !== method) {
      defineBuiltIn$42(NativePromisePrototype2, "catch", method, { unsafe: true });
    }
  }
  var method;
  var $$i2 = _export2;
  var call$42 = functionCall2;
  var aCallable$22 = aCallable$a2;
  var newPromiseCapabilityModule$22 = newPromiseCapability$22;
  var perform$12 = perform$42;
  var iterate$42 = iterate$62;
  var PROMISE_STATICS_INCORRECT_ITERATION$12 = promiseStaticsIncorrectIteration2;
  $$i2({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$12 }, {
    race: function race2(iterable) {
      var C2 = this;
      var capability = newPromiseCapabilityModule$22.f(C2);
      var reject5 = capability.reject;
      var result = perform$12(function() {
        var $promiseResolve = aCallable$22(C2.resolve);
        iterate$42(iterable, function(promise5) {
          call$42($promiseResolve, C2, promise5).then(capability.resolve, reject5);
        });
      });
      if (result.error) reject5(result.value);
      return capability.promise;
    }
  });
  var $$h2 = _export2;
  var call$32 = functionCall2;
  var newPromiseCapabilityModule$12 = newPromiseCapability$22;
  var FORCED_PROMISE_CONSTRUCTOR$12 = promiseConstructorDetection2.CONSTRUCTOR;
  $$h2({ target: "Promise", stat: true, forced: FORCED_PROMISE_CONSTRUCTOR$12 }, {
    reject: function reject2(r) {
      var capability = newPromiseCapabilityModule$12.f(this);
      call$32(capability.reject, void 0, r);
      return capability.promise;
    }
  });
  var anObject$42 = anObject$c2;
  var isObject$b2 = isObject$i2;
  var newPromiseCapability2 = newPromiseCapability$22;
  var promiseResolve$12 = function(C2, x) {
    anObject$42(C2);
    if (isObject$b2(x) && x.constructor === C2) return x;
    var promiseCapability = newPromiseCapability2.f(C2);
    var resolve5 = promiseCapability.resolve;
    resolve5(x);
    return promiseCapability.promise;
  };
  var $$g2 = _export2;
  var getBuiltIn2 = getBuiltIn$72;
  var FORCED_PROMISE_CONSTRUCTOR2 = promiseConstructorDetection2.CONSTRUCTOR;
  var promiseResolve2 = promiseResolve$12;
  getBuiltIn2("Promise");
  $$g2({ target: "Promise", stat: true, forced: FORCED_PROMISE_CONSTRUCTOR2 }, {
    resolve: function resolve2(x) {
      return promiseResolve2(this, x);
    }
  });
  var objectDefineProperties2 = {};
  var DESCRIPTORS$32 = descriptors2;
  var V8_PROTOTYPE_DEFINE_BUG2 = v8PrototypeDefineBug2;
  var definePropertyModule$12 = objectDefineProperty2;
  var anObject$32 = anObject$c2;
  var toIndexedObject$52 = toIndexedObject$92;
  var objectKeys$12 = objectKeys$32;
  objectDefineProperties2.f = DESCRIPTORS$32 && !V8_PROTOTYPE_DEFINE_BUG2 ? Object.defineProperties : function defineProperties2(O, Properties) {
    anObject$32(O);
    var props = toIndexedObject$52(Properties);
    var keys12 = objectKeys$12(Properties);
    var length3 = keys12.length;
    var index = 0;
    var key;
    while (length3 > index) definePropertyModule$12.f(O, key = keys12[index++], props[key]);
    return O;
  };
  var anObject$22 = anObject$c2;
  var definePropertiesModule2 = objectDefineProperties2;
  var enumBugKeys2 = enumBugKeys$32;
  var hiddenKeys$12 = hiddenKeys$52;
  var html2 = html$22;
  var documentCreateElement$12 = documentCreateElement$22;
  var sharedKey$12 = sharedKey$32;
  var GT2 = ">";
  var LT2 = "<";
  var PROTOTYPE2 = "prototype";
  var SCRIPT2 = "script";
  var IE_PROTO$12 = sharedKey$12("IE_PROTO");
  var EmptyConstructor2 = function() {
  };
  var scriptTag2 = function(content) {
    return LT2 + SCRIPT2 + GT2 + content + LT2 + "/" + SCRIPT2 + GT2;
  };
  var NullProtoObjectViaActiveX2 = function(activeXDocument5) {
    activeXDocument5.write(scriptTag2(""));
    activeXDocument5.close();
    var temp = activeXDocument5.parentWindow.Object;
    activeXDocument5 = null;
    return temp;
  };
  var NullProtoObjectViaIFrame2 = function() {
    var iframe = documentCreateElement$12("iframe");
    var JS = "java" + SCRIPT2 + ":";
    var iframeDocument;
    iframe.style.display = "none";
    html2.appendChild(iframe);
    iframe.src = String(JS);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(scriptTag2("document.F=Object"));
    iframeDocument.close();
    return iframeDocument.F;
  };
  var activeXDocument2;
  var NullProtoObject2 = function() {
    try {
      activeXDocument2 = new ActiveXObject("htmlfile");
    } catch (error) {
    }
    NullProtoObject2 = typeof document != "undefined" ? document.domain && activeXDocument2 ? NullProtoObjectViaActiveX2(activeXDocument2) : NullProtoObjectViaIFrame2() : NullProtoObjectViaActiveX2(activeXDocument2);
    var length3 = enumBugKeys2.length;
    while (length3--) delete NullProtoObject2[PROTOTYPE2][enumBugKeys2[length3]];
    return NullProtoObject2();
  };
  hiddenKeys$12[IE_PROTO$12] = true;
  var objectCreate2 = Object.create || function create4(O, Properties) {
    var result;
    if (O !== null) {
      EmptyConstructor2[PROTOTYPE2] = anObject$22(O);
      result = new EmptyConstructor2();
      EmptyConstructor2[PROTOTYPE2] = null;
      result[IE_PROTO$12] = O;
    } else result = NullProtoObject2();
    return Properties === void 0 ? result : definePropertiesModule2.f(result, Properties);
  };
  var wellKnownSymbol$92 = wellKnownSymbol$k2;
  var create$22 = objectCreate2;
  var defineProperty$22 = objectDefineProperty2.f;
  var UNSCOPABLES2 = wellKnownSymbol$92("unscopables");
  var ArrayPrototype2 = Array.prototype;
  if (ArrayPrototype2[UNSCOPABLES2] === void 0) {
    defineProperty$22(ArrayPrototype2, UNSCOPABLES2, {
      configurable: true,
      value: create$22(null)
    });
  }
  var addToUnscopables$22 = function(key) {
    ArrayPrototype2[UNSCOPABLES2][key] = true;
  };
  var fails$d2 = fails$p2;
  var correctPrototypeGetter2 = !fails$d2(function() {
    function F() {
    }
    F.prototype.constructor = null;
    return Object.getPrototypeOf(new F()) !== F.prototype;
  });
  var hasOwn$22 = hasOwnProperty_12;
  var isCallable$42 = isCallable$m2;
  var toObject$52 = toObject$82;
  var sharedKey2 = sharedKey$32;
  var CORRECT_PROTOTYPE_GETTER2 = correctPrototypeGetter2;
  var IE_PROTO2 = sharedKey2("IE_PROTO");
  var $Object2 = Object;
  var ObjectPrototype2 = $Object2.prototype;
  var objectGetPrototypeOf$12 = CORRECT_PROTOTYPE_GETTER2 ? $Object2.getPrototypeOf : function(O) {
    var object = toObject$52(O);
    if (hasOwn$22(object, IE_PROTO2)) return object[IE_PROTO2];
    var constructor = object.constructor;
    if (isCallable$42(constructor) && object instanceof constructor) {
      return constructor.prototype;
    }
    return object instanceof $Object2 ? ObjectPrototype2 : null;
  };
  var fails$c2 = fails$p2;
  var isCallable$32 = isCallable$m2;
  var isObject$a2 = isObject$i2;
  var getPrototypeOf$12 = objectGetPrototypeOf$12;
  var defineBuiltIn$32 = defineBuiltIn$82;
  var wellKnownSymbol$82 = wellKnownSymbol$k2;
  var ITERATOR$22 = wellKnownSymbol$82("iterator");
  var BUGGY_SAFARI_ITERATORS$12 = false;
  var IteratorPrototype$22;
  var PrototypeOfArrayIteratorPrototype2;
  var arrayIterator2;
  if ([].keys) {
    arrayIterator2 = [].keys();
    if (!("next" in arrayIterator2)) BUGGY_SAFARI_ITERATORS$12 = true;
    else {
      PrototypeOfArrayIteratorPrototype2 = getPrototypeOf$12(getPrototypeOf$12(arrayIterator2));
      if (PrototypeOfArrayIteratorPrototype2 !== Object.prototype) IteratorPrototype$22 = PrototypeOfArrayIteratorPrototype2;
    }
  }
  var NEW_ITERATOR_PROTOTYPE2 = !isObject$a2(IteratorPrototype$22) || fails$c2(function() {
    var test5 = {};
    return IteratorPrototype$22[ITERATOR$22].call(test5) !== test5;
  });
  if (NEW_ITERATOR_PROTOTYPE2) IteratorPrototype$22 = {};
  if (!isCallable$32(IteratorPrototype$22[ITERATOR$22])) {
    defineBuiltIn$32(IteratorPrototype$22, ITERATOR$22, function() {
      return this;
    });
  }
  var iteratorsCore2 = {
    IteratorPrototype: IteratorPrototype$22,
    BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$12
  };
  var IteratorPrototype$12 = iteratorsCore2.IteratorPrototype;
  var create$12 = objectCreate2;
  var createPropertyDescriptor$12 = createPropertyDescriptor$42;
  var setToStringTag$32 = setToStringTag$52;
  var Iterators$22 = iterators2;
  var returnThis$12 = function() {
    return this;
  };
  var iteratorCreateConstructor2 = function(IteratorConstructor, NAME5, next5, ENUMERABLE_NEXT) {
    var TO_STRING_TAG5 = NAME5 + " Iterator";
    IteratorConstructor.prototype = create$12(IteratorPrototype$12, { next: createPropertyDescriptor$12(+!ENUMERABLE_NEXT, next5) });
    setToStringTag$32(IteratorConstructor, TO_STRING_TAG5, false);
    Iterators$22[TO_STRING_TAG5] = returnThis$12;
    return IteratorConstructor;
  };
  var $$f2 = _export2;
  var call$22 = functionCall2;
  var FunctionName2 = functionName2;
  var isCallable$22 = isCallable$m2;
  var createIteratorConstructor2 = iteratorCreateConstructor2;
  var getPrototypeOf2 = objectGetPrototypeOf$12;
  var setPrototypeOf$12 = objectSetPrototypeOf2;
  var setToStringTag$22 = setToStringTag$52;
  var createNonEnumerableProperty$22 = createNonEnumerableProperty$52;
  var defineBuiltIn$22 = defineBuiltIn$82;
  var wellKnownSymbol$72 = wellKnownSymbol$k2;
  var Iterators$12 = iterators2;
  var IteratorsCore2 = iteratorsCore2;
  var PROPER_FUNCTION_NAME$12 = FunctionName2.PROPER;
  var CONFIGURABLE_FUNCTION_NAME2 = FunctionName2.CONFIGURABLE;
  var IteratorPrototype2 = IteratorsCore2.IteratorPrototype;
  var BUGGY_SAFARI_ITERATORS2 = IteratorsCore2.BUGGY_SAFARI_ITERATORS;
  var ITERATOR$12 = wellKnownSymbol$72("iterator");
  var KEYS2 = "keys";
  var VALUES2 = "values";
  var ENTRIES2 = "entries";
  var returnThis2 = function() {
    return this;
  };
  var iteratorDefine2 = function(Iterable, NAME5, IteratorConstructor, next5, DEFAULT, IS_SET, FORCED5) {
    createIteratorConstructor2(IteratorConstructor, NAME5, next5);
    var getIterationMethod = function(KIND) {
      if (KIND === DEFAULT && defaultIterator) return defaultIterator;
      if (!BUGGY_SAFARI_ITERATORS2 && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];
      switch (KIND) {
        case KEYS2:
          return function keys12() {
            return new IteratorConstructor(this, KIND);
          };
        case VALUES2:
          return function values5() {
            return new IteratorConstructor(this, KIND);
          };
        case ENTRIES2:
          return function entries3() {
            return new IteratorConstructor(this, KIND);
          };
      }
      return function() {
        return new IteratorConstructor(this);
      };
    };
    var TO_STRING_TAG5 = NAME5 + " Iterator";
    var INCORRECT_VALUES_NAME = false;
    var IterablePrototype = Iterable.prototype;
    var nativeIterator = IterablePrototype[ITERATOR$12] || IterablePrototype["@@iterator"] || DEFAULT && IterablePrototype[DEFAULT];
    var defaultIterator = !BUGGY_SAFARI_ITERATORS2 && nativeIterator || getIterationMethod(DEFAULT);
    var anyNativeIterator = NAME5 === "Array" ? IterablePrototype.entries || nativeIterator : nativeIterator;
    var CurrentIteratorPrototype, methods, KEY;
    if (anyNativeIterator) {
      CurrentIteratorPrototype = getPrototypeOf2(anyNativeIterator.call(new Iterable()));
      if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
        if (getPrototypeOf2(CurrentIteratorPrototype) !== IteratorPrototype2) {
          if (setPrototypeOf$12) {
            setPrototypeOf$12(CurrentIteratorPrototype, IteratorPrototype2);
          } else if (!isCallable$22(CurrentIteratorPrototype[ITERATOR$12])) {
            defineBuiltIn$22(CurrentIteratorPrototype, ITERATOR$12, returnThis2);
          }
        }
        setToStringTag$22(CurrentIteratorPrototype, TO_STRING_TAG5, true);
      }
    }
    if (PROPER_FUNCTION_NAME$12 && DEFAULT === VALUES2 && nativeIterator && nativeIterator.name !== VALUES2) {
      if (CONFIGURABLE_FUNCTION_NAME2) {
        createNonEnumerableProperty$22(IterablePrototype, "name", VALUES2);
      } else {
        INCORRECT_VALUES_NAME = true;
        defaultIterator = function values5() {
          return call$22(nativeIterator, this);
        };
      }
    }
    if (DEFAULT) {
      methods = {
        values: getIterationMethod(VALUES2),
        keys: IS_SET ? defaultIterator : getIterationMethod(KEYS2),
        entries: getIterationMethod(ENTRIES2)
      };
      if (FORCED5) for (KEY in methods) {
        if (BUGGY_SAFARI_ITERATORS2 || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
          defineBuiltIn$22(IterablePrototype, KEY, methods[KEY]);
        }
      }
      else $$f2({ target: NAME5, proto: true, forced: BUGGY_SAFARI_ITERATORS2 || INCORRECT_VALUES_NAME }, methods);
    }
    if (IterablePrototype[ITERATOR$12] !== defaultIterator) {
      defineBuiltIn$22(IterablePrototype, ITERATOR$12, defaultIterator, { name: DEFAULT });
    }
    Iterators$12[NAME5] = defaultIterator;
    return methods;
  };
  var createIterResultObject$32 = function(value, done) {
    return { value, done };
  };
  var toIndexedObject$42 = toIndexedObject$92;
  var addToUnscopables$12 = addToUnscopables$22;
  var Iterators2 = iterators2;
  var InternalStateModule$32 = internalState2;
  var defineProperty$12 = objectDefineProperty2.f;
  var defineIterator$22 = iteratorDefine2;
  var createIterResultObject$22 = createIterResultObject$32;
  var DESCRIPTORS$22 = descriptors2;
  var ARRAY_ITERATOR2 = "Array Iterator";
  var setInternalState$32 = InternalStateModule$32.set;
  var getInternalState$12 = InternalStateModule$32.getterFor(ARRAY_ITERATOR2);
  var es_array_iterator2 = defineIterator$22(Array, "Array", function(iterated, kind) {
    setInternalState$32(this, {
      type: ARRAY_ITERATOR2,
      target: toIndexedObject$42(iterated),
      // target
      index: 0,
      // next index
      kind
      // kind
    });
  }, function() {
    var state = getInternalState$12(this);
    var target = state.target;
    var index = state.index++;
    if (!target || index >= target.length) {
      state.target = void 0;
      return createIterResultObject$22(void 0, true);
    }
    switch (state.kind) {
      case "keys":
        return createIterResultObject$22(index, false);
      case "values":
        return createIterResultObject$22(target[index], false);
    }
    return createIterResultObject$22([index, target[index]], false);
  }, "values");
  var values2 = Iterators2.Arguments = Iterators2.Array;
  addToUnscopables$12("keys");
  addToUnscopables$12("values");
  addToUnscopables$12("entries");
  if (DESCRIPTORS$22 && values2.name !== "values") try {
    defineProperty$12(values2, "name", { value: "values" });
  } catch (error) {
  }
  var classof$42 = classof$92;
  var $String2 = String;
  var toString$52 = function(argument) {
    if (classof$42(argument) === "Symbol") throw new TypeError("Cannot convert a Symbol value to a string");
    return $String2(argument);
  };
  var uncurryThis$92 = functionUncurryThis2;
  var toIntegerOrInfinity2 = toIntegerOrInfinity$32;
  var toString$42 = toString$52;
  var requireObjectCoercible$22 = requireObjectCoercible$52;
  var charAt$12 = uncurryThis$92("".charAt);
  var charCodeAt2 = uncurryThis$92("".charCodeAt);
  var stringSlice$12 = uncurryThis$92("".slice);
  var createMethod$32 = function(CONVERT_TO_STRING) {
    return function($this, pos) {
      var S = toString$42(requireObjectCoercible$22($this));
      var position3 = toIntegerOrInfinity2(pos);
      var size = S.length;
      var first, second2;
      if (position3 < 0 || position3 >= size) return CONVERT_TO_STRING ? "" : void 0;
      first = charCodeAt2(S, position3);
      return first < 55296 || first > 56319 || position3 + 1 === size || (second2 = charCodeAt2(S, position3 + 1)) < 56320 || second2 > 57343 ? CONVERT_TO_STRING ? charAt$12(S, position3) : first : CONVERT_TO_STRING ? stringSlice$12(S, position3, position3 + 2) : (first - 55296 << 10) + (second2 - 56320) + 65536;
    };
  };
  var stringMultibyte2 = {
    // `String.prototype.codePointAt` method
    // https://tc39.es/ecma262/#sec-string.prototype.codepointat
    codeAt: createMethod$32(false),
    // `String.prototype.at` method
    // https://github.com/mathiasbynens/String.prototype.at
    charAt: createMethod$32(true)
  };
  var charAt2 = stringMultibyte2.charAt;
  var toString$32 = toString$52;
  var InternalStateModule$22 = internalState2;
  var defineIterator$12 = iteratorDefine2;
  var createIterResultObject$12 = createIterResultObject$32;
  var STRING_ITERATOR2 = "String Iterator";
  var setInternalState$22 = InternalStateModule$22.set;
  var getInternalState2 = InternalStateModule$22.getterFor(STRING_ITERATOR2);
  defineIterator$12(String, "String", function(iterated) {
    setInternalState$22(this, {
      type: STRING_ITERATOR2,
      string: toString$32(iterated),
      index: 0
    });
  }, function next2() {
    var state = getInternalState2(this);
    var string = state.string;
    var index = state.index;
    var point2;
    if (index >= string.length) return createIterResultObject$12(void 0, true);
    point2 = charAt2(string, index);
    state.index += point2.length;
    return createIterResultObject$12(point2, false);
  });
  var internalMetadata2 = { exports: {} };
  var objectGetOwnPropertyNamesExternal2 = {};
  var toPropertyKey2 = toPropertyKey$32;
  var definePropertyModule2 = objectDefineProperty2;
  var createPropertyDescriptor2 = createPropertyDescriptor$42;
  var createProperty$42 = function(object, key, value) {
    var propertyKey = toPropertyKey2(key);
    if (propertyKey in object) definePropertyModule2.f(object, propertyKey, createPropertyDescriptor2(0, value));
    else object[propertyKey] = value;
  };
  var toAbsoluteIndex$12 = toAbsoluteIndex$32;
  var lengthOfArrayLike$52 = lengthOfArrayLike$82;
  var createProperty$32 = createProperty$42;
  var $Array$32 = Array;
  var max$12 = Math.max;
  var arraySliceSimple2 = function(O, start3, end2) {
    var length3 = lengthOfArrayLike$52(O);
    var k2 = toAbsoluteIndex$12(start3, length3);
    var fin = toAbsoluteIndex$12(end2 === void 0 ? length3 : end2, length3);
    var result = $Array$32(max$12(fin - k2, 0));
    var n = 0;
    for (; k2 < fin; k2++, n++) createProperty$32(result, n, O[k2]);
    result.length = n;
    return result;
  };
  var classof$32 = classofRaw$22;
  var toIndexedObject$32 = toIndexedObject$92;
  var $getOwnPropertyNames2 = objectGetOwnPropertyNames2.f;
  var arraySlice$12 = arraySliceSimple2;
  var windowNames2 = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
  var getWindowNames2 = function(it) {
    try {
      return $getOwnPropertyNames2(it);
    } catch (error) {
      return arraySlice$12(windowNames2);
    }
  };
  objectGetOwnPropertyNamesExternal2.f = function getOwnPropertyNames4(it) {
    return windowNames2 && classof$32(it) === "Window" ? getWindowNames2(it) : $getOwnPropertyNames2(toIndexedObject$32(it));
  };
  var fails$b2 = fails$p2;
  var arrayBufferNonExtensible2 = fails$b2(function() {
    if (typeof ArrayBuffer == "function") {
      var buffer = new ArrayBuffer(8);
      if (Object.isExtensible(buffer)) Object.defineProperty(buffer, "a", { value: 8 });
    }
  });
  var fails$a2 = fails$p2;
  var isObject$92 = isObject$i2;
  var classof$22 = classofRaw$22;
  var ARRAY_BUFFER_NON_EXTENSIBLE2 = arrayBufferNonExtensible2;
  var $isExtensible2 = Object.isExtensible;
  var FAILS_ON_PRIMITIVES$12 = fails$a2(function() {
    $isExtensible2(1);
  });
  var objectIsExtensible2 = FAILS_ON_PRIMITIVES$12 || ARRAY_BUFFER_NON_EXTENSIBLE2 ? function isExtensible3(it) {
    if (!isObject$92(it)) return false;
    if (ARRAY_BUFFER_NON_EXTENSIBLE2 && classof$22(it) === "ArrayBuffer") return false;
    return $isExtensible2 ? $isExtensible2(it) : true;
  } : $isExtensible2;
  var fails$92 = fails$p2;
  var freezing2 = !fails$92(function() {
    return Object.isExtensible(Object.preventExtensions({}));
  });
  var $$e2 = _export2;
  var uncurryThis$82 = functionUncurryThis2;
  var hiddenKeys2 = hiddenKeys$52;
  var isObject$82 = isObject$i2;
  var hasOwn$12 = hasOwnProperty_12;
  var defineProperty6 = objectDefineProperty2.f;
  var getOwnPropertyNamesModule2 = objectGetOwnPropertyNames2;
  var getOwnPropertyNamesExternalModule2 = objectGetOwnPropertyNamesExternal2;
  var isExtensible4 = objectIsExtensible2;
  var uid2 = uid$32;
  var FREEZING2 = freezing2;
  var REQUIRED2 = false;
  var METADATA2 = uid2("meta");
  var id$12 = 0;
  var setMetadata2 = function(it) {
    defineProperty6(it, METADATA2, { value: {
      objectID: "O" + id$12++,
      // object ID
      weakData: {}
      // weak collections IDs
    } });
  };
  var fastKey$12 = function(it, create10) {
    if (!isObject$82(it)) return typeof it == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;
    if (!hasOwn$12(it, METADATA2)) {
      if (!isExtensible4(it)) return "F";
      if (!create10) return "E";
      setMetadata2(it);
    }
    return it[METADATA2].objectID;
  };
  var getWeakData$12 = function(it, create10) {
    if (!hasOwn$12(it, METADATA2)) {
      if (!isExtensible4(it)) return true;
      if (!create10) return false;
      setMetadata2(it);
    }
    return it[METADATA2].weakData;
  };
  var onFreeze2 = function(it) {
    if (FREEZING2 && REQUIRED2 && isExtensible4(it) && !hasOwn$12(it, METADATA2)) setMetadata2(it);
    return it;
  };
  var enable2 = function() {
    meta2.enable = function() {
    };
    REQUIRED2 = true;
    var getOwnPropertyNames9 = getOwnPropertyNamesModule2.f;
    var splice5 = uncurryThis$82([].splice);
    var test5 = {};
    test5[METADATA2] = 1;
    if (getOwnPropertyNames9(test5).length) {
      getOwnPropertyNamesModule2.f = function(it) {
        var result = getOwnPropertyNames9(it);
        for (var i = 0, length3 = result.length; i < length3; i++) {
          if (result[i] === METADATA2) {
            splice5(result, i, 1);
            break;
          }
        }
        return result;
      };
      $$e2({ target: "Object", stat: true, forced: true }, {
        getOwnPropertyNames: getOwnPropertyNamesExternalModule2.f
      });
    }
  };
  var meta2 = internalMetadata2.exports = {
    enable: enable2,
    fastKey: fastKey$12,
    getWeakData: getWeakData$12,
    onFreeze: onFreeze2
  };
  hiddenKeys2[METADATA2] = true;
  var internalMetadataExports2 = internalMetadata2.exports;
  var isCallable$12 = isCallable$m2;
  var isObject$72 = isObject$i2;
  var setPrototypeOf2 = objectSetPrototypeOf2;
  var inheritIfRequired$12 = function($this, dummy, Wrapper) {
    var NewTarget, NewTargetPrototype;
    if (
      // it can work only with native `setPrototypeOf`
      setPrototypeOf2 && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
      isCallable$12(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject$72(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype
    ) setPrototypeOf2($this, NewTargetPrototype);
    return $this;
  };
  var $$d2 = _export2;
  var global$32 = global$k2;
  var uncurryThis$72 = functionUncurryThis2;
  var isForced2 = isForced_12;
  var defineBuiltIn$12 = defineBuiltIn$82;
  var InternalMetadataModule2 = internalMetadataExports2;
  var iterate$32 = iterate$62;
  var anInstance$22 = anInstance$42;
  var isCallable2 = isCallable$m2;
  var isNullOrUndefined$22 = isNullOrUndefined$72;
  var isObject$62 = isObject$i2;
  var fails$82 = fails$p2;
  var checkCorrectnessOfIteration$12 = checkCorrectnessOfIteration$32;
  var setToStringTag$12 = setToStringTag$52;
  var inheritIfRequired2 = inheritIfRequired$12;
  var collection$22 = function(CONSTRUCTOR_NAME, wrapper, common) {
    var IS_MAP = CONSTRUCTOR_NAME.indexOf("Map") !== -1;
    var IS_WEAK = CONSTRUCTOR_NAME.indexOf("Weak") !== -1;
    var ADDER = IS_MAP ? "set" : "add";
    var NativeConstructor = global$32[CONSTRUCTOR_NAME];
    var NativePrototype = NativeConstructor && NativeConstructor.prototype;
    var Constructor = NativeConstructor;
    var exported = {};
    var fixMethod = function(KEY) {
      var uncurriedNativeMethod = uncurryThis$72(NativePrototype[KEY]);
      defineBuiltIn$12(
        NativePrototype,
        KEY,
        KEY === "add" ? function add(value) {
          uncurriedNativeMethod(this, value === 0 ? 0 : value);
          return this;
        } : KEY === "delete" ? function(key) {
          return IS_WEAK && !isObject$62(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : KEY === "get" ? function get7(key) {
          return IS_WEAK && !isObject$62(key) ? void 0 : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : KEY === "has" ? function has5(key) {
          return IS_WEAK && !isObject$62(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : function set7(key, value) {
          uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
          return this;
        }
      );
    };
    var REPLACE2 = isForced2(
      CONSTRUCTOR_NAME,
      !isCallable2(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails$82(function() {
        new NativeConstructor().entries().next();
      }))
    );
    if (REPLACE2) {
      Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
      InternalMetadataModule2.enable();
    } else if (isForced2(CONSTRUCTOR_NAME, true)) {
      var instance = new Constructor();
      var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) !== instance;
      var THROWS_ON_PRIMITIVES = fails$82(function() {
        instance.has(1);
      });
      var ACCEPT_ITERABLES = checkCorrectnessOfIteration$12(function(iterable) {
        new NativeConstructor(iterable);
      });
      var BUGGY_ZERO = !IS_WEAK && fails$82(function() {
        var $instance = new NativeConstructor();
        var index = 5;
        while (index--) $instance[ADDER](index, index);
        return !$instance.has(-0);
      });
      if (!ACCEPT_ITERABLES) {
        Constructor = wrapper(function(dummy, iterable) {
          anInstance$22(dummy, NativePrototype);
          var that = inheritIfRequired2(new NativeConstructor(), dummy, Constructor);
          if (!isNullOrUndefined$22(iterable)) iterate$32(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
          return that;
        });
        Constructor.prototype = NativePrototype;
        NativePrototype.constructor = Constructor;
      }
      if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
        fixMethod("delete");
        fixMethod("has");
        IS_MAP && fixMethod("get");
      }
      if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
      if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
    }
    exported[CONSTRUCTOR_NAME] = Constructor;
    $$d2({ global: true, constructor: true, forced: Constructor !== NativeConstructor }, exported);
    setToStringTag$12(Constructor, CONSTRUCTOR_NAME);
    if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
    return Constructor;
  };
  var defineBuiltIn2 = defineBuiltIn$82;
  var defineBuiltIns$22 = function(target, src, options) {
    for (var key in src) defineBuiltIn2(target, key, src[key], options);
    return target;
  };
  var classof$12 = classofRaw$22;
  var isArray$32 = Array.isArray || function isArray3(argument) {
    return classof$12(argument) === "Array";
  };
  var isArray$22 = isArray$32;
  var isConstructor$22 = isConstructor$42;
  var isObject$52 = isObject$i2;
  var wellKnownSymbol$62 = wellKnownSymbol$k2;
  var SPECIES$22 = wellKnownSymbol$62("species");
  var $Array$22 = Array;
  var arraySpeciesConstructor$12 = function(originalArray) {
    var C2;
    if (isArray$22(originalArray)) {
      C2 = originalArray.constructor;
      if (isConstructor$22(C2) && (C2 === $Array$22 || isArray$22(C2.prototype))) C2 = void 0;
      else if (isObject$52(C2)) {
        C2 = C2[SPECIES$22];
        if (C2 === null) C2 = void 0;
      }
    }
    return C2 === void 0 ? $Array$22 : C2;
  };
  var arraySpeciesConstructor2 = arraySpeciesConstructor$12;
  var arraySpeciesCreate$22 = function(originalArray, length3) {
    return new (arraySpeciesConstructor2(originalArray))(length3 === 0 ? 0 : length3);
  };
  var bind$22 = functionBindContext2;
  var uncurryThis$62 = functionUncurryThis2;
  var IndexedObject$12 = indexedObject2;
  var toObject$42 = toObject$82;
  var lengthOfArrayLike$42 = lengthOfArrayLike$82;
  var arraySpeciesCreate$12 = arraySpeciesCreate$22;
  var push$22 = uncurryThis$62([].push);
  var createMethod$22 = function(TYPE) {
    var IS_MAP = TYPE === 1;
    var IS_FILTER = TYPE === 2;
    var IS_SOME = TYPE === 3;
    var IS_EVERY = TYPE === 4;
    var IS_FIND_INDEX = TYPE === 6;
    var IS_FILTER_REJECT = TYPE === 7;
    var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
    return function($this, callbackfn, that, specificCreate) {
      var O = toObject$42($this);
      var self2 = IndexedObject$12(O);
      var length3 = lengthOfArrayLike$42(self2);
      var boundFunction = bind$22(callbackfn, that);
      var index = 0;
      var create10 = specificCreate || arraySpeciesCreate$12;
      var target = IS_MAP ? create10($this, length3) : IS_FILTER || IS_FILTER_REJECT ? create10($this, 0) : void 0;
      var value, result;
      for (; length3 > index; index++) if (NO_HOLES || index in self2) {
        value = self2[index];
        result = boundFunction(value, index, O);
        if (TYPE) {
          if (IS_MAP) target[index] = result;
          else if (result) switch (TYPE) {
            case 3:
              return true;
            // some
            case 5:
              return value;
            // find
            case 6:
              return index;
            // findIndex
            case 2:
              push$22(target, value);
          }
          else switch (TYPE) {
            case 4:
              return false;
            // every
            case 7:
              push$22(target, value);
          }
        }
      }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
    };
  };
  var arrayIteration2 = {
    // `Array.prototype.forEach` method
    // https://tc39.es/ecma262/#sec-array.prototype.foreach
    forEach: createMethod$22(0),
    // `Array.prototype.map` method
    // https://tc39.es/ecma262/#sec-array.prototype.map
    map: createMethod$22(1),
    // `Array.prototype.filter` method
    // https://tc39.es/ecma262/#sec-array.prototype.filter
    filter: createMethod$22(2),
    // `Array.prototype.some` method
    // https://tc39.es/ecma262/#sec-array.prototype.some
    some: createMethod$22(3),
    // `Array.prototype.every` method
    // https://tc39.es/ecma262/#sec-array.prototype.every
    every: createMethod$22(4),
    // `Array.prototype.find` method
    // https://tc39.es/ecma262/#sec-array.prototype.find
    find: createMethod$22(5),
    // `Array.prototype.findIndex` method
    // https://tc39.es/ecma262/#sec-array.prototype.findIndex
    findIndex: createMethod$22(6),
    // `Array.prototype.filterReject` method
    // https://github.com/tc39/proposal-array-filtering
    filterReject: createMethod$22(7)
  };
  var uncurryThis$52 = functionUncurryThis2;
  var defineBuiltIns$12 = defineBuiltIns$22;
  var getWeakData2 = internalMetadataExports2.getWeakData;
  var anInstance$12 = anInstance$42;
  var anObject$12 = anObject$c2;
  var isNullOrUndefined$12 = isNullOrUndefined$72;
  var isObject$42 = isObject$i2;
  var iterate$22 = iterate$62;
  var ArrayIterationModule2 = arrayIteration2;
  var hasOwn4 = hasOwnProperty_12;
  var InternalStateModule$12 = internalState2;
  var setInternalState$12 = InternalStateModule$12.set;
  var internalStateGetterFor$12 = InternalStateModule$12.getterFor;
  var find3 = ArrayIterationModule2.find;
  var findIndex2 = ArrayIterationModule2.findIndex;
  var splice2 = uncurryThis$52([].splice);
  var id3 = 0;
  var uncaughtFrozenStore2 = function(state) {
    return state.frozen || (state.frozen = new UncaughtFrozenStore2());
  };
  var UncaughtFrozenStore2 = function() {
    this.entries = [];
  };
  var findUncaughtFrozen2 = function(store, key) {
    return find3(store.entries, function(it) {
      return it[0] === key;
    });
  };
  UncaughtFrozenStore2.prototype = {
    get: function(key) {
      var entry = findUncaughtFrozen2(this, key);
      if (entry) return entry[1];
    },
    has: function(key) {
      return !!findUncaughtFrozen2(this, key);
    },
    set: function(key, value) {
      var entry = findUncaughtFrozen2(this, key);
      if (entry) entry[1] = value;
      else this.entries.push([key, value]);
    },
    "delete": function(key) {
      var index = findIndex2(this.entries, function(it) {
        return it[0] === key;
      });
      if (~index) splice2(this.entries, index, 1);
      return !!~index;
    }
  };
  var collectionWeak$12 = {
    getConstructor: function(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
      var Constructor = wrapper(function(that, iterable) {
        anInstance$12(that, Prototype);
        setInternalState$12(that, {
          type: CONSTRUCTOR_NAME,
          id: id3++,
          frozen: void 0
        });
        if (!isNullOrUndefined$12(iterable)) iterate$22(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
      });
      var Prototype = Constructor.prototype;
      var getInternalState5 = internalStateGetterFor$12(CONSTRUCTOR_NAME);
      var define = function(that, key, value) {
        var state = getInternalState5(that);
        var data6 = getWeakData2(anObject$12(key), true);
        if (data6 === true) uncaughtFrozenStore2(state).set(key, value);
        else data6[state.id] = value;
        return that;
      };
      defineBuiltIns$12(Prototype, {
        // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
        // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
        // https://tc39.es/ecma262/#sec-weakset.prototype.delete
        "delete": function(key) {
          var state = getInternalState5(this);
          if (!isObject$42(key)) return false;
          var data6 = getWeakData2(key);
          if (data6 === true) return uncaughtFrozenStore2(state)["delete"](key);
          return data6 && hasOwn4(data6, state.id) && delete data6[state.id];
        },
        // `{ WeakMap, WeakSet }.prototype.has(key)` methods
        // https://tc39.es/ecma262/#sec-weakmap.prototype.has
        // https://tc39.es/ecma262/#sec-weakset.prototype.has
        has: function has5(key) {
          var state = getInternalState5(this);
          if (!isObject$42(key)) return false;
          var data6 = getWeakData2(key);
          if (data6 === true) return uncaughtFrozenStore2(state).has(key);
          return data6 && hasOwn4(data6, state.id);
        }
      });
      defineBuiltIns$12(Prototype, IS_MAP ? {
        // `WeakMap.prototype.get(key)` method
        // https://tc39.es/ecma262/#sec-weakmap.prototype.get
        get: function get7(key) {
          var state = getInternalState5(this);
          if (isObject$42(key)) {
            var data6 = getWeakData2(key);
            if (data6 === true) return uncaughtFrozenStore2(state).get(key);
            return data6 ? data6[state.id] : void 0;
          }
        },
        // `WeakMap.prototype.set(key, value)` method
        // https://tc39.es/ecma262/#sec-weakmap.prototype.set
        set: function set7(key, value) {
          return define(this, key, value);
        }
      } : {
        // `WeakSet.prototype.add(value)` method
        // https://tc39.es/ecma262/#sec-weakset.prototype.add
        add: function add(value) {
          return define(this, value, true);
        }
      });
      return Constructor;
    }
  };
  var collection$12 = collection$22;
  var collectionWeak2 = collectionWeak$12;
  collection$12("WeakSet", function(init2) {
    return function WeakSet2() {
      return init2(this, arguments.length ? arguments[0] : void 0);
    };
  }, collectionWeak2);
  var domIterables2 = {
    CSSRuleList: 0,
    CSSStyleDeclaration: 0,
    CSSValueList: 0,
    ClientRectList: 0,
    DOMRectList: 0,
    DOMStringList: 0,
    DOMTokenList: 1,
    DataTransferItemList: 0,
    FileList: 0,
    HTMLAllCollection: 0,
    HTMLCollection: 0,
    HTMLFormElement: 0,
    HTMLSelectElement: 0,
    MediaList: 0,
    MimeTypeArray: 0,
    NamedNodeMap: 0,
    NodeList: 1,
    PaintRequestList: 0,
    Plugin: 0,
    PluginArray: 0,
    SVGLengthList: 0,
    SVGNumberList: 0,
    SVGPathSegList: 0,
    SVGPointList: 0,
    SVGStringList: 0,
    SVGTransformList: 0,
    SourceBufferList: 0,
    StyleSheetList: 0,
    TextTrackCueList: 0,
    TextTrackList: 0,
    TouchList: 0
  };
  var documentCreateElement2 = documentCreateElement$22;
  var classList3 = documentCreateElement2("span").classList;
  var DOMTokenListPrototype$22 = classList3 && classList3.constructor && classList3.constructor.prototype;
  var domTokenListPrototype2 = DOMTokenListPrototype$22 === Object.prototype ? void 0 : DOMTokenListPrototype$22;
  var global$22 = global$k2;
  var DOMIterables$12 = domIterables2;
  var DOMTokenListPrototype$12 = domTokenListPrototype2;
  var ArrayIteratorMethods2 = es_array_iterator2;
  var createNonEnumerableProperty$12 = createNonEnumerableProperty$52;
  var setToStringTag2 = setToStringTag$52;
  var wellKnownSymbol$52 = wellKnownSymbol$k2;
  var ITERATOR2 = wellKnownSymbol$52("iterator");
  var ArrayValues2 = ArrayIteratorMethods2.values;
  var handlePrototype$12 = function(CollectionPrototype, COLLECTION_NAME) {
    if (CollectionPrototype) {
      if (CollectionPrototype[ITERATOR2] !== ArrayValues2) try {
        createNonEnumerableProperty$12(CollectionPrototype, ITERATOR2, ArrayValues2);
      } catch (error) {
        CollectionPrototype[ITERATOR2] = ArrayValues2;
      }
      setToStringTag2(CollectionPrototype, COLLECTION_NAME, true);
      if (DOMIterables$12[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods2) {
        if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods2[METHOD_NAME]) try {
          createNonEnumerableProperty$12(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods2[METHOD_NAME]);
        } catch (error) {
          CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods2[METHOD_NAME];
        }
      }
    }
  };
  for (COLLECTION_NAME$1 in DOMIterables$12) {
    handlePrototype$12(global$22[COLLECTION_NAME$1] && global$22[COLLECTION_NAME$1].prototype, COLLECTION_NAME$1);
  }
  var COLLECTION_NAME$1;
  handlePrototype$12(DOMTokenListPrototype$12, "DOMTokenList");
  var fails$72 = fails$p2;
  var wellKnownSymbol$42 = wellKnownSymbol$k2;
  var V8_VERSION$12 = engineV8Version2;
  var SPECIES$12 = wellKnownSymbol$42("species");
  var arrayMethodHasSpeciesSupport$42 = function(METHOD_NAME) {
    return V8_VERSION$12 >= 51 || !fails$72(function() {
      var array2 = [];
      var constructor = array2.constructor = {};
      constructor[SPECIES$12] = function() {
        return { foo: 1 };
      };
      return array2[METHOD_NAME](Boolean).foo !== 1;
    });
  };
  var $$c2 = _export2;
  var isArray$12 = isArray$32;
  var isConstructor$12 = isConstructor$42;
  var isObject$32 = isObject$i2;
  var toAbsoluteIndex2 = toAbsoluteIndex$32;
  var lengthOfArrayLike$32 = lengthOfArrayLike$82;
  var toIndexedObject$22 = toIndexedObject$92;
  var createProperty$22 = createProperty$42;
  var wellKnownSymbol$32 = wellKnownSymbol$k2;
  var arrayMethodHasSpeciesSupport$32 = arrayMethodHasSpeciesSupport$42;
  var nativeSlice2 = arraySlice$32;
  var HAS_SPECIES_SUPPORT$22 = arrayMethodHasSpeciesSupport$32("slice");
  var SPECIES2 = wellKnownSymbol$32("species");
  var $Array$12 = Array;
  var max4 = Math.max;
  $$c2({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT$22 }, {
    slice: function slice3(start3, end2) {
      var O = toIndexedObject$22(this);
      var length3 = lengthOfArrayLike$32(O);
      var k2 = toAbsoluteIndex2(start3, length3);
      var fin = toAbsoluteIndex2(end2 === void 0 ? length3 : end2, length3);
      var Constructor, result, n;
      if (isArray$12(O)) {
        Constructor = O.constructor;
        if (isConstructor$12(Constructor) && (Constructor === $Array$12 || isArray$12(Constructor.prototype))) {
          Constructor = void 0;
        } else if (isObject$32(Constructor)) {
          Constructor = Constructor[SPECIES2];
          if (Constructor === null) Constructor = void 0;
        }
        if (Constructor === $Array$12 || Constructor === void 0) {
          return nativeSlice2(O, k2, fin);
        }
      }
      result = new (Constructor === void 0 ? $Array$12 : Constructor)(max4(fin - k2, 0));
      for (n = 0; k2 < fin; k2++, n++) if (k2 in O) createProperty$22(result, n, O[k2]);
      result.length = n;
      return result;
    }
  });
  var fails$62 = fails$p2;
  var arrayMethodIsStrict$32 = function(METHOD_NAME, argument) {
    var method = [][METHOD_NAME];
    return !!method && fails$62(function() {
      method.call(null, argument || function() {
        return 1;
      }, 1);
    });
  };
  var $$b2 = _export2;
  var uncurryThis$42 = functionUncurryThis2;
  var IndexedObject2 = indexedObject2;
  var toIndexedObject$12 = toIndexedObject$92;
  var arrayMethodIsStrict$22 = arrayMethodIsStrict$32;
  var nativeJoin2 = uncurryThis$42([].join);
  var ES3_STRINGS2 = IndexedObject2 !== Object;
  var FORCED$22 = ES3_STRINGS2 || !arrayMethodIsStrict$22("join", ",");
  $$b2({ target: "Array", proto: true, forced: FORCED$22 }, {
    join: function join4(separator) {
      return nativeJoin2(toIndexedObject$12(this), separator === void 0 ? "," : separator);
    }
  });
  function __classPrivateFieldGet2(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
  }
  var $$a2 = _export2;
  var toObject$32 = toObject$82;
  var nativeKeys2 = objectKeys$32;
  var fails$52 = fails$p2;
  var FAILS_ON_PRIMITIVES2 = fails$52(function() {
    nativeKeys2(1);
  });
  $$a2({ target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES2 }, {
    keys: function keys6(it) {
      return nativeKeys2(toObject$32(it));
    }
  });
  var isObject$22 = isObject$i2;
  var classof2 = classofRaw$22;
  var wellKnownSymbol$22 = wellKnownSymbol$k2;
  var MATCH$12 = wellKnownSymbol$22("match");
  var isRegexp2 = function(it) {
    var isRegExp3;
    return isObject$22(it) && ((isRegExp3 = it[MATCH$12]) !== void 0 ? !!isRegExp3 : classof2(it) === "RegExp");
  };
  var isRegExp2 = isRegexp2;
  var $TypeError$22 = TypeError;
  var notARegexp2 = function(it) {
    if (isRegExp2(it)) {
      throw new $TypeError$22("The method doesn't accept regular expressions");
    }
    return it;
  };
  var wellKnownSymbol$12 = wellKnownSymbol$k2;
  var MATCH2 = wellKnownSymbol$12("match");
  var correctIsRegexpLogic2 = function(METHOD_NAME) {
    var regexp = /./;
    try {
      "/./"[METHOD_NAME](regexp);
    } catch (error1) {
      try {
        regexp[MATCH2] = false;
        return "/./"[METHOD_NAME](regexp);
      } catch (error2) {
      }
    }
    return false;
  };
  var $$92 = _export2;
  var uncurryThis$32 = functionUncurryThisClause2;
  var getOwnPropertyDescriptor4 = objectGetOwnPropertyDescriptor2.f;
  var toLength2 = toLength$22;
  var toString$22 = toString$52;
  var notARegExp2 = notARegexp2;
  var requireObjectCoercible$12 = requireObjectCoercible$52;
  var correctIsRegExpLogic2 = correctIsRegexpLogic2;
  var nativeStartsWith2 = uncurryThis$32("".startsWith);
  var stringSlice2 = uncurryThis$32("".slice);
  var min5 = Math.min;
  var CORRECT_IS_REGEXP_LOGIC2 = correctIsRegExpLogic2("startsWith");
  var MDN_POLYFILL_BUG2 = !CORRECT_IS_REGEXP_LOGIC2 && !!(function() {
    var descriptor = getOwnPropertyDescriptor4(String.prototype, "startsWith");
    return descriptor && !descriptor.writable;
  })();
  $$92({ target: "String", proto: true, forced: !MDN_POLYFILL_BUG2 && !CORRECT_IS_REGEXP_LOGIC2 }, {
    startsWith: function startsWith2(searchString) {
      var that = toString$22(requireObjectCoercible$12(this));
      notARegExp2(searchString);
      var index = toLength2(min5(arguments.length > 1 ? arguments[1] : void 0, that.length));
      var search = toString$22(searchString);
      return nativeStartsWith2 ? nativeStartsWith2(that, search, index) : stringSlice2(that, index, index + search.length) === search;
    }
  });
  var $forEach2 = arrayIteration2.forEach;
  var arrayMethodIsStrict$12 = arrayMethodIsStrict$32;
  var STRICT_METHOD$12 = arrayMethodIsStrict$12("forEach");
  var arrayForEach2 = !STRICT_METHOD$12 ? function forEach3(callbackfn) {
    return $forEach2(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
  } : [].forEach;
  var global$12 = global$k2;
  var DOMIterables2 = domIterables2;
  var DOMTokenListPrototype2 = domTokenListPrototype2;
  var forEach4 = arrayForEach2;
  var createNonEnumerableProperty2 = createNonEnumerableProperty$52;
  var handlePrototype2 = function(CollectionPrototype) {
    if (CollectionPrototype && CollectionPrototype.forEach !== forEach4) try {
      createNonEnumerableProperty2(CollectionPrototype, "forEach", forEach4);
    } catch (error) {
      CollectionPrototype.forEach = forEach4;
    }
  };
  for (COLLECTION_NAME in DOMIterables2) {
    if (DOMIterables2[COLLECTION_NAME]) {
      handlePrototype2(global$12[COLLECTION_NAME] && global$12[COLLECTION_NAME].prototype);
    }
  }
  var COLLECTION_NAME;
  handlePrototype2(DOMTokenListPrototype2);
  var DESCRIPTORS$12 = descriptors2;
  var fails$42 = fails$p2;
  var uncurryThis$22 = functionUncurryThis2;
  var objectGetPrototypeOf2 = objectGetPrototypeOf$12;
  var objectKeys2 = objectKeys$32;
  var toIndexedObject2 = toIndexedObject$92;
  var $propertyIsEnumerable2 = objectPropertyIsEnumerable2.f;
  var propertyIsEnumerable4 = uncurryThis$22($propertyIsEnumerable2);
  var push$12 = uncurryThis$22([].push);
  var IE_BUG2 = DESCRIPTORS$12 && fails$42(function() {
    var O = /* @__PURE__ */ Object.create(null);
    O[2] = 2;
    return !propertyIsEnumerable4(O, 2);
  });
  var createMethod$12 = function(TO_ENTRIES) {
    return function(it) {
      var O = toIndexedObject2(it);
      var keys12 = objectKeys2(O);
      var IE_WORKAROUND = IE_BUG2 && objectGetPrototypeOf2(O) === null;
      var length3 = keys12.length;
      var i = 0;
      var result = [];
      var key;
      while (length3 > i) {
        key = keys12[i++];
        if (!DESCRIPTORS$12 || (IE_WORKAROUND ? key in O : propertyIsEnumerable4(O, key))) {
          push$12(result, TO_ENTRIES ? [key, O[key]] : O[key]);
        }
      }
      return result;
    };
  };
  var objectToArray2 = {
    // `Object.entries` method
    // https://tc39.es/ecma262/#sec-object.entries
    entries: createMethod$12(true),
    // `Object.values` method
    // https://tc39.es/ecma262/#sec-object.values
    values: createMethod$12(false)
  };
  var $$82 = _export2;
  var $entries2 = objectToArray2.entries;
  $$82({ target: "Object", stat: true }, {
    entries: function entries2(O) {
      return $entries2(O);
    }
  });
  function defined2(x) {
    return x != null && !Number.isNaN(x);
  }
  function ascendingDefined3(a2, b) {
    return +defined2(b) - +defined2(a2) || ascending2(a2, b);
  }
  function finite2(x) {
    return isFinite(x) ? x : NaN;
  }
  function positive2(x) {
    return x > 0 && isFinite(x) ? x : NaN;
  }
  function negative2(x) {
    return x < 0 && isFinite(x) ? x : NaN;
  }
  var re3 = /^(?:[-+]\d{2})?\d{4}(?:-\d{2}(?:-\d{2})?)?(?:T\d{2}:\d{2}(?::\d{2}(?:\.\d{3})?)?(?:Z|[-+]\d{2}:?\d{2})?)?$/;
  function parse2(string, fallback) {
    if (!re3.test(string += "")) return typeof fallback === "function" ? fallback(string) : fallback;
    return new Date(string);
  }
  var timeIntervals2 = /* @__PURE__ */ new Map([
    ["second", second],
    ["minute", timeMinute],
    ["hour", timeHour],
    ["day", timeDay],
    ["week", timeSunday],
    ["month", timeMonth],
    ["quarter", timeMonth.every(3)],
    ["half", timeMonth.every(6)],
    ["year", timeYear],
    ["monday", timeMonday],
    ["tuesday", timeTuesday],
    ["wednesday", timeWednesday],
    ["thursday", timeThursday],
    ["friday", timeFriday],
    ["saturday", timeSaturday],
    ["sunday", timeSunday]
  ]);
  var utcIntervals2 = /* @__PURE__ */ new Map([
    ["second", second],
    ["minute", utcMinute],
    ["hour", utcHour],
    ["day", utcDay],
    ["week", utcSunday],
    ["month", utcMonth],
    ["quarter", utcMonth.every(3)],
    ["half", utcMonth.every(6)],
    ["year", utcYear],
    ["monday", utcMonday],
    ["tuesday", utcTuesday],
    ["wednesday", utcWednesday],
    ["thursday", utcThursday],
    ["friday", utcFriday],
    ["saturday", utcSaturday],
    ["sunday", utcSunday]
  ]);
  function maybeTimeInterval2(interval2) {
    const i = timeIntervals2.get(`${interval2}`.toLowerCase());
    if (!i) throw new Error(`unknown interval: ${interval2}`);
    return i;
  }
  function maybeUtcInterval2(interval2) {
    const i = utcIntervals2.get(`${interval2}`.toLowerCase());
    if (!i) throw new Error(`unknown interval: ${interval2}`);
    return i;
  }
  var TypedArray2 = Object.getPrototypeOf(Uint8Array);
  var objectToString2 = Object.prototype.toString;
  var constant2 = (x) => () => x;
  function coerceNumbers2(values5) {
    return values5 instanceof TypedArray2 ? values5 : map4(values5, coerceNumber2, Float64Array);
  }
  function coerceNumber2(x) {
    return x == null ? NaN : Number(x);
  }
  function coerceDates2(values5) {
    return map4(values5, coerceDate2);
  }
  function coerceDate2(x) {
    return x instanceof Date && !isNaN(x) ? x : typeof x === "string" ? parse2(x) : x == null || isNaN(x = +x) ? void 0 : new Date(x);
  }
  function arrayify2(data6) {
    return data6 == null || data6 instanceof Array || data6 instanceof TypedArray2 ? data6 : Array.from(data6);
  }
  function map4(values5, f, type2 = Array) {
    return values5 == null ? values5 : values5 instanceof type2 ? values5.map(f) : type2.from(values5, f);
  }
  function slice4(values5, type2 = Array) {
    return values5 instanceof type2 ? values5.slice() : type2.from(values5);
  }
  function isObject$12(option) {
    return option?.toString === objectToString2;
  }
  function isScaleOptions2(option) {
    return isObject$12(option) && (option.type !== void 0 || option.domain !== void 0);
  }
  function maybeInterval2(interval2, type2) {
    if (interval2 == null) return;
    if (typeof interval2 === "number") {
      if (0 < interval2 && interval2 < 1 && Number.isInteger(1 / interval2)) interval2 = -1 / interval2;
      const n = Math.abs(interval2);
      return interval2 < 0 ? {
        floor: (d) => Math.floor(d * n) / n,
        offset: (d) => (d * n + 1) / n,
        // note: no optional step for simplicity
        range: (lo, hi) => range(Math.ceil(lo * n), hi * n).map((x) => x / n)
      } : {
        floor: (d) => Math.floor(d / n) * n,
        offset: (d) => d + n,
        // note: no optional step for simplicity
        range: (lo, hi) => range(Math.ceil(lo / n), hi / n).map((x) => x * n)
      };
    }
    if (typeof interval2 === "string") return (type2 === "time" ? maybeTimeInterval2 : maybeUtcInterval2)(interval2);
    if (typeof interval2.floor !== "function") throw new Error("invalid interval; missing floor method");
    if (typeof interval2.offset !== "function") throw new Error("invalid interval; missing offset method");
    return interval2;
  }
  function maybeRangeInterval2(interval2, type2) {
    interval2 = maybeInterval2(interval2, type2);
    if (interval2 && typeof interval2.range !== "function") throw new Error("invalid interval: missing range method");
    return interval2;
  }
  function maybeNiceInterval2(interval2, type2) {
    interval2 = maybeRangeInterval2(interval2, type2);
    if (interval2 && typeof interval2.ceil !== "function") throw new Error("invalid interval: missing ceil method");
    return interval2;
  }
  function isOrdinal2(values5) {
    for (const value of values5) {
      if (value == null) continue;
      const type2 = typeof value;
      return type2 === "string" || type2 === "boolean";
    }
  }
  function isTemporal2(values5) {
    for (const value of values5) {
      if (value == null) continue;
      return value instanceof Date;
    }
  }
  function isTemporalString2(values5) {
    for (const value of values5) {
      if (value == null) continue;
      return typeof value === "string" && isNaN(value) && parse2(value);
    }
  }
  function isNumericString2(values5) {
    for (const value of values5) {
      if (value == null) continue;
      if (typeof value !== "string") return false;
      if (!value.trim()) continue;
      return !isNaN(value);
    }
  }
  function isNoneish2(value) {
    return value == null || isNone2(value);
  }
  function isNone2(value) {
    return /^\s*none\s*$/i.test(value);
  }
  function orderof2(values5) {
    if (values5 == null) return;
    const first = values5[0];
    const last = values5[values5.length - 1];
    return descending(first, last);
  }
  var position2 = Symbol("position");
  var color3 = Symbol("color");
  var radius2 = Symbol("radius");
  var length2 = Symbol("length");
  var opacity2 = Symbol("opacity");
  var symbol2 = Symbol("symbol");
  var registry2 = /* @__PURE__ */ new Map([
    ["x", position2],
    ["y", position2],
    ["fx", position2],
    ["fy", position2],
    ["r", radius2],
    ["color", color3],
    ["opacity", opacity2],
    ["symbol", symbol2],
    ["length", length2]
  ]);
  var sqrt35 = Math.sqrt(3);
  var sqrt4_32 = 2 / sqrt35;
  var symbolHexagon2 = {
    draw(context, size) {
      const rx = Math.sqrt(size / Math.PI), ry = rx * sqrt4_32, hy = ry / 2;
      context.moveTo(0, ry);
      context.lineTo(rx, hy);
      context.lineTo(rx, -hy);
      context.lineTo(0, -ry);
      context.lineTo(-rx, -hy);
      context.lineTo(-rx, hy);
      context.closePath();
    }
  };
  var symbols2 = /* @__PURE__ */ new Map([
    ["asterisk", asterisk_default],
    ["circle", circle_default],
    ["cross", cross_default],
    ["diamond", diamond_default],
    ["diamond2", diamond2_default],
    ["hexagon", symbolHexagon2],
    ["plus", plus_default],
    ["square", square_default],
    ["square2", square2_default],
    ["star", star_default],
    ["times", times_default],
    ["triangle", triangle_default],
    ["triangle2", triangle2_default],
    ["wye", wye_default]
  ]);
  function isSymbolObject2(value) {
    return value && typeof value.draw === "function";
  }
  function maybeSymbol2(symbol3) {
    if (symbol3 == null || isSymbolObject2(symbol3)) return symbol3;
    const value = symbols2.get(`${symbol3}`.toLowerCase());
    if (value) return value;
    throw new Error(`invalid symbol: ${symbol3}`);
  }
  function warn2(message) {
    console.warn(message);
  }
  var ordinalSchemes2 = /* @__PURE__ */ new Map([
    // categorical
    ["accent", Accent_default],
    ["category10", category10_default],
    ["dark2", Dark2_default],
    ["paired", Paired_default],
    ["pastel1", Pastel1_default],
    ["pastel2", Pastel2_default],
    ["set1", Set1_default],
    ["set2", Set2_default],
    ["set3", Set3_default],
    ["tableau10", Tableau10_default],
    // diverging
    ["brbg", scheme113(scheme, BrBG_default)],
    ["prgn", scheme113(scheme2, PRGn_default)],
    ["piyg", scheme113(scheme3, PiYG_default)],
    ["puor", scheme113(scheme4, PuOr_default)],
    ["rdbu", scheme113(scheme5, RdBu_default)],
    ["rdgy", scheme113(scheme6, RdGy_default)],
    ["rdylbu", scheme113(scheme7, RdYlBu_default)],
    ["rdylgn", scheme113(scheme8, RdYlGn_default)],
    ["spectral", scheme113(scheme9, Spectral_default)],
    // reversed diverging (for temperature data)
    ["burd", scheme11r2(scheme5, RdBu_default)],
    ["buylrd", scheme11r2(scheme7, RdYlBu_default)],
    // sequential (single-hue)
    ["blues", scheme93(scheme22, Blues_default)],
    ["greens", scheme93(scheme23, Greens_default)],
    ["greys", scheme93(scheme24, Greys_default)],
    ["oranges", scheme93(scheme27, Oranges_default)],
    ["purples", scheme93(scheme25, Purples_default)],
    ["reds", scheme93(scheme26, Reds_default)],
    // sequential (multi-hue)
    ["turbo", schemei2(turbo_default)],
    ["viridis", schemei2(viridis_default)],
    ["magma", schemei2(magma)],
    ["inferno", schemei2(inferno)],
    ["plasma", schemei2(plasma)],
    ["cividis", schemei2(cividis_default)],
    ["cubehelix", schemei2(cubehelix_default2)],
    ["warm", schemei2(warm)],
    ["cool", schemei2(cool)],
    ["bugn", scheme93(scheme10, BuGn_default)],
    ["bupu", scheme93(scheme11, BuPu_default)],
    ["gnbu", scheme93(scheme12, GnBu_default)],
    ["orrd", scheme93(scheme13, OrRd_default)],
    ["pubu", scheme93(scheme15, PuBu_default)],
    ["pubugn", scheme93(scheme14, PuBuGn_default)],
    ["purd", scheme93(scheme16, PuRd_default)],
    ["rdpu", scheme93(scheme17, RdPu_default)],
    ["ylgn", scheme93(scheme19, YlGn_default)],
    ["ylgnbu", scheme93(scheme18, YlGnBu_default)],
    ["ylorbr", scheme93(scheme20, YlOrBr_default)],
    ["ylorrd", scheme93(scheme21, YlOrRd_default)],
    // cyclical
    ["rainbow", schemeicyclical2(rainbow_default)],
    ["sinebow", schemeicyclical2(sinebow_default)]
  ]);
  function scheme93(scheme28, interpolate) {
    return ({ length: n }) => {
      if (n === 1) return [scheme28[3][1]];
      if (n === 2) return [scheme28[3][1], scheme28[3][2]];
      n = Math.max(3, Math.floor(n));
      return n > 9 ? quantize_default(interpolate, n) : scheme28[n];
    };
  }
  function scheme113(scheme28, interpolate) {
    return ({ length: n }) => {
      if (n === 2) return [scheme28[3][0], scheme28[3][2]];
      n = Math.max(3, Math.floor(n));
      return n > 11 ? quantize_default(interpolate, n) : scheme28[n];
    };
  }
  function scheme11r2(scheme28, interpolate) {
    return ({ length: n }) => {
      if (n === 2) return [scheme28[3][2], scheme28[3][0]];
      n = Math.max(3, Math.floor(n));
      return n > 11 ? quantize_default((t) => interpolate(1 - t), n) : scheme28[n].slice().reverse();
    };
  }
  function schemei2(interpolate) {
    return ({ length: n }) => quantize_default(interpolate, Math.max(2, Math.floor(n)));
  }
  function schemeicyclical2(interpolate) {
    return ({ length: n }) => quantize_default(interpolate, Math.floor(n) + 1).slice(0, -1);
  }
  function ordinalScheme2(scheme28) {
    const s2 = `${scheme28}`.toLowerCase();
    if (!ordinalSchemes2.has(s2)) throw new Error(`unknown ordinal scheme: ${s2}`);
    return ordinalSchemes2.get(s2);
  }
  function ordinalRange2(scheme28, length3) {
    const s2 = ordinalScheme2(scheme28);
    const r = typeof s2 === "function" ? s2({ length: length3 }) : s2;
    return r.length !== length3 ? r.slice(0, length3) : r;
  }
  function maybeBooleanRange2(domain, scheme28 = "greys") {
    const range3 = /* @__PURE__ */ new Set();
    const [f, t] = ordinalRange2(scheme28, 2);
    for (const value of domain) {
      if (value == null) continue;
      if (value === true) range3.add(t);
      else if (value === false) range3.add(f);
      else return;
    }
    return [...range3];
  }
  var quantitativeSchemes2 = /* @__PURE__ */ new Map([
    // diverging
    ["brbg", BrBG_default],
    ["prgn", PRGn_default],
    ["piyg", PiYG_default],
    ["puor", PuOr_default],
    ["rdbu", RdBu_default],
    ["rdgy", RdGy_default],
    ["rdylbu", RdYlBu_default],
    ["rdylgn", RdYlGn_default],
    ["spectral", Spectral_default],
    // reversed diverging (for temperature data)
    ["burd", (t) => RdBu_default(1 - t)],
    ["buylrd", (t) => RdYlBu_default(1 - t)],
    // sequential (single-hue)
    ["blues", Blues_default],
    ["greens", Greens_default],
    ["greys", Greys_default],
    ["purples", Purples_default],
    ["reds", Reds_default],
    ["oranges", Oranges_default],
    // sequential (multi-hue)
    ["turbo", turbo_default],
    ["viridis", viridis_default],
    ["magma", magma],
    ["inferno", inferno],
    ["plasma", plasma],
    ["cividis", cividis_default],
    ["cubehelix", cubehelix_default2],
    ["warm", warm],
    ["cool", cool],
    ["bugn", BuGn_default],
    ["bupu", BuPu_default],
    ["gnbu", GnBu_default],
    ["orrd", OrRd_default],
    ["pubugn", PuBuGn_default],
    ["pubu", PuBu_default],
    ["purd", PuRd_default],
    ["rdpu", RdPu_default],
    ["ylgnbu", YlGnBu_default],
    ["ylgn", YlGn_default],
    ["ylorbr", YlOrBr_default],
    ["ylorrd", YlOrRd_default],
    // cyclical
    ["rainbow", rainbow_default],
    ["sinebow", sinebow_default]
  ]);
  function quantitativeScheme2(scheme28) {
    const s2 = `${scheme28}`.toLowerCase();
    if (!quantitativeSchemes2.has(s2)) throw new Error(`unknown quantitative scheme: ${s2}`);
    return quantitativeSchemes2.get(s2);
  }
  var divergingSchemes2 = /* @__PURE__ */ new Set([
    "brbg",
    "prgn",
    "piyg",
    "puor",
    "rdbu",
    "rdgy",
    "rdylbu",
    "rdylgn",
    "spectral",
    "burd",
    "buylrd"
  ]);
  function isDivergingScheme2(scheme28) {
    return scheme28 != null && divergingSchemes2.has(`${scheme28}`.toLowerCase());
  }
  var flip2 = (i) => (t) => i(1 - t);
  var unit3 = [0, 1];
  var interpolators2 = /* @__PURE__ */ new Map([
    // numbers
    ["number", number_default],
    // color spaces
    ["rgb", rgb_default],
    ["hsl", hsl_default],
    ["hcl", hcl_default],
    ["lab", lab2]
  ]);
  function maybeInterpolator2(interpolate) {
    const i = `${interpolate}`.toLowerCase();
    if (!interpolators2.has(i)) throw new Error(`unknown interpolator: ${i}`);
    return interpolators2.get(i);
  }
  function createScaleQ2(key, scale3, channels, {
    type: type2,
    nice: nice2,
    clamp,
    zero: zero3,
    domain = inferAutoDomain2(key, channels),
    unknown,
    round: round2,
    scheme: scheme28,
    interval: interval2,
    range: range3 = registry2.get(key) === radius2 ? inferRadialRange2(channels, domain) : registry2.get(key) === length2 ? inferLengthRange2(channels, domain) : registry2.get(key) === opacity2 ? unit3 : void 0,
    interpolate = registry2.get(key) === color3 ? scheme28 == null && range3 !== void 0 ? rgb_default : quantitativeScheme2(scheme28 !== void 0 ? scheme28 : type2 === "cyclical" ? "rainbow" : "turbo") : round2 ? round_default : number_default,
    reverse: reverse$1
  }) {
    interval2 = maybeRangeInterval2(interval2, type2);
    if (type2 === "cyclical" || type2 === "sequential") type2 = "linear";
    reverse$1 = !!reverse$1;
    if (typeof interpolate !== "function") {
      interpolate = maybeInterpolator2(interpolate);
    }
    if (interpolate.length === 1) {
      if (reverse$1) {
        interpolate = flip2(interpolate);
        reverse$1 = false;
      }
      if (range3 === void 0) {
        range3 = Float64Array.from(domain, (_, i) => i / (domain.length - 1));
        if (range3.length === 2) range3 = unit3;
      }
      scale3.interpolate((range3 === unit3 ? constant2 : interpolatePiecewise2)(interpolate));
    } else {
      scale3.interpolate(interpolate);
    }
    if (zero3) {
      const [min9, max8] = extent(domain);
      if (min9 > 0 || max8 < 0) {
        domain = slice4(domain);
        if (orderof2(domain) !== Math.sign(min9)) domain[domain.length - 1] = 0;
        else domain[0] = 0;
      }
    }
    if (reverse$1) domain = reverse(domain);
    scale3.domain(domain).unknown(unknown);
    if (nice2) scale3.nice(maybeNice2(nice2, type2)), domain = scale3.domain();
    if (range3 !== void 0) scale3.range(range3);
    if (clamp) scale3.clamp(clamp);
    return { type: type2, domain, range: range3, scale: scale3, interpolate, interval: interval2 };
  }
  function maybeNice2(nice2, type2) {
    return nice2 === true ? void 0 : typeof nice2 === "number" ? nice2 : maybeNiceInterval2(nice2, type2);
  }
  function createScaleLinear2(key, channels, options) {
    return createScaleQ2(key, linear2(), channels, options);
  }
  function createScaleSqrt2(key, channels, options) {
    return createScalePow2(key, channels, { ...options, exponent: 0.5 });
  }
  function createScalePow2(key, channels, { exponent = 1, ...options }) {
    return createScaleQ2(key, pow().exponent(exponent), channels, { ...options, type: "pow" });
  }
  function createScaleLog2(key, channels, { base = 10, domain = inferLogDomain2(channels), ...options }) {
    return createScaleQ2(key, log().base(base), channels, { ...options, domain });
  }
  function createScaleSymlog2(key, channels, { constant: constant3 = 1, ...options }) {
    return createScaleQ2(key, symlog().constant(constant3), channels, options);
  }
  function createScaleQuantile2(key, channels, {
    range: range3,
    quantiles = range3 === void 0 ? 5 : (range3 = [...range3]).length,
    // deprecated; use n instead
    n = quantiles,
    scheme: scheme28 = "rdylbu",
    domain = inferQuantileDomain2(channels),
    unknown,
    interpolate,
    reverse: reverse2
  }) {
    if (range3 === void 0) {
      range3 = interpolate !== void 0 ? quantize_default(interpolate, n) : registry2.get(key) === color3 ? ordinalRange2(scheme28, n) : void 0;
    }
    if (domain.length > 0) {
      domain = quantile2(domain, range3 === void 0 ? { length: n } : range3).quantiles();
    }
    return createScaleThreshold2(key, channels, { domain, range: range3, reverse: reverse2, unknown });
  }
  function createScaleQuantize2(key, channels, {
    range: range3,
    n = range3 === void 0 ? 5 : (range3 = [...range3]).length,
    scheme: scheme28 = "rdylbu",
    domain = inferAutoDomain2(key, channels),
    unknown,
    interpolate,
    reverse: reverse2
  }) {
    const [min9, max8] = extent(domain);
    let thresholds;
    if (range3 === void 0) {
      thresholds = ticks(min9, max8, n);
      if (thresholds[0] <= min9) thresholds.splice(0, 1);
      if (thresholds[thresholds.length - 1] >= max8) thresholds.pop();
      n = thresholds.length + 1;
      range3 = interpolate !== void 0 ? quantize_default(interpolate, n) : registry2.get(key) === color3 ? ordinalRange2(scheme28, n) : void 0;
    } else {
      thresholds = quantize_default(number_default(min9, max8), n + 1).slice(1, -1);
      if (min9 instanceof Date) thresholds = thresholds.map((x) => new Date(x));
    }
    if (orderof2(arrayify2(domain)) < 0) thresholds.reverse();
    return createScaleThreshold2(key, channels, { domain: thresholds, range: range3, reverse: reverse2, unknown });
  }
  function createScaleThreshold2(key, channels, {
    domain = [0],
    // explicit thresholds in ascending order
    unknown,
    scheme: scheme28 = "rdylbu",
    interpolate,
    range: range3 = interpolate !== void 0 ? quantize_default(interpolate, domain.length + 1) : registry2.get(key) === color3 ? ordinalRange2(scheme28, domain.length + 1) : void 0,
    reverse: reverse$1
  }) {
    domain = arrayify2(domain);
    const sign = orderof2(domain);
    if (!isNaN(sign) && !isOrdered2(domain, sign)) throw new Error(`the ${key} scale has a non-monotonic domain`);
    if (reverse$1) range3 = reverse(range3);
    return {
      type: "threshold",
      scale: threshold(sign < 0 ? reverse(domain) : domain, range3 === void 0 ? [] : range3).unknown(unknown),
      domain,
      range: range3
    };
  }
  function isOrdered2(domain, sign) {
    for (let i = 1, n = domain.length, d = domain[0]; i < n; ++i) {
      const s2 = descending(d, d = domain[i]);
      if (s2 !== 0 && s2 !== sign) return false;
    }
    return true;
  }
  function createScaleIdentity2() {
    return { type: "identity", scale: identity3() };
  }
  function inferDomain$12(channels, f = finite2) {
    return channels.length ? [
      min(channels, ({ value }) => value === void 0 ? value : min(value, f)),
      max(channels, ({ value }) => value === void 0 ? value : max(value, f))
    ] : [0, 1];
  }
  function inferAutoDomain2(key, channels) {
    const type2 = registry2.get(key);
    return (type2 === radius2 || type2 === opacity2 || type2 === length2 ? inferZeroDomain2 : inferDomain$12)(channels);
  }
  function inferZeroDomain2(channels) {
    return [0, channels.length ? max(channels, ({ value }) => value === void 0 ? value : max(value, finite2)) : 1];
  }
  function inferRadialRange2(channels, domain) {
    const hint = channels.find(({ radius: radius3 }) => radius3 !== void 0);
    if (hint !== void 0) return [0, hint.radius];
    const h25 = quantile(channels, 0.5, ({ value }) => value === void 0 ? NaN : quantile(value, 0.25, positive2));
    const range3 = domain.map((d) => 3 * Math.sqrt(d / h25));
    const k2 = 30 / max(range3);
    return k2 < 1 ? range3.map((r) => r * k2) : range3;
  }
  function inferLengthRange2(channels, domain) {
    const h50 = median(channels, ({ value }) => value === void 0 ? NaN : median(value, Math.abs));
    const range3 = domain.map((d) => 12 * d / h50);
    const k2 = 60 / max(range3);
    return k2 < 1 ? range3.map((r) => r * k2) : range3;
  }
  function inferLogDomain2(channels) {
    for (const { value } of channels) {
      if (value !== void 0) {
        for (let v of value) {
          if (v > 0) return inferDomain$12(channels, positive2);
          if (v < 0) return inferDomain$12(channels, negative2);
        }
      }
    }
    return [1, 10];
  }
  function inferQuantileDomain2(channels) {
    const domain = [];
    for (const { value } of channels) {
      if (value === void 0) continue;
      for (const v of value) domain.push(v);
    }
    return domain;
  }
  function interpolatePiecewise2(interpolate) {
    return (i, j) => (t) => interpolate(i + t * (j - i));
  }
  function createScaleD2(key, scale3, transform2, channels, {
    type: type2,
    nice: nice2,
    clamp,
    domain = inferDomain$12(channels),
    unknown,
    pivot = 0,
    scheme: scheme28,
    range: range3,
    symmetric = true,
    interpolate = registry2.get(key) === color3 ? scheme28 == null && range3 !== void 0 ? rgb_default : quantitativeScheme2(scheme28 !== void 0 ? scheme28 : "rdbu") : number_default,
    reverse: reverse2
  }) {
    pivot = +pivot;
    let [min9, max8] = domain;
    if (descending(min9, max8) < 0) [min9, max8] = [max8, min9], reverse2 = !reverse2;
    min9 = Math.min(min9, pivot);
    max8 = Math.max(max8, pivot);
    if (typeof interpolate !== "function") {
      interpolate = maybeInterpolator2(interpolate);
    }
    if (range3 !== void 0) {
      interpolate = interpolate.length === 1 ? interpolatePiecewise2(interpolate)(...range3) : piecewise(interpolate, range3);
    }
    if (reverse2) interpolate = flip2(interpolate);
    if (symmetric) {
      const mid = transform2.apply(pivot);
      const mindelta = mid - transform2.apply(min9);
      const maxdelta = transform2.apply(max8) - mid;
      if (mindelta < maxdelta) min9 = transform2.invert(mid - maxdelta);
      else if (mindelta > maxdelta) max8 = transform2.invert(mid + mindelta);
    }
    scale3.domain([min9, pivot, max8]).unknown(unknown).interpolator(interpolate);
    if (clamp) scale3.clamp(clamp);
    if (nice2) scale3.nice(nice2);
    return { type: type2, domain: [min9, max8], pivot, interpolate, scale: scale3 };
  }
  function createScaleDiverging2(key, channels, options) {
    return createScaleD2(key, diverging(), transformIdentity2, channels, options);
  }
  function createScaleDivergingSqrt2(key, channels, options) {
    return createScaleDivergingPow2(key, channels, { ...options, exponent: 0.5 });
  }
  function createScaleDivergingPow2(key, channels, { exponent = 1, ...options }) {
    return createScaleD2(key, divergingPow().exponent(exponent = +exponent), transformPow3(exponent), channels, {
      ...options,
      type: "diverging-pow"
    });
  }
  function createScaleDivergingLog2(key, channels, { base = 10, pivot = 1, domain = inferDomain$12(channels, pivot < 0 ? negative2 : positive2), ...options }) {
    return createScaleD2(key, divergingLog().base(base = +base), transformLog3, channels, {
      domain,
      pivot,
      ...options
    });
  }
  function createScaleDivergingSymlog2(key, channels, { constant: constant3 = 1, ...options }) {
    return createScaleD2(
      key,
      divergingSymlog().constant(constant3 = +constant3),
      transformSymlog3(constant3),
      channels,
      options
    );
  }
  var transformIdentity2 = {
    apply(x) {
      return x;
    },
    invert(x) {
      return x;
    }
  };
  var transformLog3 = {
    apply: Math.log,
    invert: Math.exp
  };
  var transformSqrt3 = {
    apply(x) {
      return Math.sign(x) * Math.sqrt(Math.abs(x));
    },
    invert(x) {
      return Math.sign(x) * (x * x);
    }
  };
  function transformPow3(exponent) {
    return exponent === 0.5 ? transformSqrt3 : {
      apply(x) {
        return Math.sign(x) * Math.pow(Math.abs(x), exponent);
      },
      invert(x) {
        return Math.sign(x) * Math.pow(Math.abs(x), 1 / exponent);
      }
    };
  }
  function transformSymlog3(constant3) {
    return {
      apply(x) {
        return Math.sign(x) * Math.log1p(Math.abs(x / constant3));
      },
      invert(x) {
        return Math.sign(x) * Math.expm1(Math.abs(x)) * constant3;
      }
    };
  }
  function createScaleT2(key, scale3, channels, options) {
    return createScaleQ2(key, scale3, channels, options);
  }
  function createScaleTime2(key, channels, options) {
    return createScaleT2(key, time(), channels, options);
  }
  function createScaleUtc2(key, channels, options) {
    return createScaleT2(key, utcTime(), channels, options);
  }
  var ordinalImplicit2 = Symbol("ordinal");
  function createScaleO2(key, scale3, channels, { type: type2, interval: interval2, domain, range: range3, reverse: reverse$1, hint }) {
    interval2 = maybeRangeInterval2(interval2, type2);
    if (domain === void 0) domain = inferDomain2(channels, interval2, key);
    if (type2 === "categorical" || type2 === ordinalImplicit2) type2 = "ordinal";
    if (reverse$1) domain = reverse(domain);
    scale3.domain(domain);
    if (range3 !== void 0) {
      if (typeof range3 === "function") range3 = range3(domain);
      scale3.range(range3);
    }
    return { type: type2, domain, range: range3, scale: scale3, hint, interval: interval2 };
  }
  function createScaleOrdinal2(key, channels, { type: type2, interval: interval2, domain, range: range3, scheme: scheme28, unknown, ...options }) {
    interval2 = maybeRangeInterval2(interval2, type2);
    if (domain === void 0) domain = inferDomain2(channels, interval2, key);
    let hint;
    if (registry2.get(key) === symbol2) {
      hint = inferSymbolHint2(channels);
      range3 = range3 === void 0 ? inferSymbolRange2(hint) : map4(range3, maybeSymbol2);
    } else if (registry2.get(key) === color3) {
      if (range3 === void 0 && (type2 === "ordinal" || type2 === ordinalImplicit2)) {
        range3 = maybeBooleanRange2(domain, scheme28);
        if (range3 !== void 0) scheme28 = void 0;
      }
      if (scheme28 === void 0 && range3 === void 0) {
        scheme28 = type2 === "ordinal" ? "turbo" : "tableau10";
      }
      if (scheme28 !== void 0) {
        if (range3 !== void 0) {
          const interpolate = quantitativeScheme2(scheme28);
          const t03 = range3[0], d = range3[1] - range3[0];
          range3 = ({ length: n }) => quantize_default((t) => interpolate(t03 + d * t), n);
        } else {
          range3 = ordinalScheme2(scheme28);
        }
      }
    }
    if (unknown === implicit) {
      throw new Error(`implicit unknown on ${key} scale is not supported`);
    }
    return createScaleO2(key, ordinal().unknown(unknown), channels, { ...options, type: type2, domain, range: range3, hint });
  }
  function createScalePoint2(key, channels, { align = 0.5, padding = 0.5, ...options }) {
    return maybeRound2(point().align(align).padding(padding), channels, options, key);
  }
  function createScaleBand2(key, channels, {
    align = 0.5,
    padding = 0.1,
    paddingInner = padding,
    paddingOuter = key === "fx" || key === "fy" ? 0 : padding,
    ...options
  }) {
    return maybeRound2(
      band().align(align).paddingInner(paddingInner).paddingOuter(paddingOuter),
      channels,
      options,
      key
    );
  }
  function maybeRound2(scale3, channels, options, key) {
    let { round: round2 } = options;
    if (round2 !== void 0) scale3.round(round2 = !!round2);
    scale3 = createScaleO2(key, scale3, channels, options);
    scale3.round = round2;
    return scale3;
  }
  function inferDomain2(channels, interval2, key) {
    const values5 = new InternSet();
    for (const { value, domain } of channels) {
      if (domain !== void 0) return domain();
      if (value === void 0) continue;
      for (const v of value) values5.add(v);
    }
    if (interval2 !== void 0) {
      const [min9, max8] = extent(values5).map(interval2.floor, interval2);
      return interval2.range(min9, interval2.offset(max8));
    }
    if (values5.size > 1e4 && registry2.get(key) === position2) {
      throw new Error(`implicit ordinal domain of ${key} scale has more than 10,000 values`);
    }
    return sort(values5, ascendingDefined3);
  }
  function inferHint2(channels, key) {
    let value;
    for (const { hint } of channels) {
      const candidate = hint?.[key];
      if (candidate === void 0) continue;
      if (value === void 0) value = candidate;
      else if (value !== candidate) return;
    }
    return value;
  }
  function inferSymbolHint2(channels) {
    return {
      fill: inferHint2(channels, "fill"),
      stroke: inferHint2(channels, "stroke")
    };
  }
  function inferSymbolRange2(hint) {
    return isNoneish2(hint.fill) ? symbolsStroke : symbolsFill;
  }
  function normalizeScale2(key, scale3, hint) {
    return createScale2(key, hint === void 0 ? void 0 : [{ hint }], { ...scale3 });
  }
  function createScale2(key, channels = [], options = {}) {
    const type2 = inferScaleType2(key, channels, options);
    if (options.type === void 0 && options.domain === void 0 && options.range === void 0 && options.interval == null && key !== "fx" && key !== "fy" && isOrdinalScale2({ type: type2 })) {
      const values5 = channels.map(({ value }) => value).filter((value) => value !== void 0);
      if (values5.some(isTemporal2))
        warn2(
          `Warning: some data associated with the ${key} scale are dates. Dates are typically associated with a "utc" or "time" scale rather than a "${formatScaleType2(
            type2
          )}" scale. If you are using a bar mark, you probably want a rect mark with the interval option instead; if you are using a group transform, you probably want a bin transform instead. If you want to treat this data as ordinal, you can specify the interval of the ${key} scale (e.g., d3.utcDay), or you can suppress this warning by setting the type of the ${key} scale to "${formatScaleType2(
            type2
          )}".`
        );
      else if (values5.some(isTemporalString2))
        warn2(
          `Warning: some data associated with the ${key} scale are strings that appear to be dates (e.g., YYYY-MM-DD). If these strings represent dates, you should parse them to Date objects. Dates are typically associated with a "utc" or "time" scale rather than a "${formatScaleType2(
            type2
          )}" scale. If you are using a bar mark, you probably want a rect mark with the interval option instead; if you are using a group transform, you probably want a bin transform instead. If you want to treat this data as ordinal, you can suppress this warning by setting the type of the ${key} scale to "${formatScaleType2(
            type2
          )}".`
        );
      else if (values5.some(isNumericString2))
        warn2(
          `Warning: some data associated with the ${key} scale are strings that appear to be numbers. If these strings represent numbers, you should parse or coerce them to numbers. Numbers are typically associated with a "linear" scale rather than a "${formatScaleType2(
            type2
          )}" scale. If you want to treat this data as ordinal, you can specify the interval of the ${key} scale (e.g., 1 for integers), or you can suppress this warning by setting the type of the ${key} scale to "${formatScaleType2(
            type2
          )}".`
        );
    }
    options.type = type2;
    switch (type2) {
      case "diverging":
      case "diverging-sqrt":
      case "diverging-pow":
      case "diverging-log":
      case "diverging-symlog":
      case "cyclical":
      case "sequential":
      case "linear":
      case "sqrt":
      case "threshold":
      case "quantile":
      case "pow":
      case "log":
      case "symlog":
        options = coerceType2(channels, options, coerceNumbers2);
        break;
      case "identity":
        switch (registry2.get(key)) {
          case position2:
            options = coerceType2(channels, options, coerceNumbers2);
            break;
          case symbol2:
            options = coerceType2(channels, options, coerceSymbols2);
            break;
        }
        break;
      case "utc":
      case "time":
        options = coerceType2(channels, options, coerceDates2);
        break;
    }
    switch (type2) {
      case "diverging":
        return createScaleDiverging2(key, channels, options);
      case "diverging-sqrt":
        return createScaleDivergingSqrt2(key, channels, options);
      case "diverging-pow":
        return createScaleDivergingPow2(key, channels, options);
      case "diverging-log":
        return createScaleDivergingLog2(key, channels, options);
      case "diverging-symlog":
        return createScaleDivergingSymlog2(key, channels, options);
      case "categorical":
      case "ordinal":
      case ordinalImplicit2:
        return createScaleOrdinal2(key, channels, options);
      case "cyclical":
      case "sequential":
      case "linear":
        return createScaleLinear2(key, channels, options);
      case "sqrt":
        return createScaleSqrt2(key, channels, options);
      case "threshold":
        return createScaleThreshold2(key, channels, options);
      case "quantile":
        return createScaleQuantile2(key, channels, options);
      case "quantize":
        return createScaleQuantize2(key, channels, options);
      case "pow":
        return createScalePow2(key, channels, options);
      case "log":
        return createScaleLog2(key, channels, options);
      case "symlog":
        return createScaleSymlog2(key, channels, options);
      case "utc":
        return createScaleUtc2(key, channels, options);
      case "time":
        return createScaleTime2(key, channels, options);
      case "point":
        return createScalePoint2(key, channels, options);
      case "band":
        return createScaleBand2(key, channels, options);
      case "identity":
        return registry2.get(key) === position2 ? createScaleIdentity2() : { type: "identity" };
      case void 0:
        return;
      default:
        throw new Error(`unknown scale type: ${type2}`);
    }
  }
  function formatScaleType2(type2) {
    return typeof type2 === "symbol" ? type2.description : type2;
  }
  var typeProjection2 = { toString: () => "projection" };
  function inferScaleType2(key, channels, { type: type2, domain, range: range3, scheme: scheme28, pivot, projection }) {
    if (key === "fx" || key === "fy") return "band";
    if ((key === "x" || key === "y") && projection != null) type2 = typeProjection2;
    for (const { type: t } of channels) {
      if (t === void 0) continue;
      else if (type2 === void 0) type2 = t;
      else if (type2 !== t) throw new Error(`scale incompatible with channel: ${type2} !== ${t}`);
    }
    if (type2 === typeProjection2) return;
    if (type2 !== void 0) return type2;
    if (domain === void 0 && !channels.some(({ value }) => value !== void 0)) return;
    const kind = registry2.get(key);
    if (kind === radius2) return "sqrt";
    if (kind === opacity2 || kind === length2) return "linear";
    if (kind === symbol2) return "ordinal";
    if ((domain || range3 || []).length > 2) return asOrdinalType2(kind);
    if (domain !== void 0) {
      if (isOrdinal2(domain)) return asOrdinalType2(kind);
      if (isTemporal2(domain)) return "utc";
      if (kind === color3 && (pivot != null || isDivergingScheme2(scheme28))) return "diverging";
      return "linear";
    }
    const values5 = channels.map(({ value }) => value).filter((value) => value !== void 0);
    if (values5.some(isOrdinal2)) return asOrdinalType2(kind);
    if (values5.some(isTemporal2)) return "utc";
    if (kind === color3 && (pivot != null || isDivergingScheme2(scheme28))) return "diverging";
    return "linear";
  }
  function asOrdinalType2(kind) {
    switch (kind) {
      case position2:
        return "point";
      case color3:
        return ordinalImplicit2;
      default:
        return "ordinal";
    }
  }
  function isOrdinalScale2({ type: type2 }) {
    return type2 === "ordinal" || type2 === "point" || type2 === "band" || type2 === ordinalImplicit2;
  }
  function coerceType2(channels, { domain, ...options }, coerceValues) {
    for (const c4 of channels) {
      if (c4.value !== void 0) {
        c4.value = coerceValues(c4.value);
      }
    }
    return {
      domain: domain === void 0 ? domain : coerceValues(domain),
      ...options
    };
  }
  function coerceSymbols2(values5) {
    return map4(values5, maybeSymbol2);
  }
  function scale2(options = {}) {
    let scale3;
    for (const key in options) {
      if (!registry2.has(key)) continue;
      if (!isScaleOptions2(options[key])) continue;
      if (scale3 !== void 0) throw new Error("ambiguous scale definition; multiple scales found");
      scale3 = exposeScale2(normalizeScale2(key, options[key]));
    }
    if (scale3 === void 0) throw new Error("invalid scale definition; no scale found");
    return scale3;
  }
  function exposeScale2({ scale: scale3, type: type2, domain, range: range3, interpolate, interval: interval2, transform: transform2, percent, pivot }) {
    if (type2 === "identity") return { type: "identity", apply: (d) => d, invert: (d) => d };
    const unknown = scale3.unknown ? scale3.unknown() : void 0;
    return {
      type: type2,
      domain: slice4(domain),
      // defensive copy
      ...range3 !== void 0 && { range: slice4(range3) },
      // defensive copy
      ...transform2 !== void 0 && { transform: transform2 },
      ...percent && { percent },
      // only exposed if truthy
      ...unknown !== void 0 && { unknown },
      ...interval2 !== void 0 && { interval: interval2 },
      // quantitative
      ...interpolate !== void 0 && { interpolate },
      ...scale3.clamp && { clamp: scale3.clamp() },
      // diverging (always asymmetric; we never want to apply the symmetric transform twice)
      ...pivot !== void 0 && { pivot, symmetric: false },
      // log, diverging-log
      ...scale3.base && { base: scale3.base() },
      // pow, diverging-pow
      ...scale3.exponent && { exponent: scale3.exponent() },
      // symlog, diverging-symlog
      ...scale3.constant && { constant: scale3.constant() },
      // band, point
      ...scale3.align && { align: scale3.align(), round: scale3.round() },
      ...scale3.padding && (scale3.paddingInner ? { paddingInner: scale3.paddingInner(), paddingOuter: scale3.paddingOuter() } : { padding: scale3.padding() }),
      ...scale3.bandwidth && { bandwidth: scale3.bandwidth(), step: scale3.step() },
      // utilities
      apply: (t) => scale3(t),
      ...scale3.invert && { invert: (t) => scale3.invert(t) }
    };
  }
  var ScrollDirection2;
  (function(ScrollDirection4) {
    ScrollDirection4[ScrollDirection4["SCROLL_NONE"] = 0] = "SCROLL_NONE";
    ScrollDirection4[ScrollDirection4["SCROLL_BACKWARD"] = 1] = "SCROLL_BACKWARD";
    ScrollDirection4[ScrollDirection4["SCROLL_FORWARD"] = 2] = "SCROLL_FORWARD";
  })(ScrollDirection2 || (ScrollDirection2 = {}));
  var Position2;
  (function(Position4) {
    Position4[Position4["TOP"] = 0] = "TOP";
    Position4[Position4["RIGHT"] = 1] = "RIGHT";
    Position4[Position4["BOTTOM"] = 2] = "BOTTOM";
    Position4[Position4["LEFT"] = 3] = "LEFT";
  })(Position2 || (Position2 = {}));
  var OPTIONS_DEFAULT_SUBDOMAIN_WIDTH2 = 10;
  var OPTIONS_DEFAULT_SUBDOMAIN_HEIGHT2 = 10;
  var OPTIONS_DEFAULT_SUBDOMAIN_GUTTER2 = 2;
  var OPTIONS_DEFAULT_SUBDOMAIN_RADIUS2 = 0;
  var SCALE_BASE_OPACITY_COLOR2 = "red";
  function normalizedScale2(scaleOptions) {
    try {
      var scaleType = Object.keys(scaleOptions)[0];
      return scale2(_defineProperty2({}, scaleType, Object.assign(Object.assign({}, scaleOptions[scaleType]), {
        clamp: true
      })));
    } catch (error) {
      return null;
    }
  }
  function scaleStyle2(_scale, scaleOptions) {
    var styles = {};
    if (scaleOptions.hasOwnProperty("opacity")) {
      styles.fill = function() {
        return (
          // eslint-disable-next-line implicit-arrow-linebreak
          scaleOptions.opacity.baseColor || SCALE_BASE_OPACITY_COLOR2
        );
      };
      styles["fill-opacity"] = function(d) {
        return _scale === null || _scale === void 0 ? void 0 : _scale.apply(d);
      };
    } else {
      styles.fill = function(d) {
        return (
          // eslint-disable-next-line implicit-arrow-linebreak
          typeof d === "string" && (d === null || d === void 0 ? void 0 : d.startsWith("#")) ? d : _scale === null || _scale === void 0 ? void 0 : _scale.apply(d)
        );
      };
    }
    return styles;
  }
  function applyScaleStyle2(elem, _scale, scaleOptions, keyname) {
    Object.entries(scaleStyle2(_scale, scaleOptions)).forEach(function(_ref) {
      var _ref2 = _slicedToArray2(_ref, 2), prop = _ref2[0], val = _ref2[1];
      return (
        // eslint-disable-next-line implicit-arrow-linebreak
        elem.style(prop, function(d) {
          return (
            // eslint-disable-next-line implicit-arrow-linebreak
            val(keyname ? d[keyname] : d)
          );
        })
      );
    });
  }
  var $TypeError$12 = TypeError;
  var MAX_SAFE_INTEGER2 = 9007199254740991;
  var doesNotExceedSafeInteger$12 = function(it) {
    if (it > MAX_SAFE_INTEGER2) throw $TypeError$12("Maximum allowed index exceeded");
    return it;
  };
  var $$72 = _export2;
  var fails$32 = fails$p2;
  var isArray4 = isArray$32;
  var isObject2 = isObject$i2;
  var toObject$22 = toObject$82;
  var lengthOfArrayLike$22 = lengthOfArrayLike$82;
  var doesNotExceedSafeInteger2 = doesNotExceedSafeInteger$12;
  var createProperty$12 = createProperty$42;
  var arraySpeciesCreate2 = arraySpeciesCreate$22;
  var arrayMethodHasSpeciesSupport$22 = arrayMethodHasSpeciesSupport$42;
  var wellKnownSymbol2 = wellKnownSymbol$k2;
  var V8_VERSION2 = engineV8Version2;
  var IS_CONCAT_SPREADABLE2 = wellKnownSymbol2("isConcatSpreadable");
  var IS_CONCAT_SPREADABLE_SUPPORT2 = V8_VERSION2 >= 51 || !fails$32(function() {
    var array2 = [];
    array2[IS_CONCAT_SPREADABLE2] = false;
    return array2.concat()[0] !== array2;
  });
  var isConcatSpreadable2 = function(O) {
    if (!isObject2(O)) return false;
    var spreadable = O[IS_CONCAT_SPREADABLE2];
    return spreadable !== void 0 ? !!spreadable : isArray4(O);
  };
  var FORCED$12 = !IS_CONCAT_SPREADABLE_SUPPORT2 || !arrayMethodHasSpeciesSupport$22("concat");
  $$72({ target: "Array", proto: true, arity: 1, forced: FORCED$12 }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    concat: function concat4(arg) {
      var O = toObject$22(this);
      var A2 = arraySpeciesCreate2(O, 0);
      var n = 0;
      var i, k2, length3, len, E2;
      for (i = -1, length3 = arguments.length; i < length3; i++) {
        E2 = i === -1 ? O : arguments[i];
        if (isConcatSpreadable2(E2)) {
          len = lengthOfArrayLike$22(E2);
          doesNotExceedSafeInteger2(n + len);
          for (k2 = 0; k2 < len; k2++, n++) if (k2 in E2) createProperty$12(A2, n, E2[k2]);
        } else {
          doesNotExceedSafeInteger2(n + 1);
          createProperty$12(A2, n++, E2);
        }
      }
      A2.length = n;
      return A2;
    }
  });
  var $$62 = _export2;
  var call$12 = functionCall2;
  var aCallable$12 = aCallable$a2;
  var newPromiseCapabilityModule2 = newPromiseCapability$22;
  var perform2 = perform$42;
  var iterate$12 = iterate$62;
  var PROMISE_STATICS_INCORRECT_ITERATION2 = promiseStaticsIncorrectIteration2;
  $$62({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION2 }, {
    allSettled: function allSettled2(iterable) {
      var C2 = this;
      var capability = newPromiseCapabilityModule2.f(C2);
      var resolve5 = capability.resolve;
      var reject5 = capability.reject;
      var result = perform2(function() {
        var promiseResolve5 = aCallable$12(C2.resolve);
        var values5 = [];
        var counter5 = 0;
        var remaining = 1;
        iterate$12(iterable, function(promise5) {
          var index = counter5++;
          var alreadyCalled = false;
          remaining++;
          call$12(promiseResolve5, C2, promise5).then(function(value) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values5[index] = { status: "fulfilled", value };
            --remaining || resolve5(values5);
          }, function(error) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values5[index] = { status: "rejected", reason: error };
            --remaining || resolve5(values5);
          });
        });
        --remaining || resolve5(values5);
      });
      if (result.error) reject5(result.value);
      return capability.promise;
    }
  });
  var create5 = objectCreate2;
  var defineBuiltInAccessor2 = defineBuiltInAccessor$32;
  var defineBuiltIns2 = defineBuiltIns$22;
  var bind$12 = functionBindContext2;
  var anInstance2 = anInstance$42;
  var isNullOrUndefined2 = isNullOrUndefined$72;
  var iterate2 = iterate$62;
  var defineIterator2 = iteratorDefine2;
  var createIterResultObject2 = createIterResultObject$32;
  var setSpecies2 = setSpecies$22;
  var DESCRIPTORS2 = descriptors2;
  var fastKey2 = internalMetadataExports2.fastKey;
  var InternalStateModule2 = internalState2;
  var setInternalState2 = InternalStateModule2.set;
  var internalStateGetterFor2 = InternalStateModule2.getterFor;
  var collectionStrong$12 = {
    getConstructor: function(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
      var Constructor = wrapper(function(that, iterable) {
        anInstance2(that, Prototype);
        setInternalState2(that, {
          type: CONSTRUCTOR_NAME,
          index: create5(null),
          first: void 0,
          last: void 0,
          size: 0
        });
        if (!DESCRIPTORS2) that.size = 0;
        if (!isNullOrUndefined2(iterable)) iterate2(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
      });
      var Prototype = Constructor.prototype;
      var getInternalState5 = internalStateGetterFor2(CONSTRUCTOR_NAME);
      var define = function(that, key, value) {
        var state = getInternalState5(that);
        var entry = getEntry(that, key);
        var previous, index;
        if (entry) {
          entry.value = value;
        } else {
          state.last = entry = {
            index: index = fastKey2(key, true),
            key,
            value,
            previous: previous = state.last,
            next: void 0,
            removed: false
          };
          if (!state.first) state.first = entry;
          if (previous) previous.next = entry;
          if (DESCRIPTORS2) state.size++;
          else that.size++;
          if (index !== "F") state.index[index] = entry;
        }
        return that;
      };
      var getEntry = function(that, key) {
        var state = getInternalState5(that);
        var index = fastKey2(key);
        var entry;
        if (index !== "F") return state.index[index];
        for (entry = state.first; entry; entry = entry.next) {
          if (entry.key === key) return entry;
        }
      };
      defineBuiltIns2(Prototype, {
        // `{ Map, Set }.prototype.clear()` methods
        // https://tc39.es/ecma262/#sec-map.prototype.clear
        // https://tc39.es/ecma262/#sec-set.prototype.clear
        clear: function clear5() {
          var that = this;
          var state = getInternalState5(that);
          var data6 = state.index;
          var entry = state.first;
          while (entry) {
            entry.removed = true;
            if (entry.previous) entry.previous = entry.previous.next = void 0;
            delete data6[entry.index];
            entry = entry.next;
          }
          state.first = state.last = void 0;
          if (DESCRIPTORS2) state.size = 0;
          else that.size = 0;
        },
        // `{ Map, Set }.prototype.delete(key)` methods
        // https://tc39.es/ecma262/#sec-map.prototype.delete
        // https://tc39.es/ecma262/#sec-set.prototype.delete
        "delete": function(key) {
          var that = this;
          var state = getInternalState5(that);
          var entry = getEntry(that, key);
          if (entry) {
            var next5 = entry.next;
            var prev = entry.previous;
            delete state.index[entry.index];
            entry.removed = true;
            if (prev) prev.next = next5;
            if (next5) next5.previous = prev;
            if (state.first === entry) state.first = next5;
            if (state.last === entry) state.last = prev;
            if (DESCRIPTORS2) state.size--;
            else that.size--;
          }
          return !!entry;
        },
        // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
        // https://tc39.es/ecma262/#sec-map.prototype.foreach
        // https://tc39.es/ecma262/#sec-set.prototype.foreach
        forEach: function forEach7(callbackfn) {
          var state = getInternalState5(this);
          var boundFunction = bind$12(callbackfn, arguments.length > 1 ? arguments[1] : void 0);
          var entry;
          while (entry = entry ? entry.next : state.first) {
            boundFunction(entry.value, entry.key, this);
            while (entry && entry.removed) entry = entry.previous;
          }
        },
        // `{ Map, Set}.prototype.has(key)` methods
        // https://tc39.es/ecma262/#sec-map.prototype.has
        // https://tc39.es/ecma262/#sec-set.prototype.has
        has: function has5(key) {
          return !!getEntry(this, key);
        }
      });
      defineBuiltIns2(Prototype, IS_MAP ? {
        // `Map.prototype.get(key)` method
        // https://tc39.es/ecma262/#sec-map.prototype.get
        get: function get7(key) {
          var entry = getEntry(this, key);
          return entry && entry.value;
        },
        // `Map.prototype.set(key, value)` method
        // https://tc39.es/ecma262/#sec-map.prototype.set
        set: function set7(key, value) {
          return define(this, key === 0 ? 0 : key, value);
        }
      } : {
        // `Set.prototype.add(value)` method
        // https://tc39.es/ecma262/#sec-set.prototype.add
        add: function add(value) {
          return define(this, value = value === 0 ? 0 : value, value);
        }
      });
      if (DESCRIPTORS2) defineBuiltInAccessor2(Prototype, "size", {
        configurable: true,
        get: function() {
          return getInternalState5(this).size;
        }
      });
      return Constructor;
    },
    setStrong: function(Constructor, CONSTRUCTOR_NAME, IS_MAP) {
      var ITERATOR_NAME = CONSTRUCTOR_NAME + " Iterator";
      var getInternalCollectionState = internalStateGetterFor2(CONSTRUCTOR_NAME);
      var getInternalIteratorState = internalStateGetterFor2(ITERATOR_NAME);
      defineIterator2(Constructor, CONSTRUCTOR_NAME, function(iterated, kind) {
        setInternalState2(this, {
          type: ITERATOR_NAME,
          target: iterated,
          state: getInternalCollectionState(iterated),
          kind,
          last: void 0
        });
      }, function() {
        var state = getInternalIteratorState(this);
        var kind = state.kind;
        var entry = state.last;
        while (entry && entry.removed) entry = entry.previous;
        if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
          state.target = void 0;
          return createIterResultObject2(void 0, true);
        }
        if (kind === "keys") return createIterResultObject2(entry.key, false);
        if (kind === "values") return createIterResultObject2(entry.value, false);
        return createIterResultObject2([entry.key, entry.value], false);
      }, IS_MAP ? "entries" : "values", !IS_MAP, true);
      setSpecies2(CONSTRUCTOR_NAME);
    }
  };
  var collection2 = collection$22;
  var collectionStrong2 = collectionStrong$12;
  collection2("Map", function(init2) {
    return function Map2() {
      return init2(this, arguments.length ? arguments[0] : void 0);
    };
  }, collectionStrong2);
  var tryToString2 = tryToString$52;
  var $TypeError2 = TypeError;
  var deletePropertyOrThrow$12 = function(O, P) {
    if (!delete O[P]) throw new $TypeError2("Cannot delete property " + tryToString2(P) + " of " + tryToString2(O));
  };
  var arraySlice2 = arraySliceSimple2;
  var floor2 = Math.floor;
  var mergeSort2 = function(array2, comparefn) {
    var length3 = array2.length;
    var middle = floor2(length3 / 2);
    return length3 < 8 ? insertionSort2(array2, comparefn) : merge2(
      array2,
      mergeSort2(arraySlice2(array2, 0, middle), comparefn),
      mergeSort2(arraySlice2(array2, middle), comparefn),
      comparefn
    );
  };
  var insertionSort2 = function(array2, comparefn) {
    var length3 = array2.length;
    var i = 1;
    var element, j;
    while (i < length3) {
      j = i;
      element = array2[i];
      while (j && comparefn(array2[j - 1], element) > 0) {
        array2[j] = array2[--j];
      }
      if (j !== i++) array2[j] = element;
    }
    return array2;
  };
  var merge2 = function(array2, left2, right2, comparefn) {
    var llength = left2.length;
    var rlength = right2.length;
    var lindex = 0;
    var rindex = 0;
    while (lindex < llength || rindex < rlength) {
      array2[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left2[lindex], right2[rindex]) <= 0 ? left2[lindex++] : right2[rindex++] : lindex < llength ? left2[lindex++] : right2[rindex++];
    }
    return array2;
  };
  var arraySort2 = mergeSort2;
  var userAgent$12 = engineUserAgent2;
  var firefox2 = userAgent$12.match(/firefox\/(\d+)/i);
  var engineFfVersion2 = !!firefox2 && +firefox2[1];
  var UA2 = engineUserAgent2;
  var engineIsIeOrEdge2 = /MSIE|Trident/.test(UA2);
  var userAgent2 = engineUserAgent2;
  var webkit2 = userAgent2.match(/AppleWebKit\/(\d+)\./);
  var engineWebkitVersion2 = !!webkit2 && +webkit2[1];
  var $$52 = _export2;
  var uncurryThis$12 = functionUncurryThis2;
  var aCallable2 = aCallable$a2;
  var toObject$12 = toObject$82;
  var lengthOfArrayLike$12 = lengthOfArrayLike$82;
  var deletePropertyOrThrow2 = deletePropertyOrThrow$12;
  var toString$12 = toString$52;
  var fails$22 = fails$p2;
  var internalSort2 = arraySort2;
  var arrayMethodIsStrict2 = arrayMethodIsStrict$32;
  var FF2 = engineFfVersion2;
  var IE_OR_EDGE2 = engineIsIeOrEdge2;
  var V82 = engineV8Version2;
  var WEBKIT2 = engineWebkitVersion2;
  var test2 = [];
  var nativeSort2 = uncurryThis$12(test2.sort);
  var push2 = uncurryThis$12(test2.push);
  var FAILS_ON_UNDEFINED2 = fails$22(function() {
    test2.sort(void 0);
  });
  var FAILS_ON_NULL2 = fails$22(function() {
    test2.sort(null);
  });
  var STRICT_METHOD2 = arrayMethodIsStrict2("sort");
  var STABLE_SORT2 = !fails$22(function() {
    if (V82) return V82 < 70;
    if (FF2 && FF2 > 3) return;
    if (IE_OR_EDGE2) return true;
    if (WEBKIT2) return WEBKIT2 < 603;
    var result = "";
    var code, chr, value, index;
    for (code = 65; code < 76; code++) {
      chr = String.fromCharCode(code);
      switch (code) {
        case 66:
        case 69:
        case 70:
        case 72:
          value = 3;
          break;
        case 68:
        case 71:
          value = 4;
          break;
        default:
          value = 2;
      }
      for (index = 0; index < 47; index++) {
        test2.push({ k: chr + index, v: value });
      }
    }
    test2.sort(function(a2, b) {
      return b.v - a2.v;
    });
    for (index = 0; index < test2.length; index++) {
      chr = test2[index].k.charAt(0);
      if (result.charAt(result.length - 1) !== chr) result += chr;
    }
    return result !== "DGBEFHACIJK";
  });
  var FORCED2 = FAILS_ON_UNDEFINED2 || !FAILS_ON_NULL2 || !STRICT_METHOD2 || !STABLE_SORT2;
  var getSortCompare2 = function(comparefn) {
    return function(x, y) {
      if (y === void 0) return -1;
      if (x === void 0) return 1;
      if (comparefn !== void 0) return +comparefn(x, y) || 0;
      return toString$12(x) > toString$12(y) ? 1 : -1;
    };
  };
  $$52({ target: "Array", proto: true, forced: FORCED2 }, {
    sort: function sort3(comparefn) {
      if (comparefn !== void 0) aCallable2(comparefn);
      var array2 = toObject$12(this);
      if (STABLE_SORT2) return comparefn === void 0 ? nativeSort2(array2) : nativeSort2(array2, comparefn);
      var items = [];
      var arrayLength = lengthOfArrayLike$12(array2);
      var itemsLength, index;
      for (index = 0; index < arrayLength; index++) {
        if (index in array2) push2(items, array2[index]);
      }
      internalSort2(items, getSortCompare2(comparefn));
      itemsLength = lengthOfArrayLike$12(items);
      index = 0;
      while (index < itemsLength) array2[index] = items[index++];
      while (index < arrayLength) deletePropertyOrThrow2(array2, index++);
      return array2;
    }
  });
  var $$42 = _export2;
  var $includes2 = arrayIncludes2.includes;
  var fails$12 = fails$p2;
  var addToUnscopables2 = addToUnscopables$22;
  var BROKEN_ON_SPARSE2 = fails$12(function() {
    return !Array(1).includes();
  });
  $$42({ target: "Array", proto: true, forced: BROKEN_ON_SPARSE2 }, {
    includes: function includes3(el) {
      return $includes2(this, el, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  addToUnscopables2("includes");
  var $$32 = _export2;
  var $map2 = arrayIteration2.map;
  var arrayMethodHasSpeciesSupport$12 = arrayMethodHasSpeciesSupport$42;
  var HAS_SPECIES_SUPPORT$12 = arrayMethodHasSpeciesSupport$12("map");
  $$32({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT$12 }, {
    map: function map5(callbackfn) {
      return $map2(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  var $$22 = _export2;
  var $filter2 = arrayIteration2.filter;
  var arrayMethodHasSpeciesSupport2 = arrayMethodHasSpeciesSupport$42;
  var HAS_SPECIES_SUPPORT2 = arrayMethodHasSpeciesSupport2("filter");
  $$22({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT2 }, {
    filter: function filter3(callbackfn) {
      return $filter2(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  var anObject2 = anObject$c2;
  var iteratorClose2 = iteratorClose$22;
  var callWithSafeIterationClosing$12 = function(iterator, fn2, value, ENTRIES5) {
    try {
      return ENTRIES5 ? fn2(anObject2(value)[0], value[1]) : fn2(value);
    } catch (error) {
      iteratorClose2(iterator, "throw", error);
    }
  };
  var bind2 = functionBindContext2;
  var call2 = functionCall2;
  var toObject2 = toObject$82;
  var callWithSafeIterationClosing2 = callWithSafeIterationClosing$12;
  var isArrayIteratorMethod2 = isArrayIteratorMethod$22;
  var isConstructor6 = isConstructor$42;
  var lengthOfArrayLike2 = lengthOfArrayLike$82;
  var createProperty2 = createProperty$42;
  var getIterator2 = getIterator$22;
  var getIteratorMethod2 = getIteratorMethod$32;
  var $Array2 = Array;
  var arrayFrom2 = function from3(arrayLike) {
    var O = toObject2(arrayLike);
    var IS_CONSTRUCTOR = isConstructor6(this);
    var argumentsLength = arguments.length;
    var mapfn = argumentsLength > 1 ? arguments[1] : void 0;
    var mapping = mapfn !== void 0;
    if (mapping) mapfn = bind2(mapfn, argumentsLength > 2 ? arguments[2] : void 0);
    var iteratorMethod = getIteratorMethod2(O);
    var index = 0;
    var length3, result, step, iterator, next5, value;
    if (iteratorMethod && !(this === $Array2 && isArrayIteratorMethod2(iteratorMethod))) {
      iterator = getIterator2(O, iteratorMethod);
      next5 = iterator.next;
      result = IS_CONSTRUCTOR ? new this() : [];
      for (; !(step = call2(next5, iterator)).done; index++) {
        value = mapping ? callWithSafeIterationClosing2(iterator, mapfn, [step.value, index], true) : step.value;
        createProperty2(result, index, value);
      }
    } else {
      length3 = lengthOfArrayLike2(O);
      result = IS_CONSTRUCTOR ? new this(length3) : $Array2(length3);
      for (; length3 > index; index++) {
        value = mapping ? mapfn(O[index], index) : O[index];
        createProperty2(result, index, value);
      }
    }
    result.length = index;
    return result;
  };
  var $$12 = _export2;
  var from4 = arrayFrom2;
  var checkCorrectnessOfIteration2 = checkCorrectnessOfIteration$32;
  var INCORRECT_ITERATION2 = !checkCorrectnessOfIteration2(function(iterable) {
    Array.from(iterable);
  });
  $$12({ target: "Array", stat: true, forced: INCORRECT_ITERATION2 }, {
    from: from4
  });
  var whitespaces$22 = "	\n\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
  var uncurryThis2 = functionUncurryThis2;
  var requireObjectCoercible2 = requireObjectCoercible$52;
  var toString6 = toString$52;
  var whitespaces$12 = whitespaces$22;
  var replace2 = uncurryThis2("".replace);
  var ltrim2 = RegExp("^[" + whitespaces$12 + "]+");
  var rtrim2 = RegExp("(^|[^" + whitespaces$12 + "])[" + whitespaces$12 + "]+$");
  var createMethod2 = function(TYPE) {
    return function($this) {
      var string = toString6(requireObjectCoercible2($this));
      if (TYPE & 1) string = replace2(string, ltrim2, "");
      if (TYPE & 2) string = replace2(string, rtrim2, "$1");
      return string;
    };
  };
  var stringTrim2 = {
    // `String.prototype.{ trimLeft, trimStart }` methods
    // https://tc39.es/ecma262/#sec-string.prototype.trimstart
    start: createMethod2(1),
    // `String.prototype.{ trimRight, trimEnd }` methods
    // https://tc39.es/ecma262/#sec-string.prototype.trimend
    end: createMethod2(2),
    // `String.prototype.trim` method
    // https://tc39.es/ecma262/#sec-string.prototype.trim
    trim: createMethod2(3)
  };
  var PROPER_FUNCTION_NAME2 = functionName2.PROPER;
  var fails2 = fails$p2;
  var whitespaces2 = whitespaces$22;
  var non2 = "\u200B\x85\u180E";
  var stringTrimForced2 = function(METHOD_NAME) {
    return fails2(function() {
      return !!whitespaces2[METHOD_NAME]() || non2[METHOD_NAME]() !== non2 || PROPER_FUNCTION_NAME2 && whitespaces2[METHOD_NAME].name !== METHOD_NAME;
    });
  };
  var $2 = _export2;
  var $trim2 = stringTrim2.trim;
  var forcedStringTrimMethod2 = stringTrimForced2;
  $2({ target: "String", proto: true, forced: forcedStringTrimMethod2("trim") }, {
    trim: function trim2() {
      return $trim2(this);
    }
  });
  var DEFAULT_SELECTOR$22 = ".ch-subdomain";
  var DEFAULT_SELECTOR$12 = ".ch-container";
  var _LegendLite_instances;
  var _LegendLite_buildLegend;
  var _LegendLite_nodeAttrs;
  var DEFAULT_SELECTOR2 = ".ch-plugin-legend-lite";
  var defaultOptions = {
    enabled: true,
    // Whether to display the legend
    itemSelector: null,
    width: OPTIONS_DEFAULT_SUBDOMAIN_WIDTH2,
    height: OPTIONS_DEFAULT_SUBDOMAIN_HEIGHT2,
    gutter: OPTIONS_DEFAULT_SUBDOMAIN_GUTTER2,
    radius: OPTIONS_DEFAULT_SUBDOMAIN_RADIUS2,
    includeBlank: false
  };
  var LegendLite = /* @__PURE__ */ (function() {
    function LegendLite2(calendar2) {
      _classCallCheck2(this, LegendLite2);
      _LegendLite_instances.add(this);
      this.name = "LegendLite";
      this.calendar = calendar2;
      this.root = null;
      this.shown = false;
      this.options = defaultOptions;
    }
    _createClass2(LegendLite2, [{
      key: "setup",
      value: function setup(pluginOptions) {
        this.options = Object.assign(Object.assign({}, this.options), pluginOptions);
      }
    }, {
      key: "paint",
      value: function paint() {
        var _this$options = this.options, enabled = _this$options.enabled, itemSelector = _this$options.itemSelector;
        if (!enabled || itemSelector && select_default2(itemSelector).empty()) {
          return this.destroy();
        }
        this.shown = true;
        this.root = select_default2(itemSelector || this.calendar.options.options.itemSelector);
        if (this.root.select(DEFAULT_SELECTOR2).empty()) {
          this.root = this.root.append("div").attr("class", DEFAULT_SELECTOR2.slice(1));
        } else {
          this.root = this.root.select(DEFAULT_SELECTOR2);
        }
        var node5 = __classPrivateFieldGet2(this, _LegendLite_instances, "m", _LegendLite_buildLegend).call(this);
        this.root.selectAll("*").remove();
        this.root.append(function() {
          return node5.node();
        });
        return Promise.resolve();
      }
    }, {
      key: "destroy",
      value: function destroy() {
        if (this.root !== null) {
          this.root.remove();
          this.root = null;
        }
        return Promise.resolve();
      }
    }]);
    return LegendLite2;
  })();
  _LegendLite_instances = /* @__PURE__ */ new WeakSet(), _LegendLite_buildLegend = function _LegendLite_buildLegend2() {
    var _this = this;
    var node5 = create_default("svg");
    var scale3 = normalizedScale2(this.calendar.options.options.scale);
    var _this$options2 = this.options, width = _this$options2.width, height = _this$options2.height, gutter = _this$options2.gutter, includeBlank = _this$options2.includeBlank;
    var localRange = _toConsumableArray2(scale3.range);
    if (includeBlank) {
      localRange.unshift(null);
    }
    node5.attr("class", DEFAULT_SELECTOR$12.slice(1)).attr("width", localRange.length * width + (localRange.length - 1) * gutter).attr("height", height);
    node5.selectAll("rect").data(localRange).join(function(enter) {
      return enter.append("rect").call(function(sc) {
        return (
          // eslint-disable-next-line implicit-arrow-linebreak
          __classPrivateFieldGet2(_this, _LegendLite_instances, "m", _LegendLite_nodeAttrs).call(_this, sc, scale3)
        );
      });
    }, function(update) {
      return update.selectAll("rect").call(function(sc) {
        return __classPrivateFieldGet2(_this, _LegendLite_instances, "m", _LegendLite_nodeAttrs).call(_this, sc, scale3);
      });
    });
    return node5;
  }, _LegendLite_nodeAttrs = function _LegendLite_nodeAttrs2(selection2, scale3) {
    var _this2 = this;
    var _this$options3 = this.options, width = _this$options3.width, height = _this$options3.height, radius3 = _this$options3.radius, gutter = _this$options3.gutter;
    return selection2.attr("width", width).attr("height", height).attr("class", "".concat(DEFAULT_SELECTOR$22.slice(1), "-bg")).attr("rx", radius3).attr("ry", radius3).attr("x", function(_d, i) {
      return i * (width + gutter);
    }).attr("y", 0).call(function(element) {
      applyScaleStyle2(element, scale3, _this2.calendar.options.options.scale);
    });
  };

  // node_modules/@popperjs/core/lib/enums.js
  var top = "top";
  var bottom = "bottom";
  var right = "right";
  var left = "left";
  var auto = "auto";
  var basePlacements = [top, bottom, right, left];
  var start2 = "start";
  var end = "end";
  var clippingParents = "clippingParents";
  var viewport = "viewport";
  var popper = "popper";
  var reference = "reference";
  var variationPlacements = /* @__PURE__ */ basePlacements.reduce(function(acc, placement) {
    return acc.concat([placement + "-" + start2, placement + "-" + end]);
  }, []);
  var placements = /* @__PURE__ */ [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
    return acc.concat([placement, placement + "-" + start2, placement + "-" + end]);
  }, []);
  var beforeRead = "beforeRead";
  var read = "read";
  var afterRead = "afterRead";
  var beforeMain = "beforeMain";
  var main = "main";
  var afterMain = "afterMain";
  var beforeWrite = "beforeWrite";
  var write = "write";
  var afterWrite = "afterWrite";
  var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

  // node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
  function getNodeName(element) {
    return element ? (element.nodeName || "").toLowerCase() : null;
  }

  // node_modules/@popperjs/core/lib/dom-utils/getWindow.js
  function getWindow(node5) {
    if (node5 == null) {
      return window;
    }
    if (node5.toString() !== "[object Window]") {
      var ownerDocument = node5.ownerDocument;
      return ownerDocument ? ownerDocument.defaultView || window : window;
    }
    return node5;
  }

  // node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
  function isElement(node5) {
    var OwnElement = getWindow(node5).Element;
    return node5 instanceof OwnElement || node5 instanceof Element;
  }
  function isHTMLElement(node5) {
    var OwnElement = getWindow(node5).HTMLElement;
    return node5 instanceof OwnElement || node5 instanceof HTMLElement;
  }
  function isShadowRoot(node5) {
    if (typeof ShadowRoot === "undefined") {
      return false;
    }
    var OwnElement = getWindow(node5).ShadowRoot;
    return node5 instanceof OwnElement || node5 instanceof ShadowRoot;
  }

  // node_modules/@popperjs/core/lib/modifiers/applyStyles.js
  function applyStyles(_ref) {
    var state = _ref.state;
    Object.keys(state.elements).forEach(function(name) {
      var style = state.styles[name] || {};
      var attributes = state.attributes[name] || {};
      var element = state.elements[name];
      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function(name2) {
        var value = attributes[name2];
        if (value === false) {
          element.removeAttribute(name2);
        } else {
          element.setAttribute(name2, value === true ? "" : value);
        }
      });
    });
  }
  function effect(_ref2) {
    var state = _ref2.state;
    var initialStyles = {
      popper: {
        position: state.options.strategy,
        left: "0",
        top: "0",
        margin: "0"
      },
      arrow: {
        position: "absolute"
      },
      reference: {}
    };
    Object.assign(state.elements.popper.style, initialStyles.popper);
    state.styles = initialStyles;
    if (state.elements.arrow) {
      Object.assign(state.elements.arrow.style, initialStyles.arrow);
    }
    return function() {
      Object.keys(state.elements).forEach(function(name) {
        var element = state.elements[name];
        var attributes = state.attributes[name] || {};
        var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
        var style = styleProperties.reduce(function(style2, property) {
          style2[property] = "";
          return style2;
        }, {});
        if (!isHTMLElement(element) || !getNodeName(element)) {
          return;
        }
        Object.assign(element.style, style);
        Object.keys(attributes).forEach(function(attribute) {
          element.removeAttribute(attribute);
        });
      });
    };
  }
  var applyStyles_default = {
    name: "applyStyles",
    enabled: true,
    phase: "write",
    fn: applyStyles,
    effect,
    requires: ["computeStyles"]
  };

  // node_modules/@popperjs/core/lib/utils/getBasePlacement.js
  function getBasePlacement(placement) {
    return placement.split("-")[0];
  }

  // node_modules/@popperjs/core/lib/utils/math.js
  var max5 = Math.max;
  var min6 = Math.min;
  var round = Math.round;

  // node_modules/@popperjs/core/lib/utils/userAgent.js
  function getUAString() {
    var uaData = navigator.userAgentData;
    if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
      return uaData.brands.map(function(item) {
        return item.brand + "/" + item.version;
      }).join(" ");
    }
    return navigator.userAgent;
  }

  // node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js
  function isLayoutViewport() {
    return !/^((?!chrome|android).)*safari/i.test(getUAString());
  }

  // node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
  function getBoundingClientRect(element, includeScale, isFixedStrategy) {
    if (includeScale === void 0) {
      includeScale = false;
    }
    if (isFixedStrategy === void 0) {
      isFixedStrategy = false;
    }
    var clientRect = element.getBoundingClientRect();
    var scaleX = 1;
    var scaleY = 1;
    if (includeScale && isHTMLElement(element)) {
      scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
      scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
    }
    var _ref = isElement(element) ? getWindow(element) : window, visualViewport = _ref.visualViewport;
    var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
    var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
    var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
    var width = clientRect.width / scaleX;
    var height = clientRect.height / scaleY;
    return {
      width,
      height,
      top: y,
      right: x + width,
      bottom: y + height,
      left: x,
      x,
      y
    };
  }

  // node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
  function getLayoutRect(element) {
    var clientRect = getBoundingClientRect(element);
    var width = element.offsetWidth;
    var height = element.offsetHeight;
    if (Math.abs(clientRect.width - width) <= 1) {
      width = clientRect.width;
    }
    if (Math.abs(clientRect.height - height) <= 1) {
      height = clientRect.height;
    }
    return {
      x: element.offsetLeft,
      y: element.offsetTop,
      width,
      height
    };
  }

  // node_modules/@popperjs/core/lib/dom-utils/contains.js
  function contains(parent, child) {
    var rootNode = child.getRootNode && child.getRootNode();
    if (parent.contains(child)) {
      return true;
    } else if (rootNode && isShadowRoot(rootNode)) {
      var next5 = child;
      do {
        if (next5 && parent.isSameNode(next5)) {
          return true;
        }
        next5 = next5.parentNode || next5.host;
      } while (next5);
    }
    return false;
  }

  // node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
  function getComputedStyle(element) {
    return getWindow(element).getComputedStyle(element);
  }

  // node_modules/@popperjs/core/lib/dom-utils/isTableElement.js
  function isTableElement(element) {
    return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
  }

  // node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js
  function getDocumentElement(element) {
    return ((isElement(element) ? element.ownerDocument : (
      // $FlowFixMe[prop-missing]
      element.document
    )) || window.document).documentElement;
  }

  // node_modules/@popperjs/core/lib/dom-utils/getParentNode.js
  function getParentNode(element) {
    if (getNodeName(element) === "html") {
      return element;
    }
    return (
      // this is a quicker (but less type safe) way to save quite some bytes from the bundle
      // $FlowFixMe[incompatible-return]
      // $FlowFixMe[prop-missing]
      element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
      element.parentNode || // DOM Element detected
      (isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
      // $FlowFixMe[incompatible-call]: HTMLElement is a Node
      getDocumentElement(element)
    );
  }

  // node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js
  function getTrueOffsetParent(element) {
    if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
    getComputedStyle(element).position === "fixed") {
      return null;
    }
    return element.offsetParent;
  }
  function getContainingBlock(element) {
    var isFirefox = /firefox/i.test(getUAString());
    var isIE = /Trident/i.test(getUAString());
    if (isIE && isHTMLElement(element)) {
      var elementCss = getComputedStyle(element);
      if (elementCss.position === "fixed") {
        return null;
      }
    }
    var currentNode = getParentNode(element);
    if (isShadowRoot(currentNode)) {
      currentNode = currentNode.host;
    }
    while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
      var css = getComputedStyle(currentNode);
      if (css.transform !== "none" || css.perspective !== "none" || css.contain === "paint" || ["transform", "perspective"].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === "filter" || isFirefox && css.filter && css.filter !== "none") {
        return currentNode;
      } else {
        currentNode = currentNode.parentNode;
      }
    }
    return null;
  }
  function getOffsetParent(element) {
    var window2 = getWindow(element);
    var offsetParent = getTrueOffsetParent(element);
    while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === "static") {
      offsetParent = getTrueOffsetParent(offsetParent);
    }
    if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle(offsetParent).position === "static")) {
      return window2;
    }
    return offsetParent || getContainingBlock(element) || window2;
  }

  // node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
  function getMainAxisFromPlacement(placement) {
    return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
  }

  // node_modules/@popperjs/core/lib/utils/within.js
  function within(min9, value, max8) {
    return max5(min9, min6(value, max8));
  }
  function withinMaxClamp(min9, value, max8) {
    var v = within(min9, value, max8);
    return v > max8 ? max8 : v;
  }

  // node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
  function getFreshSideObject() {
    return {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    };
  }

  // node_modules/@popperjs/core/lib/utils/mergePaddingObject.js
  function mergePaddingObject(paddingObject) {
    return Object.assign({}, getFreshSideObject(), paddingObject);
  }

  // node_modules/@popperjs/core/lib/utils/expandToHashMap.js
  function expandToHashMap(value, keys12) {
    return keys12.reduce(function(hashMap, key) {
      hashMap[key] = value;
      return hashMap;
    }, {});
  }

  // node_modules/@popperjs/core/lib/modifiers/arrow.js
  var toPaddingObject = function toPaddingObject2(padding, state) {
    padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
      placement: state.placement
    })) : padding;
    return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  };
  function arrow(_ref) {
    var _state$modifiersData$;
    var state = _ref.state, name = _ref.name, options = _ref.options;
    var arrowElement = state.elements.arrow;
    var popperOffsets2 = state.modifiersData.popperOffsets;
    var basePlacement = getBasePlacement(state.placement);
    var axis = getMainAxisFromPlacement(basePlacement);
    var isVertical3 = [left, right].indexOf(basePlacement) >= 0;
    var len = isVertical3 ? "height" : "width";
    if (!arrowElement || !popperOffsets2) {
      return;
    }
    var paddingObject = toPaddingObject(options.padding, state);
    var arrowRect = getLayoutRect(arrowElement);
    var minProp = axis === "y" ? top : left;
    var maxProp = axis === "y" ? bottom : right;
    var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
    var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
    var arrowOffsetParent = getOffsetParent(arrowElement);
    var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
    var centerToReference = endDiff / 2 - startDiff / 2;
    var min9 = paddingObject[minProp];
    var max8 = clientSize - arrowRect[len] - paddingObject[maxProp];
    var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
    var offset2 = within(min9, center, max8);
    var axisProp = axis;
    state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
  }
  function effect2(_ref2) {
    var state = _ref2.state, options = _ref2.options;
    var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
    if (arrowElement == null) {
      return;
    }
    if (typeof arrowElement === "string") {
      arrowElement = state.elements.popper.querySelector(arrowElement);
      if (!arrowElement) {
        return;
      }
    }
    if (!contains(state.elements.popper, arrowElement)) {
      return;
    }
    state.elements.arrow = arrowElement;
  }
  var arrow_default = {
    name: "arrow",
    enabled: true,
    phase: "main",
    fn: arrow,
    effect: effect2,
    requires: ["popperOffsets"],
    requiresIfExists: ["preventOverflow"]
  };

  // node_modules/@popperjs/core/lib/utils/getVariation.js
  function getVariation(placement) {
    return placement.split("-")[1];
  }

  // node_modules/@popperjs/core/lib/modifiers/computeStyles.js
  var unsetSides = {
    top: "auto",
    right: "auto",
    bottom: "auto",
    left: "auto"
  };
  function roundOffsetsByDPR(_ref, win) {
    var x = _ref.x, y = _ref.y;
    var dpr = win.devicePixelRatio || 1;
    return {
      x: round(x * dpr) / dpr || 0,
      y: round(y * dpr) / dpr || 0
    };
  }
  function mapToStyles(_ref2) {
    var _Object$assign2;
    var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position3 = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
    var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
    var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
      x,
      y
    }) : {
      x,
      y
    };
    x = _ref3.x;
    y = _ref3.y;
    var hasX = offsets.hasOwnProperty("x");
    var hasY = offsets.hasOwnProperty("y");
    var sideX = left;
    var sideY = top;
    var win = window;
    if (adaptive) {
      var offsetParent = getOffsetParent(popper2);
      var heightProp = "clientHeight";
      var widthProp = "clientWidth";
      if (offsetParent === getWindow(popper2)) {
        offsetParent = getDocumentElement(popper2);
        if (getComputedStyle(offsetParent).position !== "static" && position3 === "absolute") {
          heightProp = "scrollHeight";
          widthProp = "scrollWidth";
        }
      }
      offsetParent = offsetParent;
      if (placement === top || (placement === left || placement === right) && variation === end) {
        sideY = bottom;
        var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : (
          // $FlowFixMe[prop-missing]
          offsetParent[heightProp]
        );
        y -= offsetY - popperRect.height;
        y *= gpuAcceleration ? 1 : -1;
      }
      if (placement === left || (placement === top || placement === bottom) && variation === end) {
        sideX = right;
        var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : (
          // $FlowFixMe[prop-missing]
          offsetParent[widthProp]
        );
        x -= offsetX - popperRect.width;
        x *= gpuAcceleration ? 1 : -1;
      }
    }
    var commonStyles = Object.assign({
      position: position3
    }, adaptive && unsetSides);
    var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
      x,
      y
    }, getWindow(popper2)) : {
      x,
      y
    };
    x = _ref4.x;
    y = _ref4.y;
    if (gpuAcceleration) {
      var _Object$assign;
      return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
    }
    return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
  }
  function computeStyles(_ref5) {
    var state = _ref5.state, options = _ref5.options;
    var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
    var commonStyles = {
      placement: getBasePlacement(state.placement),
      variation: getVariation(state.placement),
      popper: state.elements.popper,
      popperRect: state.rects.popper,
      gpuAcceleration,
      isFixed: state.options.strategy === "fixed"
    };
    if (state.modifiersData.popperOffsets != null) {
      state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
        offsets: state.modifiersData.popperOffsets,
        position: state.options.strategy,
        adaptive,
        roundOffsets
      })));
    }
    if (state.modifiersData.arrow != null) {
      state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
        offsets: state.modifiersData.arrow,
        position: "absolute",
        adaptive: false,
        roundOffsets
      })));
    }
    state.attributes.popper = Object.assign({}, state.attributes.popper, {
      "data-popper-placement": state.placement
    });
  }
  var computeStyles_default = {
    name: "computeStyles",
    enabled: true,
    phase: "beforeWrite",
    fn: computeStyles,
    data: {}
  };

  // node_modules/@popperjs/core/lib/modifiers/eventListeners.js
  var passive = {
    passive: true
  };
  function effect3(_ref) {
    var state = _ref.state, instance = _ref.instance, options = _ref.options;
    var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
    var window2 = getWindow(state.elements.popper);
    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.addEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.addEventListener("resize", instance.update, passive);
    }
    return function() {
      if (scroll) {
        scrollParents.forEach(function(scrollParent) {
          scrollParent.removeEventListener("scroll", instance.update, passive);
        });
      }
      if (resize) {
        window2.removeEventListener("resize", instance.update, passive);
      }
    };
  }
  var eventListeners_default = {
    name: "eventListeners",
    enabled: true,
    phase: "write",
    fn: function fn() {
    },
    effect: effect3,
    data: {}
  };

  // node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
  var hash = {
    left: "right",
    right: "left",
    bottom: "top",
    top: "bottom"
  };
  function getOppositePlacement(placement) {
    return placement.replace(/left|right|bottom|top/g, function(matched) {
      return hash[matched];
    });
  }

  // node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
  var hash2 = {
    start: "end",
    end: "start"
  };
  function getOppositeVariationPlacement(placement) {
    return placement.replace(/start|end/g, function(matched) {
      return hash2[matched];
    });
  }

  // node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
  function getWindowScroll(node5) {
    var win = getWindow(node5);
    var scrollLeft = win.pageXOffset;
    var scrollTop = win.pageYOffset;
    return {
      scrollLeft,
      scrollTop
    };
  }

  // node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js
  function getWindowScrollBarX(element) {
    return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
  }

  // node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js
  function getViewportRect(element, strategy) {
    var win = getWindow(element);
    var html5 = getDocumentElement(element);
    var visualViewport = win.visualViewport;
    var width = html5.clientWidth;
    var height = html5.clientHeight;
    var x = 0;
    var y = 0;
    if (visualViewport) {
      width = visualViewport.width;
      height = visualViewport.height;
      var layoutViewport = isLayoutViewport();
      if (layoutViewport || !layoutViewport && strategy === "fixed") {
        x = visualViewport.offsetLeft;
        y = visualViewport.offsetTop;
      }
    }
    return {
      width,
      height,
      x: x + getWindowScrollBarX(element),
      y
    };
  }

  // node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js
  function getDocumentRect(element) {
    var _element$ownerDocumen;
    var html5 = getDocumentElement(element);
    var winScroll = getWindowScroll(element);
    var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
    var width = max5(html5.scrollWidth, html5.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
    var height = max5(html5.scrollHeight, html5.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
    var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
    var y = -winScroll.scrollTop;
    if (getComputedStyle(body || html5).direction === "rtl") {
      x += max5(html5.clientWidth, body ? body.clientWidth : 0) - width;
    }
    return {
      width,
      height,
      x,
      y
    };
  }

  // node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js
  function isScrollParent(element) {
    var _getComputedStyle = getComputedStyle(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
  }

  // node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js
  function getScrollParent(node5) {
    if (["html", "body", "#document"].indexOf(getNodeName(node5)) >= 0) {
      return node5.ownerDocument.body;
    }
    if (isHTMLElement(node5) && isScrollParent(node5)) {
      return node5;
    }
    return getScrollParent(getParentNode(node5));
  }

  // node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js
  function listScrollParents(element, list) {
    var _element$ownerDocumen;
    if (list === void 0) {
      list = [];
    }
    var scrollParent = getScrollParent(element);
    var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
    var win = getWindow(scrollParent);
    var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
    var updatedList = list.concat(target);
    return isBody ? updatedList : (
      // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
      updatedList.concat(listScrollParents(getParentNode(target)))
    );
  }

  // node_modules/@popperjs/core/lib/utils/rectToClientRect.js
  function rectToClientRect(rect) {
    return Object.assign({}, rect, {
      left: rect.x,
      top: rect.y,
      right: rect.x + rect.width,
      bottom: rect.y + rect.height
    });
  }

  // node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js
  function getInnerBoundingClientRect(element, strategy) {
    var rect = getBoundingClientRect(element, false, strategy === "fixed");
    rect.top = rect.top + element.clientTop;
    rect.left = rect.left + element.clientLeft;
    rect.bottom = rect.top + element.clientHeight;
    rect.right = rect.left + element.clientWidth;
    rect.width = element.clientWidth;
    rect.height = element.clientHeight;
    rect.x = rect.left;
    rect.y = rect.top;
    return rect;
  }
  function getClientRectFromMixedType(element, clippingParent, strategy) {
    return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
  }
  function getClippingParents(element) {
    var clippingParents2 = listScrollParents(getParentNode(element));
    var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle(element).position) >= 0;
    var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
    if (!isElement(clipperElement)) {
      return [];
    }
    return clippingParents2.filter(function(clippingParent) {
      return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
    });
  }
  function getClippingRect(element, boundary, rootBoundary, strategy) {
    var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
    var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
    var firstClippingParent = clippingParents2[0];
    var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
      var rect = getClientRectFromMixedType(element, clippingParent, strategy);
      accRect.top = max5(rect.top, accRect.top);
      accRect.right = min6(rect.right, accRect.right);
      accRect.bottom = min6(rect.bottom, accRect.bottom);
      accRect.left = max5(rect.left, accRect.left);
      return accRect;
    }, getClientRectFromMixedType(element, firstClippingParent, strategy));
    clippingRect.width = clippingRect.right - clippingRect.left;
    clippingRect.height = clippingRect.bottom - clippingRect.top;
    clippingRect.x = clippingRect.left;
    clippingRect.y = clippingRect.top;
    return clippingRect;
  }

  // node_modules/@popperjs/core/lib/utils/computeOffsets.js
  function computeOffsets(_ref) {
    var reference2 = _ref.reference, element = _ref.element, placement = _ref.placement;
    var basePlacement = placement ? getBasePlacement(placement) : null;
    var variation = placement ? getVariation(placement) : null;
    var commonX = reference2.x + reference2.width / 2 - element.width / 2;
    var commonY = reference2.y + reference2.height / 2 - element.height / 2;
    var offsets;
    switch (basePlacement) {
      case top:
        offsets = {
          x: commonX,
          y: reference2.y - element.height
        };
        break;
      case bottom:
        offsets = {
          x: commonX,
          y: reference2.y + reference2.height
        };
        break;
      case right:
        offsets = {
          x: reference2.x + reference2.width,
          y: commonY
        };
        break;
      case left:
        offsets = {
          x: reference2.x - element.width,
          y: commonY
        };
        break;
      default:
        offsets = {
          x: reference2.x,
          y: reference2.y
        };
    }
    var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
    if (mainAxis != null) {
      var len = mainAxis === "y" ? "height" : "width";
      switch (variation) {
        case start2:
          offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
          break;
        case end:
          offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
          break;
        default:
      }
    }
    return offsets;
  }

  // node_modules/@popperjs/core/lib/utils/detectOverflow.js
  function detectOverflow(state, options) {
    if (options === void 0) {
      options = {};
    }
    var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
    var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
    var altContext = elementContext === popper ? reference : popper;
    var popperRect = state.rects.popper;
    var element = state.elements[altBoundary ? altContext : elementContext];
    var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
    var referenceClientRect = getBoundingClientRect(state.elements.reference);
    var popperOffsets2 = computeOffsets({
      reference: referenceClientRect,
      element: popperRect,
      strategy: "absolute",
      placement
    });
    var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
    var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
    var overflowOffsets = {
      top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
      bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
      left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
      right: elementClientRect.right - clippingClientRect.right + paddingObject.right
    };
    var offsetData = state.modifiersData.offset;
    if (elementContext === popper && offsetData) {
      var offset2 = offsetData[placement];
      Object.keys(overflowOffsets).forEach(function(key) {
        var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
        var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
        overflowOffsets[key] += offset2[axis] * multiply;
      });
    }
    return overflowOffsets;
  }

  // node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js
  function computeAutoPlacement(state, options) {
    if (options === void 0) {
      options = {};
    }
    var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
    var variation = getVariation(placement);
    var placements2 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
      return getVariation(placement2) === variation;
    }) : basePlacements;
    var allowedPlacements = placements2.filter(function(placement2) {
      return allowedAutoPlacements.indexOf(placement2) >= 0;
    });
    if (allowedPlacements.length === 0) {
      allowedPlacements = placements2;
    }
    var overflows = allowedPlacements.reduce(function(acc, placement2) {
      acc[placement2] = detectOverflow(state, {
        placement: placement2,
        boundary,
        rootBoundary,
        padding
      })[getBasePlacement(placement2)];
      return acc;
    }, {});
    return Object.keys(overflows).sort(function(a2, b) {
      return overflows[a2] - overflows[b];
    });
  }

  // node_modules/@popperjs/core/lib/modifiers/flip.js
  function getExpandedFallbackPlacements(placement) {
    if (getBasePlacement(placement) === auto) {
      return [];
    }
    var oppositePlacement = getOppositePlacement(placement);
    return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
  }
  function flip3(_ref) {
    var state = _ref.state, options = _ref.options, name = _ref.name;
    if (state.modifiersData[name]._skip) {
      return;
    }
    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
    var preferredPlacement = state.options.placement;
    var basePlacement = getBasePlacement(preferredPlacement);
    var isBasePlacement = basePlacement === preferredPlacement;
    var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
    var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
      return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
        placement: placement2,
        boundary,
        rootBoundary,
        padding,
        flipVariations,
        allowedAutoPlacements
      }) : placement2);
    }, []);
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var checksMap = /* @__PURE__ */ new Map();
    var makeFallbackChecks = true;
    var firstFittingPlacement = placements2[0];
    for (var i = 0; i < placements2.length; i++) {
      var placement = placements2[i];
      var _basePlacement = getBasePlacement(placement);
      var isStartVariation = getVariation(placement) === start2;
      var isVertical3 = [top, bottom].indexOf(_basePlacement) >= 0;
      var len = isVertical3 ? "width" : "height";
      var overflow = detectOverflow(state, {
        placement,
        boundary,
        rootBoundary,
        altBoundary,
        padding
      });
      var mainVariationSide = isVertical3 ? isStartVariation ? right : left : isStartVariation ? bottom : top;
      if (referenceRect[len] > popperRect[len]) {
        mainVariationSide = getOppositePlacement(mainVariationSide);
      }
      var altVariationSide = getOppositePlacement(mainVariationSide);
      var checks = [];
      if (checkMainAxis) {
        checks.push(overflow[_basePlacement] <= 0);
      }
      if (checkAltAxis) {
        checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
      }
      if (checks.every(function(check5) {
        return check5;
      })) {
        firstFittingPlacement = placement;
        makeFallbackChecks = false;
        break;
      }
      checksMap.set(placement, checks);
    }
    if (makeFallbackChecks) {
      var numberOfChecks = flipVariations ? 3 : 1;
      var _loop = function _loop2(_i2) {
        var fittingPlacement = placements2.find(function(placement2) {
          var checks2 = checksMap.get(placement2);
          if (checks2) {
            return checks2.slice(0, _i2).every(function(check5) {
              return check5;
            });
          }
        });
        if (fittingPlacement) {
          firstFittingPlacement = fittingPlacement;
          return "break";
        }
      };
      for (var _i = numberOfChecks; _i > 0; _i--) {
        var _ret = _loop(_i);
        if (_ret === "break") break;
      }
    }
    if (state.placement !== firstFittingPlacement) {
      state.modifiersData[name]._skip = true;
      state.placement = firstFittingPlacement;
      state.reset = true;
    }
  }
  var flip_default = {
    name: "flip",
    enabled: true,
    phase: "main",
    fn: flip3,
    requiresIfExists: ["offset"],
    data: {
      _skip: false
    }
  };

  // node_modules/@popperjs/core/lib/modifiers/hide.js
  function getSideOffsets(overflow, rect, preventedOffsets) {
    if (preventedOffsets === void 0) {
      preventedOffsets = {
        x: 0,
        y: 0
      };
    }
    return {
      top: overflow.top - rect.height - preventedOffsets.y,
      right: overflow.right - rect.width + preventedOffsets.x,
      bottom: overflow.bottom - rect.height + preventedOffsets.y,
      left: overflow.left - rect.width - preventedOffsets.x
    };
  }
  function isAnySideFullyClipped(overflow) {
    return [top, right, bottom, left].some(function(side) {
      return overflow[side] >= 0;
    });
  }
  function hide(_ref) {
    var state = _ref.state, name = _ref.name;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var preventedOffsets = state.modifiersData.preventOverflow;
    var referenceOverflow = detectOverflow(state, {
      elementContext: "reference"
    });
    var popperAltOverflow = detectOverflow(state, {
      altBoundary: true
    });
    var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
    var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
    var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
    var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
    state.modifiersData[name] = {
      referenceClippingOffsets,
      popperEscapeOffsets,
      isReferenceHidden,
      hasPopperEscaped
    };
    state.attributes.popper = Object.assign({}, state.attributes.popper, {
      "data-popper-reference-hidden": isReferenceHidden,
      "data-popper-escaped": hasPopperEscaped
    });
  }
  var hide_default = {
    name: "hide",
    enabled: true,
    phase: "main",
    requiresIfExists: ["preventOverflow"],
    fn: hide
  };

  // node_modules/@popperjs/core/lib/modifiers/offset.js
  function distanceAndSkiddingToXY(placement, rects, offset2) {
    var basePlacement = getBasePlacement(placement);
    var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
    var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
      placement
    })) : offset2, skidding = _ref[0], distance = _ref[1];
    skidding = skidding || 0;
    distance = (distance || 0) * invertDistance;
    return [left, right].indexOf(basePlacement) >= 0 ? {
      x: distance,
      y: skidding
    } : {
      x: skidding,
      y: distance
    };
  }
  function offset(_ref2) {
    var state = _ref2.state, options = _ref2.options, name = _ref2.name;
    var _options$offset = options.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
    var data6 = placements.reduce(function(acc, placement) {
      acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
      return acc;
    }, {});
    var _data$state$placement = data6[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
    if (state.modifiersData.popperOffsets != null) {
      state.modifiersData.popperOffsets.x += x;
      state.modifiersData.popperOffsets.y += y;
    }
    state.modifiersData[name] = data6;
  }
  var offset_default = {
    name: "offset",
    enabled: true,
    phase: "main",
    requires: ["popperOffsets"],
    fn: offset
  };

  // node_modules/@popperjs/core/lib/modifiers/popperOffsets.js
  function popperOffsets(_ref) {
    var state = _ref.state, name = _ref.name;
    state.modifiersData[name] = computeOffsets({
      reference: state.rects.reference,
      element: state.rects.popper,
      strategy: "absolute",
      placement: state.placement
    });
  }
  var popperOffsets_default = {
    name: "popperOffsets",
    enabled: true,
    phase: "read",
    fn: popperOffsets,
    data: {}
  };

  // node_modules/@popperjs/core/lib/utils/getAltAxis.js
  function getAltAxis(axis) {
    return axis === "x" ? "y" : "x";
  }

  // node_modules/@popperjs/core/lib/modifiers/preventOverflow.js
  function preventOverflow(_ref) {
    var state = _ref.state, options = _ref.options, name = _ref.name;
    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
    var overflow = detectOverflow(state, {
      boundary,
      rootBoundary,
      padding,
      altBoundary
    });
    var basePlacement = getBasePlacement(state.placement);
    var variation = getVariation(state.placement);
    var isBasePlacement = !variation;
    var mainAxis = getMainAxisFromPlacement(basePlacement);
    var altAxis = getAltAxis(mainAxis);
    var popperOffsets2 = state.modifiersData.popperOffsets;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
      placement: state.placement
    })) : tetherOffset;
    var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
      mainAxis: tetherOffsetValue,
      altAxis: tetherOffsetValue
    } : Object.assign({
      mainAxis: 0,
      altAxis: 0
    }, tetherOffsetValue);
    var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
    var data6 = {
      x: 0,
      y: 0
    };
    if (!popperOffsets2) {
      return;
    }
    if (checkMainAxis) {
      var _offsetModifierState$;
      var mainSide = mainAxis === "y" ? top : left;
      var altSide = mainAxis === "y" ? bottom : right;
      var len = mainAxis === "y" ? "height" : "width";
      var offset2 = popperOffsets2[mainAxis];
      var min9 = offset2 + overflow[mainSide];
      var max8 = offset2 - overflow[altSide];
      var additive = tether ? -popperRect[len] / 2 : 0;
      var minLen = variation === start2 ? referenceRect[len] : popperRect[len];
      var maxLen = variation === start2 ? -popperRect[len] : -referenceRect[len];
      var arrowElement = state.elements.arrow;
      var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
        width: 0,
        height: 0
      };
      var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
      var arrowPaddingMin = arrowPaddingObject[mainSide];
      var arrowPaddingMax = arrowPaddingObject[altSide];
      var arrowLen = within(0, referenceRect[len], arrowRect[len]);
      var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
      var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
      var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
      var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
      var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
      var tetherMin = offset2 + minOffset - offsetModifierValue - clientOffset;
      var tetherMax = offset2 + maxOffset - offsetModifierValue;
      var preventedOffset = within(tether ? min6(min9, tetherMin) : min9, offset2, tether ? max5(max8, tetherMax) : max8);
      popperOffsets2[mainAxis] = preventedOffset;
      data6[mainAxis] = preventedOffset - offset2;
    }
    if (checkAltAxis) {
      var _offsetModifierState$2;
      var _mainSide = mainAxis === "x" ? top : left;
      var _altSide = mainAxis === "x" ? bottom : right;
      var _offset = popperOffsets2[altAxis];
      var _len = altAxis === "y" ? "height" : "width";
      var _min = _offset + overflow[_mainSide];
      var _max = _offset - overflow[_altSide];
      var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
      var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
      var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
      var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
      var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
      popperOffsets2[altAxis] = _preventedOffset;
      data6[altAxis] = _preventedOffset - _offset;
    }
    state.modifiersData[name] = data6;
  }
  var preventOverflow_default = {
    name: "preventOverflow",
    enabled: true,
    phase: "main",
    fn: preventOverflow,
    requiresIfExists: ["offset"]
  };

  // node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
  function getHTMLElementScroll(element) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }

  // node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js
  function getNodeScroll(node5) {
    if (node5 === getWindow(node5) || !isHTMLElement(node5)) {
      return getWindowScroll(node5);
    } else {
      return getHTMLElementScroll(node5);
    }
  }

  // node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js
  function isElementScaled(element) {
    var rect = element.getBoundingClientRect();
    var scaleX = round(rect.width) / element.offsetWidth || 1;
    var scaleY = round(rect.height) / element.offsetHeight || 1;
    return scaleX !== 1 || scaleY !== 1;
  }
  function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
    if (isFixed === void 0) {
      isFixed = false;
    }
    var isOffsetParentAnElement = isHTMLElement(offsetParent);
    var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
    var documentElement = getDocumentElement(offsetParent);
    var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
    var scroll = {
      scrollLeft: 0,
      scrollTop: 0
    };
    var offsets = {
      x: 0,
      y: 0
    };
    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
      if (getNodeName(offsetParent) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
      isScrollParent(documentElement)) {
        scroll = getNodeScroll(offsetParent);
      }
      if (isHTMLElement(offsetParent)) {
        offsets = getBoundingClientRect(offsetParent, true);
        offsets.x += offsetParent.clientLeft;
        offsets.y += offsetParent.clientTop;
      } else if (documentElement) {
        offsets.x = getWindowScrollBarX(documentElement);
      }
    }
    return {
      x: rect.left + scroll.scrollLeft - offsets.x,
      y: rect.top + scroll.scrollTop - offsets.y,
      width: rect.width,
      height: rect.height
    };
  }

  // node_modules/@popperjs/core/lib/utils/orderModifiers.js
  function order(modifiers) {
    var map6 = /* @__PURE__ */ new Map();
    var visited = /* @__PURE__ */ new Set();
    var result = [];
    modifiers.forEach(function(modifier) {
      map6.set(modifier.name, modifier);
    });
    function sort4(modifier) {
      visited.add(modifier.name);
      var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
      requires.forEach(function(dep) {
        if (!visited.has(dep)) {
          var depModifier = map6.get(dep);
          if (depModifier) {
            sort4(depModifier);
          }
        }
      });
      result.push(modifier);
    }
    modifiers.forEach(function(modifier) {
      if (!visited.has(modifier.name)) {
        sort4(modifier);
      }
    });
    return result;
  }
  function orderModifiers(modifiers) {
    var orderedModifiers = order(modifiers);
    return modifierPhases.reduce(function(acc, phase) {
      return acc.concat(orderedModifiers.filter(function(modifier) {
        return modifier.phase === phase;
      }));
    }, []);
  }

  // node_modules/@popperjs/core/lib/utils/debounce.js
  function debounce(fn2) {
    var pending;
    return function() {
      if (!pending) {
        pending = new Promise(function(resolve5) {
          Promise.resolve().then(function() {
            pending = void 0;
            resolve5(fn2());
          });
        });
      }
      return pending;
    };
  }

  // node_modules/@popperjs/core/lib/utils/mergeByName.js
  function mergeByName(modifiers) {
    var merged = modifiers.reduce(function(merged2, current) {
      var existing = merged2[current.name];
      merged2[current.name] = existing ? Object.assign({}, existing, current, {
        options: Object.assign({}, existing.options, current.options),
        data: Object.assign({}, existing.data, current.data)
      }) : current;
      return merged2;
    }, {});
    return Object.keys(merged).map(function(key) {
      return merged[key];
    });
  }

  // node_modules/@popperjs/core/lib/createPopper.js
  var DEFAULT_OPTIONS = {
    placement: "bottom",
    modifiers: [],
    strategy: "absolute"
  };
  function areValidElements() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return !args.some(function(element) {
      return !(element && typeof element.getBoundingClientRect === "function");
    });
  }
  function popperGenerator(generatorOptions) {
    if (generatorOptions === void 0) {
      generatorOptions = {};
    }
    var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers2 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions4 = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
    return function createPopper2(reference2, popper2, options) {
      if (options === void 0) {
        options = defaultOptions4;
      }
      var state = {
        placement: "bottom",
        orderedModifiers: [],
        options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions4),
        modifiersData: {},
        elements: {
          reference: reference2,
          popper: popper2
        },
        attributes: {},
        styles: {}
      };
      var effectCleanupFns = [];
      var isDestroyed = false;
      var instance = {
        state,
        setOptions: function setOptions(setOptionsAction) {
          var options2 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
          cleanupModifierEffects();
          state.options = Object.assign({}, defaultOptions4, state.options, options2);
          state.scrollParents = {
            reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
            popper: listScrollParents(popper2)
          };
          var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers2, state.options.modifiers)));
          state.orderedModifiers = orderedModifiers.filter(function(m) {
            return m.enabled;
          });
          runModifierEffects();
          return instance.update();
        },
        // Sync update – it will always be executed, even if not necessary. This
        // is useful for low frequency updates where sync behavior simplifies the
        // logic.
        // For high frequency updates (e.g. `resize` and `scroll` events), always
        // prefer the async Popper#update method
        forceUpdate: function forceUpdate() {
          if (isDestroyed) {
            return;
          }
          var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
          if (!areValidElements(reference3, popper3)) {
            return;
          }
          state.rects = {
            reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
            popper: getLayoutRect(popper3)
          };
          state.reset = false;
          state.placement = state.options.placement;
          state.orderedModifiers.forEach(function(modifier) {
            return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
          });
          for (var index = 0; index < state.orderedModifiers.length; index++) {
            if (state.reset === true) {
              state.reset = false;
              index = -1;
              continue;
            }
            var _state$orderedModifie = state.orderedModifiers[index], fn2 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
            if (typeof fn2 === "function") {
              state = fn2({
                state,
                options: _options,
                name,
                instance
              }) || state;
            }
          }
        },
        // Async and optimistically optimized update – it will not be executed if
        // not necessary (debounced to run at most once-per-tick)
        update: debounce(function() {
          return new Promise(function(resolve5) {
            instance.forceUpdate();
            resolve5(state);
          });
        }),
        destroy: function destroy() {
          cleanupModifierEffects();
          isDestroyed = true;
        }
      };
      if (!areValidElements(reference2, popper2)) {
        return instance;
      }
      instance.setOptions(options).then(function(state2) {
        if (!isDestroyed && options.onFirstUpdate) {
          options.onFirstUpdate(state2);
        }
      });
      function runModifierEffects() {
        state.orderedModifiers.forEach(function(_ref) {
          var name = _ref.name, _ref$options = _ref.options, options2 = _ref$options === void 0 ? {} : _ref$options, effect4 = _ref.effect;
          if (typeof effect4 === "function") {
            var cleanupFn = effect4({
              state,
              name,
              instance,
              options: options2
            });
            var noopFn = function noopFn2() {
            };
            effectCleanupFns.push(cleanupFn || noopFn);
          }
        });
      }
      function cleanupModifierEffects() {
        effectCleanupFns.forEach(function(fn2) {
          return fn2();
        });
        effectCleanupFns = [];
      }
      return instance;
    };
  }

  // node_modules/@popperjs/core/lib/popper.js
  var defaultModifiers = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default, offset_default, flip_default, preventOverflow_default, arrow_default, hide_default];
  var createPopper = /* @__PURE__ */ popperGenerator({
    defaultModifiers
  });

  // node_modules/cal-heatmap/dist/plugins/Tooltip.esm.js
  function _classCallCheck3(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _defineProperties3(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey3(descriptor.key), descriptor);
    }
  }
  function _createClass3(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties3(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties3(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
      writable: false
    });
    return Constructor;
  }
  function _toConsumableArray3(arr) {
    return _arrayWithoutHoles3(arr) || _iterableToArray3(arr) || _unsupportedIterableToArray3(arr) || _nonIterableSpread3();
  }
  function _arrayWithoutHoles3(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray3(arr);
  }
  function _iterableToArray3(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }
  function _unsupportedIterableToArray3(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray3(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray3(o, minLen);
  }
  function _arrayLikeToArray3(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
  function _nonIterableSpread3() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _toPrimitive3(input, hint) {
    if (typeof input !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== void 0) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
  function _toPropertyKey3(arg) {
    var key = _toPrimitive3(arg, "string");
    return typeof key === "symbol" ? key : String(key);
  }
  var commonjsGlobal3 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
  var check3 = function(it) {
    return it && it.Math === Math && it;
  };
  var global$j3 = (
    // eslint-disable-next-line es/no-global-this -- safe
    check3(typeof globalThis == "object" && globalThis) || check3(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
    check3(typeof self == "object" && self) || check3(typeof commonjsGlobal3 == "object" && commonjsGlobal3) || check3(typeof commonjsGlobal3 == "object" && commonjsGlobal3) || // eslint-disable-next-line no-new-func -- fallback
    /* @__PURE__ */ (function() {
      return this;
    })() || Function("return this")()
  );
  var objectGetOwnPropertyDescriptor3 = {};
  var fails$j3 = function(exec5) {
    try {
      return !!exec5();
    } catch (error) {
      return true;
    }
  };
  var fails$i3 = fails$j3;
  var descriptors3 = !fails$i3(function() {
    return Object.defineProperty({}, 1, { get: function() {
      return 7;
    } })[1] !== 7;
  });
  var fails$h3 = fails$j3;
  var functionBindNative3 = !fails$h3(function() {
    var test5 = (function() {
    }).bind();
    return typeof test5 != "function" || test5.hasOwnProperty("prototype");
  });
  var NATIVE_BIND$33 = functionBindNative3;
  var call$e3 = Function.prototype.call;
  var functionCall3 = NATIVE_BIND$33 ? call$e3.bind(call$e3) : function() {
    return call$e3.apply(call$e3, arguments);
  };
  var objectPropertyIsEnumerable3 = {};
  var $propertyIsEnumerable3 = {}.propertyIsEnumerable;
  var getOwnPropertyDescriptor$23 = Object.getOwnPropertyDescriptor;
  var NASHORN_BUG3 = getOwnPropertyDescriptor$23 && !$propertyIsEnumerable3.call({ 1: 2 }, 1);
  objectPropertyIsEnumerable3.f = NASHORN_BUG3 ? function propertyIsEnumerable5(V) {
    var descriptor = getOwnPropertyDescriptor$23(this, V);
    return !!descriptor && descriptor.enumerable;
  } : $propertyIsEnumerable3;
  var createPropertyDescriptor$43 = function(bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value
    };
  };
  var NATIVE_BIND$23 = functionBindNative3;
  var FunctionPrototype$33 = Function.prototype;
  var call$d3 = FunctionPrototype$33.call;
  var uncurryThisWithBind3 = NATIVE_BIND$23 && FunctionPrototype$33.bind.bind(call$d3, call$d3);
  var functionUncurryThis3 = NATIVE_BIND$23 ? uncurryThisWithBind3 : function(fn2) {
    return function() {
      return call$d3.apply(fn2, arguments);
    };
  };
  var uncurryThis$k3 = functionUncurryThis3;
  var toString$53 = uncurryThis$k3({}.toString);
  var stringSlice$23 = uncurryThis$k3("".slice);
  var classofRaw$23 = function(it) {
    return stringSlice$23(toString$53(it), 8, -1);
  };
  var uncurryThis$j3 = functionUncurryThis3;
  var fails$g3 = fails$j3;
  var classof$93 = classofRaw$23;
  var $Object$43 = Object;
  var split3 = uncurryThis$j3("".split);
  var indexedObject3 = fails$g3(function() {
    return !$Object$43("z").propertyIsEnumerable(0);
  }) ? function(it) {
    return classof$93(it) === "String" ? split3(it, "") : $Object$43(it);
  } : $Object$43;
  var isNullOrUndefined$63 = function(it) {
    return it === null || it === void 0;
  };
  var isNullOrUndefined$53 = isNullOrUndefined$63;
  var $TypeError$d3 = TypeError;
  var requireObjectCoercible$33 = function(it) {
    if (isNullOrUndefined$53(it)) throw new $TypeError$d3("Can't call method on " + it);
    return it;
  };
  var IndexedObject$23 = indexedObject3;
  var requireObjectCoercible$23 = requireObjectCoercible$33;
  var toIndexedObject$63 = function(it) {
    return IndexedObject$23(requireObjectCoercible$23(it));
  };
  var documentAll$23 = typeof document == "object" && document.all;
  var IS_HTMLDDA3 = typeof documentAll$23 == "undefined" && documentAll$23 !== void 0;
  var documentAll_13 = {
    all: documentAll$23,
    IS_HTMLDDA: IS_HTMLDDA3
  };
  var $documentAll$13 = documentAll_13;
  var documentAll$13 = $documentAll$13.all;
  var isCallable$m3 = $documentAll$13.IS_HTMLDDA ? function(argument) {
    return typeof argument == "function" || argument === documentAll$13;
  } : function(argument) {
    return typeof argument == "function";
  };
  var isCallable$l3 = isCallable$m3;
  var $documentAll3 = documentAll_13;
  var documentAll3 = $documentAll3.all;
  var isObject$f3 = $documentAll3.IS_HTMLDDA ? function(it) {
    return typeof it == "object" ? it !== null : isCallable$l3(it) || it === documentAll3;
  } : function(it) {
    return typeof it == "object" ? it !== null : isCallable$l3(it);
  };
  var global$i3 = global$j3;
  var isCallable$k3 = isCallable$m3;
  var aFunction3 = function(argument) {
    return isCallable$k3(argument) ? argument : void 0;
  };
  var getBuiltIn$73 = function(namespace, method) {
    return arguments.length < 2 ? aFunction3(global$i3[namespace]) : global$i3[namespace] && global$i3[namespace][method];
  };
  var uncurryThis$i3 = functionUncurryThis3;
  var objectIsPrototypeOf3 = uncurryThis$i3({}.isPrototypeOf);
  var engineUserAgent3 = typeof navigator != "undefined" && String(navigator.userAgent) || "";
  var global$h3 = global$j3;
  var userAgent$33 = engineUserAgent3;
  var process$33 = global$h3.process;
  var Deno$13 = global$h3.Deno;
  var versions3 = process$33 && process$33.versions || Deno$13 && Deno$13.version;
  var v83 = versions3 && versions3.v8;
  var match3;
  var version3;
  if (v83) {
    match3 = v83.split(".");
    version3 = match3[0] > 0 && match3[0] < 4 ? 1 : +(match3[0] + match3[1]);
  }
  if (!version3 && userAgent$33) {
    match3 = userAgent$33.match(/Edge\/(\d+)/);
    if (!match3 || match3[1] >= 74) {
      match3 = userAgent$33.match(/Chrome\/(\d+)/);
      if (match3) version3 = +match3[1];
    }
  }
  var engineV8Version3 = version3;
  var V8_VERSION$33 = engineV8Version3;
  var fails$f3 = fails$j3;
  var global$g3 = global$j3;
  var $String$53 = global$g3.String;
  var symbolConstructorDetection3 = !!Object.getOwnPropertySymbols && !fails$f3(function() {
    var symbol3 = Symbol("symbol detection");
    return !$String$53(symbol3) || !(Object(symbol3) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION$33 && V8_VERSION$33 < 41;
  });
  var NATIVE_SYMBOL$13 = symbolConstructorDetection3;
  var useSymbolAsUid3 = NATIVE_SYMBOL$13 && !Symbol.sham && typeof Symbol.iterator == "symbol";
  var getBuiltIn$63 = getBuiltIn$73;
  var isCallable$j3 = isCallable$m3;
  var isPrototypeOf$23 = objectIsPrototypeOf3;
  var USE_SYMBOL_AS_UID$13 = useSymbolAsUid3;
  var $Object$33 = Object;
  var isSymbol$23 = USE_SYMBOL_AS_UID$13 ? function(it) {
    return typeof it == "symbol";
  } : function(it) {
    var $Symbol = getBuiltIn$63("Symbol");
    return isCallable$j3($Symbol) && isPrototypeOf$23($Symbol.prototype, $Object$33(it));
  };
  var $String$43 = String;
  var tryToString$43 = function(argument) {
    try {
      return $String$43(argument);
    } catch (error) {
      return "Object";
    }
  };
  var isCallable$i3 = isCallable$m3;
  var tryToString$33 = tryToString$43;
  var $TypeError$c3 = TypeError;
  var aCallable$83 = function(argument) {
    if (isCallable$i3(argument)) return argument;
    throw new $TypeError$c3(tryToString$33(argument) + " is not a function");
  };
  var aCallable$73 = aCallable$83;
  var isNullOrUndefined$43 = isNullOrUndefined$63;
  var getMethod$33 = function(V, P) {
    var func = V[P];
    return isNullOrUndefined$43(func) ? void 0 : aCallable$73(func);
  };
  var call$c3 = functionCall3;
  var isCallable$h3 = isCallable$m3;
  var isObject$e3 = isObject$f3;
  var $TypeError$b3 = TypeError;
  var ordinaryToPrimitive$13 = function(input, pref) {
    var fn2, val;
    if (pref === "string" && isCallable$h3(fn2 = input.toString) && !isObject$e3(val = call$c3(fn2, input))) return val;
    if (isCallable$h3(fn2 = input.valueOf) && !isObject$e3(val = call$c3(fn2, input))) return val;
    if (pref !== "string" && isCallable$h3(fn2 = input.toString) && !isObject$e3(val = call$c3(fn2, input))) return val;
    throw new $TypeError$b3("Can't convert object to primitive value");
  };
  var shared$33 = { exports: {} };
  var global$f3 = global$j3;
  var defineProperty$73 = Object.defineProperty;
  var defineGlobalProperty$33 = function(key, value) {
    try {
      defineProperty$73(global$f3, key, { value, configurable: true, writable: true });
    } catch (error) {
      global$f3[key] = value;
    }
    return value;
  };
  var global$e3 = global$j3;
  var defineGlobalProperty$23 = defineGlobalProperty$33;
  var SHARED3 = "__core-js_shared__";
  var store$33 = global$e3[SHARED3] || defineGlobalProperty$23(SHARED3, {});
  var sharedStore3 = store$33;
  var store$23 = sharedStore3;
  (shared$33.exports = function(key, value) {
    return store$23[key] || (store$23[key] = value !== void 0 ? value : {});
  })("versions", []).push({
    version: "3.34.0",
    mode: "global",
    copyright: "\xA9 2014-2023 Denis Pushkarev (zloirock.ru)",
    license: "https://github.com/zloirock/core-js/blob/v3.34.0/LICENSE",
    source: "https://github.com/zloirock/core-js"
  });
  var sharedExports3 = shared$33.exports;
  var requireObjectCoercible$13 = requireObjectCoercible$33;
  var $Object$23 = Object;
  var toObject$53 = function(argument) {
    return $Object$23(requireObjectCoercible$13(argument));
  };
  var uncurryThis$h3 = functionUncurryThis3;
  var toObject$43 = toObject$53;
  var hasOwnProperty3 = uncurryThis$h3({}.hasOwnProperty);
  var hasOwnProperty_13 = Object.hasOwn || function hasOwn5(it, key) {
    return hasOwnProperty3(toObject$43(it), key);
  };
  var uncurryThis$g3 = functionUncurryThis3;
  var id$23 = 0;
  var postfix3 = Math.random();
  var toString$43 = uncurryThis$g3(1 .toString);
  var uid$33 = function(key) {
    return "Symbol(" + (key === void 0 ? "" : key) + ")_" + toString$43(++id$23 + postfix3, 36);
  };
  var global$d3 = global$j3;
  var shared$23 = sharedExports3;
  var hasOwn$b3 = hasOwnProperty_13;
  var uid$23 = uid$33;
  var NATIVE_SYMBOL3 = symbolConstructorDetection3;
  var USE_SYMBOL_AS_UID3 = useSymbolAsUid3;
  var Symbol$13 = global$d3.Symbol;
  var WellKnownSymbolsStore3 = shared$23("wks");
  var createWellKnownSymbol3 = USE_SYMBOL_AS_UID3 ? Symbol$13["for"] || Symbol$13 : Symbol$13 && Symbol$13.withoutSetter || uid$23;
  var wellKnownSymbol$h3 = function(name) {
    if (!hasOwn$b3(WellKnownSymbolsStore3, name)) {
      WellKnownSymbolsStore3[name] = NATIVE_SYMBOL3 && hasOwn$b3(Symbol$13, name) ? Symbol$13[name] : createWellKnownSymbol3("Symbol." + name);
    }
    return WellKnownSymbolsStore3[name];
  };
  var call$b3 = functionCall3;
  var isObject$d3 = isObject$f3;
  var isSymbol$13 = isSymbol$23;
  var getMethod$23 = getMethod$33;
  var ordinaryToPrimitive3 = ordinaryToPrimitive$13;
  var wellKnownSymbol$g3 = wellKnownSymbol$h3;
  var $TypeError$a3 = TypeError;
  var TO_PRIMITIVE3 = wellKnownSymbol$g3("toPrimitive");
  var toPrimitive$13 = function(input, pref) {
    if (!isObject$d3(input) || isSymbol$13(input)) return input;
    var exoticToPrim = getMethod$23(input, TO_PRIMITIVE3);
    var result;
    if (exoticToPrim) {
      if (pref === void 0) pref = "default";
      result = call$b3(exoticToPrim, input, pref);
      if (!isObject$d3(result) || isSymbol$13(result)) return result;
      throw new $TypeError$a3("Can't convert object to primitive value");
    }
    if (pref === void 0) pref = "number";
    return ordinaryToPrimitive3(input, pref);
  };
  var toPrimitive3 = toPrimitive$13;
  var isSymbol3 = isSymbol$23;
  var toPropertyKey$33 = function(argument) {
    var key = toPrimitive3(argument, "string");
    return isSymbol3(key) ? key : key + "";
  };
  var global$c3 = global$j3;
  var isObject$c3 = isObject$f3;
  var document$33 = global$c3.document;
  var EXISTS$13 = isObject$c3(document$33) && isObject$c3(document$33.createElement);
  var documentCreateElement$23 = function(it) {
    return EXISTS$13 ? document$33.createElement(it) : {};
  };
  var DESCRIPTORS$b3 = descriptors3;
  var fails$e3 = fails$j3;
  var createElement$13 = documentCreateElement$23;
  var ie8DomDefine3 = !DESCRIPTORS$b3 && !fails$e3(function() {
    return Object.defineProperty(createElement$13("div"), "a", {
      get: function() {
        return 7;
      }
    }).a !== 7;
  });
  var DESCRIPTORS$a3 = descriptors3;
  var call$a3 = functionCall3;
  var propertyIsEnumerableModule$13 = objectPropertyIsEnumerable3;
  var createPropertyDescriptor$33 = createPropertyDescriptor$43;
  var toIndexedObject$53 = toIndexedObject$63;
  var toPropertyKey$23 = toPropertyKey$33;
  var hasOwn$a3 = hasOwnProperty_13;
  var IE8_DOM_DEFINE$13 = ie8DomDefine3;
  var $getOwnPropertyDescriptor$13 = Object.getOwnPropertyDescriptor;
  objectGetOwnPropertyDescriptor3.f = DESCRIPTORS$a3 ? $getOwnPropertyDescriptor$13 : function getOwnPropertyDescriptor5(O, P) {
    O = toIndexedObject$53(O);
    P = toPropertyKey$23(P);
    if (IE8_DOM_DEFINE$13) try {
      return $getOwnPropertyDescriptor$13(O, P);
    } catch (error) {
    }
    if (hasOwn$a3(O, P)) return createPropertyDescriptor$33(!call$a3(propertyIsEnumerableModule$13.f, O, P), O[P]);
  };
  var objectDefineProperty3 = {};
  var DESCRIPTORS$93 = descriptors3;
  var fails$d3 = fails$j3;
  var v8PrototypeDefineBug3 = DESCRIPTORS$93 && fails$d3(function() {
    return Object.defineProperty(function() {
    }, "prototype", {
      value: 42,
      writable: false
    }).prototype !== 42;
  });
  var isObject$b3 = isObject$f3;
  var $String$33 = String;
  var $TypeError$93 = TypeError;
  var anObject$b3 = function(argument) {
    if (isObject$b3(argument)) return argument;
    throw new $TypeError$93($String$33(argument) + " is not an object");
  };
  var DESCRIPTORS$83 = descriptors3;
  var IE8_DOM_DEFINE3 = ie8DomDefine3;
  var V8_PROTOTYPE_DEFINE_BUG$13 = v8PrototypeDefineBug3;
  var anObject$a3 = anObject$b3;
  var toPropertyKey$13 = toPropertyKey$33;
  var $TypeError$83 = TypeError;
  var $defineProperty3 = Object.defineProperty;
  var $getOwnPropertyDescriptor3 = Object.getOwnPropertyDescriptor;
  var ENUMERABLE3 = "enumerable";
  var CONFIGURABLE$13 = "configurable";
  var WRITABLE3 = "writable";
  objectDefineProperty3.f = DESCRIPTORS$83 ? V8_PROTOTYPE_DEFINE_BUG$13 ? function defineProperty7(O, P, Attributes) {
    anObject$a3(O);
    P = toPropertyKey$13(P);
    anObject$a3(Attributes);
    if (typeof O === "function" && P === "prototype" && "value" in Attributes && WRITABLE3 in Attributes && !Attributes[WRITABLE3]) {
      var current = $getOwnPropertyDescriptor3(O, P);
      if (current && current[WRITABLE3]) {
        O[P] = Attributes.value;
        Attributes = {
          configurable: CONFIGURABLE$13 in Attributes ? Attributes[CONFIGURABLE$13] : current[CONFIGURABLE$13],
          enumerable: ENUMERABLE3 in Attributes ? Attributes[ENUMERABLE3] : current[ENUMERABLE3],
          writable: false
        };
      }
    }
    return $defineProperty3(O, P, Attributes);
  } : $defineProperty3 : function defineProperty8(O, P, Attributes) {
    anObject$a3(O);
    P = toPropertyKey$13(P);
    anObject$a3(Attributes);
    if (IE8_DOM_DEFINE3) try {
      return $defineProperty3(O, P, Attributes);
    } catch (error) {
    }
    if ("get" in Attributes || "set" in Attributes) throw new $TypeError$83("Accessors not supported");
    if ("value" in Attributes) O[P] = Attributes.value;
    return O;
  };
  var DESCRIPTORS$73 = descriptors3;
  var definePropertyModule$43 = objectDefineProperty3;
  var createPropertyDescriptor$23 = createPropertyDescriptor$43;
  var createNonEnumerableProperty$43 = DESCRIPTORS$73 ? function(object, key, value) {
    return definePropertyModule$43.f(object, key, createPropertyDescriptor$23(1, value));
  } : function(object, key, value) {
    object[key] = value;
    return object;
  };
  var makeBuiltIn$33 = { exports: {} };
  var DESCRIPTORS$63 = descriptors3;
  var hasOwn$93 = hasOwnProperty_13;
  var FunctionPrototype$23 = Function.prototype;
  var getDescriptor3 = DESCRIPTORS$63 && Object.getOwnPropertyDescriptor;
  var EXISTS3 = hasOwn$93(FunctionPrototype$23, "name");
  var PROPER3 = EXISTS3 && (function something3() {
  }).name === "something";
  var CONFIGURABLE3 = EXISTS3 && (!DESCRIPTORS$63 || DESCRIPTORS$63 && getDescriptor3(FunctionPrototype$23, "name").configurable);
  var functionName3 = {
    EXISTS: EXISTS3,
    PROPER: PROPER3,
    CONFIGURABLE: CONFIGURABLE3
  };
  var uncurryThis$f3 = functionUncurryThis3;
  var isCallable$g3 = isCallable$m3;
  var store$13 = sharedStore3;
  var functionToString$13 = uncurryThis$f3(Function.toString);
  if (!isCallable$g3(store$13.inspectSource)) {
    store$13.inspectSource = function(it) {
      return functionToString$13(it);
    };
  }
  var inspectSource$33 = store$13.inspectSource;
  var global$b3 = global$j3;
  var isCallable$f3 = isCallable$m3;
  var WeakMap$13 = global$b3.WeakMap;
  var weakMapBasicDetection3 = isCallable$f3(WeakMap$13) && /native code/.test(String(WeakMap$13));
  var shared$13 = sharedExports3;
  var uid$13 = uid$33;
  var keys7 = shared$13("keys");
  var sharedKey$33 = function(key) {
    return keys7[key] || (keys7[key] = uid$13(key));
  };
  var hiddenKeys$53 = {};
  var NATIVE_WEAK_MAP3 = weakMapBasicDetection3;
  var global$a3 = global$j3;
  var isObject$a3 = isObject$f3;
  var createNonEnumerableProperty$33 = createNonEnumerableProperty$43;
  var hasOwn$83 = hasOwnProperty_13;
  var shared3 = sharedStore3;
  var sharedKey$23 = sharedKey$33;
  var hiddenKeys$43 = hiddenKeys$53;
  var OBJECT_ALREADY_INITIALIZED3 = "Object already initialized";
  var TypeError$23 = global$a3.TypeError;
  var WeakMap3 = global$a3.WeakMap;
  var set$13;
  var get5;
  var has3;
  var enforce3 = function(it) {
    return has3(it) ? get5(it) : set$13(it, {});
  };
  var getterFor3 = function(TYPE) {
    return function(it) {
      var state;
      if (!isObject$a3(it) || (state = get5(it)).type !== TYPE) {
        throw new TypeError$23("Incompatible receiver, " + TYPE + " required");
      }
      return state;
    };
  };
  if (NATIVE_WEAK_MAP3 || shared3.state) {
    store = shared3.state || (shared3.state = new WeakMap3());
    store.get = store.get;
    store.has = store.has;
    store.set = store.set;
    set$13 = function(it, metadata) {
      if (store.has(it)) throw new TypeError$23(OBJECT_ALREADY_INITIALIZED3);
      metadata.facade = it;
      store.set(it, metadata);
      return metadata;
    };
    get5 = function(it) {
      return store.get(it) || {};
    };
    has3 = function(it) {
      return store.has(it);
    };
  } else {
    STATE = sharedKey$23("state");
    hiddenKeys$43[STATE] = true;
    set$13 = function(it, metadata) {
      if (hasOwn$83(it, STATE)) throw new TypeError$23(OBJECT_ALREADY_INITIALIZED3);
      metadata.facade = it;
      createNonEnumerableProperty$33(it, STATE, metadata);
      return metadata;
    };
    get5 = function(it) {
      return hasOwn$83(it, STATE) ? it[STATE] : {};
    };
    has3 = function(it) {
      return hasOwn$83(it, STATE);
    };
  }
  var store;
  var STATE;
  var internalState3 = {
    set: set$13,
    get: get5,
    has: has3,
    enforce: enforce3,
    getterFor: getterFor3
  };
  var uncurryThis$e3 = functionUncurryThis3;
  var fails$c3 = fails$j3;
  var isCallable$e3 = isCallable$m3;
  var hasOwn$73 = hasOwnProperty_13;
  var DESCRIPTORS$53 = descriptors3;
  var CONFIGURABLE_FUNCTION_NAME$13 = functionName3.CONFIGURABLE;
  var inspectSource$23 = inspectSource$33;
  var InternalStateModule$43 = internalState3;
  var enforceInternalState3 = InternalStateModule$43.enforce;
  var getInternalState$23 = InternalStateModule$43.get;
  var $String$23 = String;
  var defineProperty$63 = Object.defineProperty;
  var stringSlice$13 = uncurryThis$e3("".slice);
  var replace3 = uncurryThis$e3("".replace);
  var join5 = uncurryThis$e3([].join);
  var CONFIGURABLE_LENGTH3 = DESCRIPTORS$53 && !fails$c3(function() {
    return defineProperty$63(function() {
    }, "length", { value: 8 }).length !== 8;
  });
  var TEMPLATE3 = String(String).split("String");
  var makeBuiltIn$23 = makeBuiltIn$33.exports = function(value, name, options) {
    if (stringSlice$13($String$23(name), 0, 7) === "Symbol(") {
      name = "[" + replace3($String$23(name), /^Symbol\(([^)]*)\)/, "$1") + "]";
    }
    if (options && options.getter) name = "get " + name;
    if (options && options.setter) name = "set " + name;
    if (!hasOwn$73(value, "name") || CONFIGURABLE_FUNCTION_NAME$13 && value.name !== name) {
      if (DESCRIPTORS$53) defineProperty$63(value, "name", { value: name, configurable: true });
      else value.name = name;
    }
    if (CONFIGURABLE_LENGTH3 && options && hasOwn$73(options, "arity") && value.length !== options.arity) {
      defineProperty$63(value, "length", { value: options.arity });
    }
    try {
      if (options && hasOwn$73(options, "constructor") && options.constructor) {
        if (DESCRIPTORS$53) defineProperty$63(value, "prototype", { writable: false });
      } else if (value.prototype) value.prototype = void 0;
    } catch (error) {
    }
    var state = enforceInternalState3(value);
    if (!hasOwn$73(state, "source")) {
      state.source = join5(TEMPLATE3, typeof name == "string" ? name : "");
    }
    return value;
  };
  Function.prototype.toString = makeBuiltIn$23(function toString7() {
    return isCallable$e3(this) && getInternalState$23(this).source || inspectSource$23(this);
  }, "toString");
  var makeBuiltInExports3 = makeBuiltIn$33.exports;
  var isCallable$d3 = isCallable$m3;
  var definePropertyModule$33 = objectDefineProperty3;
  var makeBuiltIn$13 = makeBuiltInExports3;
  var defineGlobalProperty$13 = defineGlobalProperty$33;
  var defineBuiltIn$83 = function(O, key, value, options) {
    if (!options) options = {};
    var simple = options.enumerable;
    var name = options.name !== void 0 ? options.name : key;
    if (isCallable$d3(value)) makeBuiltIn$13(value, name, options);
    if (options.global) {
      if (simple) O[key] = value;
      else defineGlobalProperty$13(key, value);
    } else {
      try {
        if (!options.unsafe) delete O[key];
        else if (O[key]) simple = true;
      } catch (error) {
      }
      if (simple) O[key] = value;
      else definePropertyModule$33.f(O, key, {
        value,
        enumerable: false,
        configurable: !options.nonConfigurable,
        writable: !options.nonWritable
      });
    }
    return O;
  };
  var objectGetOwnPropertyNames3 = {};
  var ceil3 = Math.ceil;
  var floor3 = Math.floor;
  var mathTrunc3 = Math.trunc || function trunc5(x) {
    var n = +x;
    return (n > 0 ? floor3 : ceil3)(n);
  };
  var trunc6 = mathTrunc3;
  var toIntegerOrInfinity$33 = function(argument) {
    var number5 = +argument;
    return number5 !== number5 || number5 === 0 ? 0 : trunc6(number5);
  };
  var toIntegerOrInfinity$23 = toIntegerOrInfinity$33;
  var max$13 = Math.max;
  var min$13 = Math.min;
  var toAbsoluteIndex$23 = function(index, length3) {
    var integer = toIntegerOrInfinity$23(index);
    return integer < 0 ? max$13(integer + length3, 0) : min$13(integer, length3);
  };
  var toIntegerOrInfinity$13 = toIntegerOrInfinity$33;
  var min7 = Math.min;
  var toLength$13 = function(argument) {
    return argument > 0 ? min7(toIntegerOrInfinity$13(argument), 9007199254740991) : 0;
  };
  var toLength3 = toLength$13;
  var lengthOfArrayLike$53 = function(obj) {
    return toLength3(obj.length);
  };
  var toIndexedObject$43 = toIndexedObject$63;
  var toAbsoluteIndex$13 = toAbsoluteIndex$23;
  var lengthOfArrayLike$43 = lengthOfArrayLike$53;
  var createMethod$23 = function(IS_INCLUDES) {
    return function($this, el, fromIndex) {
      var O = toIndexedObject$43($this);
      var length3 = lengthOfArrayLike$43(O);
      var index = toAbsoluteIndex$13(fromIndex, length3);
      var value;
      if (IS_INCLUDES && el !== el) while (length3 > index) {
        value = O[index++];
        if (value !== value) return true;
      }
      else for (; length3 > index; index++) {
        if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
      }
      return !IS_INCLUDES && -1;
    };
  };
  var arrayIncludes3 = {
    // `Array.prototype.includes` method
    // https://tc39.es/ecma262/#sec-array.prototype.includes
    includes: createMethod$23(true),
    // `Array.prototype.indexOf` method
    // https://tc39.es/ecma262/#sec-array.prototype.indexof
    indexOf: createMethod$23(false)
  };
  var uncurryThis$d3 = functionUncurryThis3;
  var hasOwn$63 = hasOwnProperty_13;
  var toIndexedObject$33 = toIndexedObject$63;
  var indexOf3 = arrayIncludes3.indexOf;
  var hiddenKeys$33 = hiddenKeys$53;
  var push$13 = uncurryThis$d3([].push);
  var objectKeysInternal3 = function(object, names) {
    var O = toIndexedObject$33(object);
    var i = 0;
    var result = [];
    var key;
    for (key in O) !hasOwn$63(hiddenKeys$33, key) && hasOwn$63(O, key) && push$13(result, key);
    while (names.length > i) if (hasOwn$63(O, key = names[i++])) {
      ~indexOf3(result, key) || push$13(result, key);
    }
    return result;
  };
  var enumBugKeys$33 = [
    "constructor",
    "hasOwnProperty",
    "isPrototypeOf",
    "propertyIsEnumerable",
    "toLocaleString",
    "toString",
    "valueOf"
  ];
  var internalObjectKeys$13 = objectKeysInternal3;
  var enumBugKeys$23 = enumBugKeys$33;
  var hiddenKeys$23 = enumBugKeys$23.concat("length", "prototype");
  objectGetOwnPropertyNames3.f = Object.getOwnPropertyNames || function getOwnPropertyNames5(O) {
    return internalObjectKeys$13(O, hiddenKeys$23);
  };
  var objectGetOwnPropertySymbols3 = {};
  objectGetOwnPropertySymbols3.f = Object.getOwnPropertySymbols;
  var getBuiltIn$53 = getBuiltIn$73;
  var uncurryThis$c3 = functionUncurryThis3;
  var getOwnPropertyNamesModule$13 = objectGetOwnPropertyNames3;
  var getOwnPropertySymbolsModule$13 = objectGetOwnPropertySymbols3;
  var anObject$93 = anObject$b3;
  var concat$13 = uncurryThis$c3([].concat);
  var ownKeys$13 = getBuiltIn$53("Reflect", "ownKeys") || function ownKeys5(it) {
    var keys12 = getOwnPropertyNamesModule$13.f(anObject$93(it));
    var getOwnPropertySymbols = getOwnPropertySymbolsModule$13.f;
    return getOwnPropertySymbols ? concat$13(keys12, getOwnPropertySymbols(it)) : keys12;
  };
  var hasOwn$53 = hasOwnProperty_13;
  var ownKeys6 = ownKeys$13;
  var getOwnPropertyDescriptorModule3 = objectGetOwnPropertyDescriptor3;
  var definePropertyModule$23 = objectDefineProperty3;
  var copyConstructorProperties$13 = function(target, source, exceptions) {
    var keys12 = ownKeys6(source);
    var defineProperty13 = definePropertyModule$23.f;
    var getOwnPropertyDescriptor9 = getOwnPropertyDescriptorModule3.f;
    for (var i = 0; i < keys12.length; i++) {
      var key = keys12[i];
      if (!hasOwn$53(target, key) && !(exceptions && hasOwn$53(exceptions, key))) {
        defineProperty13(target, key, getOwnPropertyDescriptor9(source, key));
      }
    }
  };
  var fails$b3 = fails$j3;
  var isCallable$c3 = isCallable$m3;
  var replacement3 = /#|\.prototype\./;
  var isForced$33 = function(feature, detection) {
    var value = data4[normalize4(feature)];
    return value === POLYFILL3 ? true : value === NATIVE3 ? false : isCallable$c3(detection) ? fails$b3(detection) : !!detection;
  };
  var normalize4 = isForced$33.normalize = function(string) {
    return String(string).replace(replacement3, ".").toLowerCase();
  };
  var data4 = isForced$33.data = {};
  var NATIVE3 = isForced$33.NATIVE = "N";
  var POLYFILL3 = isForced$33.POLYFILL = "P";
  var isForced_13 = isForced$33;
  var global$93 = global$j3;
  var getOwnPropertyDescriptor$13 = objectGetOwnPropertyDescriptor3.f;
  var createNonEnumerableProperty$23 = createNonEnumerableProperty$43;
  var defineBuiltIn$73 = defineBuiltIn$83;
  var defineGlobalProperty3 = defineGlobalProperty$33;
  var copyConstructorProperties3 = copyConstructorProperties$13;
  var isForced$23 = isForced_13;
  var _export3 = function(options, source) {
    var TARGET = options.target;
    var GLOBAL = options.global;
    var STATIC = options.stat;
    var FORCED5, target, key, targetProperty, sourceProperty, descriptor;
    if (GLOBAL) {
      target = global$93;
    } else if (STATIC) {
      target = global$93[TARGET] || defineGlobalProperty3(TARGET, {});
    } else {
      target = (global$93[TARGET] || {}).prototype;
    }
    if (target) for (key in source) {
      sourceProperty = source[key];
      if (options.dontCallGetSet) {
        descriptor = getOwnPropertyDescriptor$13(target, key);
        targetProperty = descriptor && descriptor.value;
      } else targetProperty = target[key];
      FORCED5 = isForced$23(GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key, options.forced);
      if (!FORCED5 && targetProperty !== void 0) {
        if (typeof sourceProperty == typeof targetProperty) continue;
        copyConstructorProperties3(sourceProperty, targetProperty);
      }
      if (options.sham || targetProperty && targetProperty.sham) {
        createNonEnumerableProperty$23(sourceProperty, "sham", true);
      }
      defineBuiltIn$73(target, key, sourceProperty, options);
    }
  };
  var classof$83 = classofRaw$23;
  var isArray$23 = Array.isArray || function isArray5(argument) {
    return classof$83(argument) === "Array";
  };
  var $TypeError$73 = TypeError;
  var MAX_SAFE_INTEGER3 = 9007199254740991;
  var doesNotExceedSafeInteger$13 = function(it) {
    if (it > MAX_SAFE_INTEGER3) throw $TypeError$73("Maximum allowed index exceeded");
    return it;
  };
  var toPropertyKey3 = toPropertyKey$33;
  var definePropertyModule$13 = objectDefineProperty3;
  var createPropertyDescriptor$13 = createPropertyDescriptor$43;
  var createProperty$23 = function(object, key, value) {
    var propertyKey = toPropertyKey3(key);
    if (propertyKey in object) definePropertyModule$13.f(object, propertyKey, createPropertyDescriptor$13(0, value));
    else object[propertyKey] = value;
  };
  var wellKnownSymbol$f3 = wellKnownSymbol$h3;
  var TO_STRING_TAG$23 = wellKnownSymbol$f3("toStringTag");
  var test3 = {};
  test3[TO_STRING_TAG$23] = "z";
  var toStringTagSupport3 = String(test3) === "[object z]";
  var TO_STRING_TAG_SUPPORT$23 = toStringTagSupport3;
  var isCallable$b3 = isCallable$m3;
  var classofRaw$13 = classofRaw$23;
  var wellKnownSymbol$e3 = wellKnownSymbol$h3;
  var TO_STRING_TAG$13 = wellKnownSymbol$e3("toStringTag");
  var $Object$13 = Object;
  var CORRECT_ARGUMENTS3 = classofRaw$13(/* @__PURE__ */ (function() {
    return arguments;
  })()) === "Arguments";
  var tryGet3 = function(it, key) {
    try {
      return it[key];
    } catch (error) {
    }
  };
  var classof$73 = TO_STRING_TAG_SUPPORT$23 ? classofRaw$13 : function(it) {
    var O, tag, result;
    return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet3(O = $Object$13(it), TO_STRING_TAG$13)) == "string" ? tag : CORRECT_ARGUMENTS3 ? classofRaw$13(O) : (result = classofRaw$13(O)) === "Object" && isCallable$b3(O.callee) ? "Arguments" : result;
  };
  var uncurryThis$b3 = functionUncurryThis3;
  var fails$a3 = fails$j3;
  var isCallable$a3 = isCallable$m3;
  var classof$63 = classof$73;
  var getBuiltIn$43 = getBuiltIn$73;
  var inspectSource$13 = inspectSource$33;
  var noop4 = function() {
  };
  var empty4 = [];
  var construct3 = getBuiltIn$43("Reflect", "construct");
  var constructorRegExp3 = /^\s*(?:class|function)\b/;
  var exec3 = uncurryThis$b3(constructorRegExp3.exec);
  var INCORRECT_TO_STRING3 = !constructorRegExp3.test(noop4);
  var isConstructorModern3 = function isConstructor7(argument) {
    if (!isCallable$a3(argument)) return false;
    try {
      construct3(noop4, empty4, argument);
      return true;
    } catch (error) {
      return false;
    }
  };
  var isConstructorLegacy3 = function isConstructor8(argument) {
    if (!isCallable$a3(argument)) return false;
    switch (classof$63(argument)) {
      case "AsyncFunction":
      case "GeneratorFunction":
      case "AsyncGeneratorFunction":
        return false;
    }
    try {
      return INCORRECT_TO_STRING3 || !!exec3(constructorRegExp3, inspectSource$13(argument));
    } catch (error) {
      return true;
    }
  };
  isConstructorLegacy3.sham = true;
  var isConstructor$23 = !construct3 || fails$a3(function() {
    var called;
    return isConstructorModern3(isConstructorModern3.call) || !isConstructorModern3(Object) || !isConstructorModern3(function() {
      called = true;
    }) || called;
  }) ? isConstructorLegacy3 : isConstructorModern3;
  var isArray$13 = isArray$23;
  var isConstructor$13 = isConstructor$23;
  var isObject$93 = isObject$f3;
  var wellKnownSymbol$d3 = wellKnownSymbol$h3;
  var SPECIES$43 = wellKnownSymbol$d3("species");
  var $Array$13 = Array;
  var arraySpeciesConstructor$13 = function(originalArray) {
    var C2;
    if (isArray$13(originalArray)) {
      C2 = originalArray.constructor;
      if (isConstructor$13(C2) && (C2 === $Array$13 || isArray$13(C2.prototype))) C2 = void 0;
      else if (isObject$93(C2)) {
        C2 = C2[SPECIES$43];
        if (C2 === null) C2 = void 0;
      }
    }
    return C2 === void 0 ? $Array$13 : C2;
  };
  var arraySpeciesConstructor3 = arraySpeciesConstructor$13;
  var arraySpeciesCreate$23 = function(originalArray, length3) {
    return new (arraySpeciesConstructor3(originalArray))(length3 === 0 ? 0 : length3);
  };
  var fails$93 = fails$j3;
  var wellKnownSymbol$c3 = wellKnownSymbol$h3;
  var V8_VERSION$23 = engineV8Version3;
  var SPECIES$33 = wellKnownSymbol$c3("species");
  var arrayMethodHasSpeciesSupport$13 = function(METHOD_NAME) {
    return V8_VERSION$23 >= 51 || !fails$93(function() {
      var array2 = [];
      var constructor = array2.constructor = {};
      constructor[SPECIES$33] = function() {
        return { foo: 1 };
      };
      return array2[METHOD_NAME](Boolean).foo !== 1;
    });
  };
  var $$a3 = _export3;
  var fails$83 = fails$j3;
  var isArray6 = isArray$23;
  var isObject$83 = isObject$f3;
  var toObject$33 = toObject$53;
  var lengthOfArrayLike$33 = lengthOfArrayLike$53;
  var doesNotExceedSafeInteger3 = doesNotExceedSafeInteger$13;
  var createProperty$13 = createProperty$23;
  var arraySpeciesCreate$13 = arraySpeciesCreate$23;
  var arrayMethodHasSpeciesSupport3 = arrayMethodHasSpeciesSupport$13;
  var wellKnownSymbol$b3 = wellKnownSymbol$h3;
  var V8_VERSION$13 = engineV8Version3;
  var IS_CONCAT_SPREADABLE3 = wellKnownSymbol$b3("isConcatSpreadable");
  var IS_CONCAT_SPREADABLE_SUPPORT3 = V8_VERSION$13 >= 51 || !fails$83(function() {
    var array2 = [];
    array2[IS_CONCAT_SPREADABLE3] = false;
    return array2.concat()[0] !== array2;
  });
  var isConcatSpreadable3 = function(O) {
    if (!isObject$83(O)) return false;
    var spreadable = O[IS_CONCAT_SPREADABLE3];
    return spreadable !== void 0 ? !!spreadable : isArray6(O);
  };
  var FORCED3 = !IS_CONCAT_SPREADABLE_SUPPORT3 || !arrayMethodHasSpeciesSupport3("concat");
  $$a3({ target: "Array", proto: true, arity: 1, forced: FORCED3 }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    concat: function concat5(arg) {
      var O = toObject$33(this);
      var A2 = arraySpeciesCreate$13(O, 0);
      var n = 0;
      var i, k2, length3, len, E2;
      for (i = -1, length3 = arguments.length; i < length3; i++) {
        E2 = i === -1 ? O : arguments[i];
        if (isConcatSpreadable3(E2)) {
          len = lengthOfArrayLike$33(E2);
          doesNotExceedSafeInteger3(n + len);
          for (k2 = 0; k2 < len; k2++, n++) if (k2 in E2) createProperty$13(A2, n, E2[k2]);
        } else {
          doesNotExceedSafeInteger3(n + 1);
          createProperty$13(A2, n++, E2);
        }
      }
      A2.length = n;
      return A2;
    }
  });
  var makeBuiltIn3 = makeBuiltInExports3;
  var defineProperty$53 = objectDefineProperty3;
  var defineBuiltInAccessor$23 = function(target, name, descriptor) {
    if (descriptor.get) makeBuiltIn3(descriptor.get, name, { getter: true });
    if (descriptor.set) makeBuiltIn3(descriptor.set, name, { setter: true });
    return defineProperty$53.f(target, name, descriptor);
  };
  var DESCRIPTORS$43 = descriptors3;
  var FUNCTION_NAME_EXISTS3 = functionName3.EXISTS;
  var uncurryThis$a3 = functionUncurryThis3;
  var defineBuiltInAccessor$13 = defineBuiltInAccessor$23;
  var FunctionPrototype$13 = Function.prototype;
  var functionToString3 = uncurryThis$a3(FunctionPrototype$13.toString);
  var nameRE3 = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;
  var regExpExec3 = uncurryThis$a3(nameRE3.exec);
  var NAME3 = "name";
  if (DESCRIPTORS$43 && !FUNCTION_NAME_EXISTS3) {
    defineBuiltInAccessor$13(FunctionPrototype$13, NAME3, {
      configurable: true,
      get: function() {
        try {
          return regExpExec3(nameRE3, functionToString3(this))[1];
        } catch (error) {
          return "";
        }
      }
    });
  }
  var internalObjectKeys3 = objectKeysInternal3;
  var enumBugKeys$13 = enumBugKeys$33;
  var objectKeys$23 = Object.keys || function keys8(O) {
    return internalObjectKeys3(O, enumBugKeys$13);
  };
  var DESCRIPTORS$33 = descriptors3;
  var uncurryThis$93 = functionUncurryThis3;
  var call$93 = functionCall3;
  var fails$73 = fails$j3;
  var objectKeys$13 = objectKeys$23;
  var getOwnPropertySymbolsModule3 = objectGetOwnPropertySymbols3;
  var propertyIsEnumerableModule3 = objectPropertyIsEnumerable3;
  var toObject$23 = toObject$53;
  var IndexedObject$13 = indexedObject3;
  var $assign3 = Object.assign;
  var defineProperty$43 = Object.defineProperty;
  var concat6 = uncurryThis$93([].concat);
  var objectAssign3 = !$assign3 || fails$73(function() {
    if (DESCRIPTORS$33 && $assign3({ b: 1 }, $assign3(defineProperty$43({}, "a", {
      enumerable: true,
      get: function() {
        defineProperty$43(this, "b", {
          value: 3,
          enumerable: false
        });
      }
    }), { b: 2 })).b !== 1) return true;
    var A2 = {};
    var B2 = {};
    var symbol3 = Symbol("assign detection");
    var alphabet = "abcdefghijklmnopqrst";
    A2[symbol3] = 7;
    alphabet.split("").forEach(function(chr) {
      B2[chr] = chr;
    });
    return $assign3({}, A2)[symbol3] !== 7 || objectKeys$13($assign3({}, B2)).join("") !== alphabet;
  }) ? function assign5(target, source) {
    var T = toObject$23(target);
    var argumentsLength = arguments.length;
    var index = 1;
    var getOwnPropertySymbols = getOwnPropertySymbolsModule3.f;
    var propertyIsEnumerable7 = propertyIsEnumerableModule3.f;
    while (argumentsLength > index) {
      var S = IndexedObject$13(arguments[index++]);
      var keys12 = getOwnPropertySymbols ? concat6(objectKeys$13(S), getOwnPropertySymbols(S)) : objectKeys$13(S);
      var length3 = keys12.length;
      var j = 0;
      var key;
      while (length3 > j) {
        key = keys12[j++];
        if (!DESCRIPTORS$33 || call$93(propertyIsEnumerable7, S, key)) T[key] = S[key];
      }
    }
    return T;
  } : $assign3;
  var $$93 = _export3;
  var assign6 = objectAssign3;
  $$93({ target: "Object", stat: true, arity: 2, forced: Object.assign !== assign6 }, {
    assign: assign6
  });
  var TO_STRING_TAG_SUPPORT$13 = toStringTagSupport3;
  var classof$53 = classof$73;
  var objectToString3 = TO_STRING_TAG_SUPPORT$13 ? {}.toString : function toString8() {
    return "[object " + classof$53(this) + "]";
  };
  var TO_STRING_TAG_SUPPORT3 = toStringTagSupport3;
  var defineBuiltIn$63 = defineBuiltIn$83;
  var toString$33 = objectToString3;
  if (!TO_STRING_TAG_SUPPORT3) {
    defineBuiltIn$63(Object.prototype, "toString", toString$33, { unsafe: true });
  }
  var global$83 = global$j3;
  var classof$43 = classofRaw$23;
  var engineIsNode3 = classof$43(global$83.process) === "process";
  var uncurryThis$83 = functionUncurryThis3;
  var aCallable$63 = aCallable$83;
  var functionUncurryThisAccessor3 = function(object, key, method) {
    try {
      return uncurryThis$83(aCallable$63(Object.getOwnPropertyDescriptor(object, key)[method]));
    } catch (error) {
    }
  };
  var isCallable$93 = isCallable$m3;
  var $String$13 = String;
  var $TypeError$63 = TypeError;
  var aPossiblePrototype$13 = function(argument) {
    if (typeof argument == "object" || isCallable$93(argument)) return argument;
    throw new $TypeError$63("Can't set " + $String$13(argument) + " as a prototype");
  };
  var uncurryThisAccessor3 = functionUncurryThisAccessor3;
  var anObject$83 = anObject$b3;
  var aPossiblePrototype3 = aPossiblePrototype$13;
  var objectSetPrototypeOf3 = Object.setPrototypeOf || ("__proto__" in {} ? (function() {
    var CORRECT_SETTER = false;
    var test5 = {};
    var setter;
    try {
      setter = uncurryThisAccessor3(Object.prototype, "__proto__", "set");
      setter(test5, []);
      CORRECT_SETTER = test5 instanceof Array;
    } catch (error) {
    }
    return function setPrototypeOf5(O, proto) {
      anObject$83(O);
      aPossiblePrototype3(proto);
      if (CORRECT_SETTER) setter(O, proto);
      else O.__proto__ = proto;
      return O;
    };
  })() : void 0);
  var defineProperty$33 = objectDefineProperty3.f;
  var hasOwn$43 = hasOwnProperty_13;
  var wellKnownSymbol$a3 = wellKnownSymbol$h3;
  var TO_STRING_TAG3 = wellKnownSymbol$a3("toStringTag");
  var setToStringTag$53 = function(target, TAG, STATIC) {
    if (target && !STATIC) target = target.prototype;
    if (target && !hasOwn$43(target, TO_STRING_TAG3)) {
      defineProperty$33(target, TO_STRING_TAG3, { configurable: true, value: TAG });
    }
  };
  var getBuiltIn$33 = getBuiltIn$73;
  var defineBuiltInAccessor3 = defineBuiltInAccessor$23;
  var wellKnownSymbol$93 = wellKnownSymbol$h3;
  var DESCRIPTORS$23 = descriptors3;
  var SPECIES$23 = wellKnownSymbol$93("species");
  var setSpecies$13 = function(CONSTRUCTOR_NAME) {
    var Constructor = getBuiltIn$33(CONSTRUCTOR_NAME);
    if (DESCRIPTORS$23 && Constructor && !Constructor[SPECIES$23]) {
      defineBuiltInAccessor3(Constructor, SPECIES$23, {
        configurable: true,
        get: function() {
          return this;
        }
      });
    }
  };
  var isPrototypeOf$13 = objectIsPrototypeOf3;
  var $TypeError$53 = TypeError;
  var anInstance$33 = function(it, Prototype) {
    if (isPrototypeOf$13(Prototype, it)) return it;
    throw new $TypeError$53("Incorrect invocation");
  };
  var isConstructor9 = isConstructor$23;
  var tryToString$23 = tryToString$43;
  var $TypeError$43 = TypeError;
  var aConstructor$13 = function(argument) {
    if (isConstructor9(argument)) return argument;
    throw new $TypeError$43(tryToString$23(argument) + " is not a constructor");
  };
  var anObject$73 = anObject$b3;
  var aConstructor3 = aConstructor$13;
  var isNullOrUndefined$33 = isNullOrUndefined$63;
  var wellKnownSymbol$83 = wellKnownSymbol$h3;
  var SPECIES$13 = wellKnownSymbol$83("species");
  var speciesConstructor$13 = function(O, defaultConstructor) {
    var C2 = anObject$73(O).constructor;
    var S;
    return C2 === void 0 || isNullOrUndefined$33(S = anObject$73(C2)[SPECIES$13]) ? defaultConstructor : aConstructor3(S);
  };
  var NATIVE_BIND$13 = functionBindNative3;
  var FunctionPrototype3 = Function.prototype;
  var apply$13 = FunctionPrototype3.apply;
  var call$83 = FunctionPrototype3.call;
  var functionApply3 = typeof Reflect == "object" && Reflect.apply || (NATIVE_BIND$13 ? call$83.bind(apply$13) : function() {
    return call$83.apply(apply$13, arguments);
  });
  var classofRaw3 = classofRaw$23;
  var uncurryThis$73 = functionUncurryThis3;
  var functionUncurryThisClause3 = function(fn2) {
    if (classofRaw3(fn2) === "Function") return uncurryThis$73(fn2);
  };
  var uncurryThis$63 = functionUncurryThisClause3;
  var aCallable$53 = aCallable$83;
  var NATIVE_BIND3 = functionBindNative3;
  var bind$53 = uncurryThis$63(uncurryThis$63.bind);
  var functionBindContext3 = function(fn2, that) {
    aCallable$53(fn2);
    return that === void 0 ? fn2 : NATIVE_BIND3 ? bind$53(fn2, that) : function() {
      return fn2.apply(that, arguments);
    };
  };
  var getBuiltIn$23 = getBuiltIn$73;
  var html$23 = getBuiltIn$23("document", "documentElement");
  var uncurryThis$53 = functionUncurryThis3;
  var arraySlice$23 = uncurryThis$53([].slice);
  var $TypeError$33 = TypeError;
  var validateArgumentsLength$13 = function(passed, required) {
    if (passed < required) throw new $TypeError$33("Not enough arguments");
    return passed;
  };
  var userAgent$23 = engineUserAgent3;
  var engineIsIos3 = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$23);
  var global$73 = global$j3;
  var apply3 = functionApply3;
  var bind$43 = functionBindContext3;
  var isCallable$83 = isCallable$m3;
  var hasOwn$33 = hasOwnProperty_13;
  var fails$63 = fails$j3;
  var html$13 = html$23;
  var arraySlice$13 = arraySlice$23;
  var createElement3 = documentCreateElement$23;
  var validateArgumentsLength3 = validateArgumentsLength$13;
  var IS_IOS$13 = engineIsIos3;
  var IS_NODE$33 = engineIsNode3;
  var set5 = global$73.setImmediate;
  var clear3 = global$73.clearImmediate;
  var process$23 = global$73.process;
  var Dispatch4 = global$73.Dispatch;
  var Function$13 = global$73.Function;
  var MessageChannel3 = global$73.MessageChannel;
  var String$13 = global$73.String;
  var counter3 = 0;
  var queue$23 = {};
  var ONREADYSTATECHANGE3 = "onreadystatechange";
  var $location3;
  var defer3;
  var channel3;
  var port3;
  fails$63(function() {
    $location3 = global$73.location;
  });
  var run3 = function(id6) {
    if (hasOwn$33(queue$23, id6)) {
      var fn2 = queue$23[id6];
      delete queue$23[id6];
      fn2();
    }
  };
  var runner3 = function(id6) {
    return function() {
      run3(id6);
    };
  };
  var eventListener3 = function(event) {
    run3(event.data);
  };
  var globalPostMessageDefer3 = function(id6) {
    global$73.postMessage(String$13(id6), $location3.protocol + "//" + $location3.host);
  };
  if (!set5 || !clear3) {
    set5 = function setImmediate(handler) {
      validateArgumentsLength3(arguments.length, 1);
      var fn2 = isCallable$83(handler) ? handler : Function$13(handler);
      var args = arraySlice$13(arguments, 1);
      queue$23[++counter3] = function() {
        apply3(fn2, void 0, args);
      };
      defer3(counter3);
      return counter3;
    };
    clear3 = function clearImmediate(id6) {
      delete queue$23[id6];
    };
    if (IS_NODE$33) {
      defer3 = function(id6) {
        process$23.nextTick(runner3(id6));
      };
    } else if (Dispatch4 && Dispatch4.now) {
      defer3 = function(id6) {
        Dispatch4.now(runner3(id6));
      };
    } else if (MessageChannel3 && !IS_IOS$13) {
      channel3 = new MessageChannel3();
      port3 = channel3.port2;
      channel3.port1.onmessage = eventListener3;
      defer3 = bind$43(port3.postMessage, port3);
    } else if (global$73.addEventListener && isCallable$83(global$73.postMessage) && !global$73.importScripts && $location3 && $location3.protocol !== "file:" && !fails$63(globalPostMessageDefer3)) {
      defer3 = globalPostMessageDefer3;
      global$73.addEventListener("message", eventListener3, false);
    } else if (ONREADYSTATECHANGE3 in createElement3("script")) {
      defer3 = function(id6) {
        html$13.appendChild(createElement3("script"))[ONREADYSTATECHANGE3] = function() {
          html$13.removeChild(this);
          run3(id6);
        };
      };
    } else {
      defer3 = function(id6) {
        setTimeout(runner3(id6), 0);
      };
    }
  }
  var task$13 = {
    set: set5,
    clear: clear3
  };
  var Queue$23 = function() {
    this.head = null;
    this.tail = null;
  };
  Queue$23.prototype = {
    add: function(item) {
      var entry = { item, next: null };
      var tail = this.tail;
      if (tail) tail.next = entry;
      else this.head = entry;
      this.tail = entry;
    },
    get: function() {
      var entry = this.head;
      if (entry) {
        var next5 = this.head = entry.next;
        if (next5 === null) this.tail = null;
        return entry.item;
      }
    }
  };
  var queue$13 = Queue$23;
  var userAgent$13 = engineUserAgent3;
  var engineIsIosPebble3 = /ipad|iphone|ipod/i.test(userAgent$13) && typeof Pebble != "undefined";
  var userAgent3 = engineUserAgent3;
  var engineIsWebosWebkit3 = /web0s(?!.*chrome)/i.test(userAgent3);
  var global$63 = global$j3;
  var bind$33 = functionBindContext3;
  var getOwnPropertyDescriptor6 = objectGetOwnPropertyDescriptor3.f;
  var macrotask3 = task$13.set;
  var Queue$13 = queue$13;
  var IS_IOS3 = engineIsIos3;
  var IS_IOS_PEBBLE3 = engineIsIosPebble3;
  var IS_WEBOS_WEBKIT3 = engineIsWebosWebkit3;
  var IS_NODE$23 = engineIsNode3;
  var MutationObserver3 = global$63.MutationObserver || global$63.WebKitMutationObserver;
  var document$23 = global$63.document;
  var process$13 = global$63.process;
  var Promise$13 = global$63.Promise;
  var queueMicrotaskDescriptor3 = getOwnPropertyDescriptor6(global$63, "queueMicrotask");
  var microtask$13 = queueMicrotaskDescriptor3 && queueMicrotaskDescriptor3.value;
  var notify$13;
  var toggle3;
  var node3;
  var promise3;
  var then3;
  if (!microtask$13) {
    queue = new Queue$13();
    flush = function() {
      var parent, fn2;
      if (IS_NODE$23 && (parent = process$13.domain)) parent.exit();
      while (fn2 = queue.get()) try {
        fn2();
      } catch (error) {
        if (queue.head) notify$13();
        throw error;
      }
      if (parent) parent.enter();
    };
    if (!IS_IOS3 && !IS_NODE$23 && !IS_WEBOS_WEBKIT3 && MutationObserver3 && document$23) {
      toggle3 = true;
      node3 = document$23.createTextNode("");
      new MutationObserver3(flush).observe(node3, { characterData: true });
      notify$13 = function() {
        node3.data = toggle3 = !toggle3;
      };
    } else if (!IS_IOS_PEBBLE3 && Promise$13 && Promise$13.resolve) {
      promise3 = Promise$13.resolve(void 0);
      promise3.constructor = Promise$13;
      then3 = bind$33(promise3.then, promise3);
      notify$13 = function() {
        then3(flush);
      };
    } else if (IS_NODE$23) {
      notify$13 = function() {
        process$13.nextTick(flush);
      };
    } else {
      macrotask3 = bind$33(macrotask3, global$63);
      notify$13 = function() {
        macrotask3(flush);
      };
    }
    microtask$13 = function(fn2) {
      if (!queue.head) notify$13();
      queue.add(fn2);
    };
  }
  var queue;
  var flush;
  var microtask_13 = microtask$13;
  var hostReportErrors$13 = function(a2, b) {
    try {
      arguments.length === 1 ? console.error(a2) : console.error(a2, b);
    } catch (error) {
    }
  };
  var perform$33 = function(exec5) {
    try {
      return { error: false, value: exec5() };
    } catch (error) {
      return { error: true, value: error };
    }
  };
  var global$53 = global$j3;
  var promiseNativeConstructor3 = global$53.Promise;
  var engineIsDeno3 = typeof Deno == "object" && Deno && typeof Deno.version == "object";
  var IS_DENO$13 = engineIsDeno3;
  var IS_NODE$13 = engineIsNode3;
  var engineIsBrowser3 = !IS_DENO$13 && !IS_NODE$13 && typeof window == "object" && typeof document == "object";
  var global$43 = global$j3;
  var NativePromiseConstructor$33 = promiseNativeConstructor3;
  var isCallable$73 = isCallable$m3;
  var isForced$13 = isForced_13;
  var inspectSource3 = inspectSource$33;
  var wellKnownSymbol$73 = wellKnownSymbol$h3;
  var IS_BROWSER3 = engineIsBrowser3;
  var IS_DENO3 = engineIsDeno3;
  var V8_VERSION3 = engineV8Version3;
  NativePromiseConstructor$33 && NativePromiseConstructor$33.prototype;
  var SPECIES3 = wellKnownSymbol$73("species");
  var SUBCLASSING3 = false;
  var NATIVE_PROMISE_REJECTION_EVENT$13 = isCallable$73(global$43.PromiseRejectionEvent);
  var FORCED_PROMISE_CONSTRUCTOR$53 = isForced$13("Promise", function() {
    var PROMISE_CONSTRUCTOR_SOURCE = inspectSource3(NativePromiseConstructor$33);
    var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor$33);
    if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION3 === 66) return true;
    if (!V8_VERSION3 || V8_VERSION3 < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
      var promise5 = new NativePromiseConstructor$33(function(resolve5) {
        resolve5(1);
      });
      var FakePromise = function(exec5) {
        exec5(function() {
        }, function() {
        });
      };
      var constructor = promise5.constructor = {};
      constructor[SPECIES3] = FakePromise;
      SUBCLASSING3 = promise5.then(function() {
      }) instanceof FakePromise;
      if (!SUBCLASSING3) return true;
    }
    return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER3 || IS_DENO3) && !NATIVE_PROMISE_REJECTION_EVENT$13;
  });
  var promiseConstructorDetection3 = {
    CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$53,
    REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$13,
    SUBCLASSING: SUBCLASSING3
  };
  var newPromiseCapability$23 = {};
  var aCallable$43 = aCallable$83;
  var $TypeError$23 = TypeError;
  var PromiseCapability3 = function(C2) {
    var resolve5, reject5;
    this.promise = new C2(function($$resolve, $$reject) {
      if (resolve5 !== void 0 || reject5 !== void 0) throw new $TypeError$23("Bad Promise constructor");
      resolve5 = $$resolve;
      reject5 = $$reject;
    });
    this.resolve = aCallable$43(resolve5);
    this.reject = aCallable$43(reject5);
  };
  newPromiseCapability$23.f = function(C2) {
    return new PromiseCapability3(C2);
  };
  var $$83 = _export3;
  var IS_NODE3 = engineIsNode3;
  var global$33 = global$j3;
  var call$73 = functionCall3;
  var defineBuiltIn$53 = defineBuiltIn$83;
  var setPrototypeOf$23 = objectSetPrototypeOf3;
  var setToStringTag$43 = setToStringTag$53;
  var setSpecies3 = setSpecies$13;
  var aCallable$33 = aCallable$83;
  var isCallable$63 = isCallable$m3;
  var isObject$73 = isObject$f3;
  var anInstance$23 = anInstance$33;
  var speciesConstructor3 = speciesConstructor$13;
  var task3 = task$13.set;
  var microtask3 = microtask_13;
  var hostReportErrors3 = hostReportErrors$13;
  var perform$23 = perform$33;
  var Queue3 = queue$13;
  var InternalStateModule$33 = internalState3;
  var NativePromiseConstructor$23 = promiseNativeConstructor3;
  var PromiseConstructorDetection3 = promiseConstructorDetection3;
  var newPromiseCapabilityModule$33 = newPromiseCapability$23;
  var PROMISE3 = "Promise";
  var FORCED_PROMISE_CONSTRUCTOR$43 = PromiseConstructorDetection3.CONSTRUCTOR;
  var NATIVE_PROMISE_REJECTION_EVENT3 = PromiseConstructorDetection3.REJECTION_EVENT;
  var NATIVE_PROMISE_SUBCLASSING3 = PromiseConstructorDetection3.SUBCLASSING;
  var getInternalPromiseState3 = InternalStateModule$33.getterFor(PROMISE3);
  var setInternalState$33 = InternalStateModule$33.set;
  var NativePromisePrototype$13 = NativePromiseConstructor$23 && NativePromiseConstructor$23.prototype;
  var PromiseConstructor3 = NativePromiseConstructor$23;
  var PromisePrototype3 = NativePromisePrototype$13;
  var TypeError$13 = global$33.TypeError;
  var document$13 = global$33.document;
  var process3 = global$33.process;
  var newPromiseCapability$13 = newPromiseCapabilityModule$33.f;
  var newGenericPromiseCapability3 = newPromiseCapability$13;
  var DISPATCH_EVENT3 = !!(document$13 && document$13.createEvent && global$33.dispatchEvent);
  var UNHANDLED_REJECTION3 = "unhandledrejection";
  var REJECTION_HANDLED3 = "rejectionhandled";
  var PENDING3 = 0;
  var FULFILLED3 = 1;
  var REJECTED3 = 2;
  var HANDLED3 = 1;
  var UNHANDLED3 = 2;
  var Internal3;
  var OwnPromiseCapability3;
  var PromiseWrapper3;
  var nativeThen3;
  var isThenable3 = function(it) {
    var then5;
    return isObject$73(it) && isCallable$63(then5 = it.then) ? then5 : false;
  };
  var callReaction3 = function(reaction, state) {
    var value = state.value;
    var ok = state.state === FULFILLED3;
    var handler = ok ? reaction.ok : reaction.fail;
    var resolve5 = reaction.resolve;
    var reject5 = reaction.reject;
    var domain = reaction.domain;
    var result, then5, exited;
    try {
      if (handler) {
        if (!ok) {
          if (state.rejection === UNHANDLED3) onHandleUnhandled3(state);
          state.rejection = HANDLED3;
        }
        if (handler === true) result = value;
        else {
          if (domain) domain.enter();
          result = handler(value);
          if (domain) {
            domain.exit();
            exited = true;
          }
        }
        if (result === reaction.promise) {
          reject5(new TypeError$13("Promise-chain cycle"));
        } else if (then5 = isThenable3(result)) {
          call$73(then5, result, resolve5, reject5);
        } else resolve5(result);
      } else reject5(value);
    } catch (error) {
      if (domain && !exited) domain.exit();
      reject5(error);
    }
  };
  var notify3 = function(state, isReject) {
    if (state.notified) return;
    state.notified = true;
    microtask3(function() {
      var reactions = state.reactions;
      var reaction;
      while (reaction = reactions.get()) {
        callReaction3(reaction, state);
      }
      state.notified = false;
      if (isReject && !state.rejection) onUnhandled3(state);
    });
  };
  var dispatchEvent4 = function(name, promise5, reason) {
    var event, handler;
    if (DISPATCH_EVENT3) {
      event = document$13.createEvent("Event");
      event.promise = promise5;
      event.reason = reason;
      event.initEvent(name, false, true);
      global$33.dispatchEvent(event);
    } else event = { promise: promise5, reason };
    if (!NATIVE_PROMISE_REJECTION_EVENT3 && (handler = global$33["on" + name])) handler(event);
    else if (name === UNHANDLED_REJECTION3) hostReportErrors3("Unhandled promise rejection", reason);
  };
  var onUnhandled3 = function(state) {
    call$73(task3, global$33, function() {
      var promise5 = state.facade;
      var value = state.value;
      var IS_UNHANDLED = isUnhandled3(state);
      var result;
      if (IS_UNHANDLED) {
        result = perform$23(function() {
          if (IS_NODE3) {
            process3.emit("unhandledRejection", value, promise5);
          } else dispatchEvent4(UNHANDLED_REJECTION3, promise5, value);
        });
        state.rejection = IS_NODE3 || isUnhandled3(state) ? UNHANDLED3 : HANDLED3;
        if (result.error) throw result.value;
      }
    });
  };
  var isUnhandled3 = function(state) {
    return state.rejection !== HANDLED3 && !state.parent;
  };
  var onHandleUnhandled3 = function(state) {
    call$73(task3, global$33, function() {
      var promise5 = state.facade;
      if (IS_NODE3) {
        process3.emit("rejectionHandled", promise5);
      } else dispatchEvent4(REJECTION_HANDLED3, promise5, state.value);
    });
  };
  var bind$23 = function(fn2, state, unwrap) {
    return function(value) {
      fn2(state, value, unwrap);
    };
  };
  var internalReject3 = function(state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    state.value = value;
    state.state = REJECTED3;
    notify3(state, true);
  };
  var internalResolve3 = function(state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    try {
      if (state.facade === value) throw new TypeError$13("Promise can't be resolved itself");
      var then5 = isThenable3(value);
      if (then5) {
        microtask3(function() {
          var wrapper = { done: false };
          try {
            call$73(
              then5,
              value,
              bind$23(internalResolve3, wrapper, state),
              bind$23(internalReject3, wrapper, state)
            );
          } catch (error) {
            internalReject3(wrapper, error, state);
          }
        });
      } else {
        state.value = value;
        state.state = FULFILLED3;
        notify3(state, false);
      }
    } catch (error) {
      internalReject3({ done: false }, error, state);
    }
  };
  if (FORCED_PROMISE_CONSTRUCTOR$43) {
    PromiseConstructor3 = function Promise2(executor) {
      anInstance$23(this, PromisePrototype3);
      aCallable$33(executor);
      call$73(Internal3, this);
      var state = getInternalPromiseState3(this);
      try {
        executor(bind$23(internalResolve3, state), bind$23(internalReject3, state));
      } catch (error) {
        internalReject3(state, error);
      }
    };
    PromisePrototype3 = PromiseConstructor3.prototype;
    Internal3 = function Promise2(executor) {
      setInternalState$33(this, {
        type: PROMISE3,
        done: false,
        notified: false,
        parent: false,
        reactions: new Queue3(),
        rejection: false,
        state: PENDING3,
        value: void 0
      });
    };
    Internal3.prototype = defineBuiltIn$53(PromisePrototype3, "then", function then5(onFulfilled, onRejected) {
      var state = getInternalPromiseState3(this);
      var reaction = newPromiseCapability$13(speciesConstructor3(this, PromiseConstructor3));
      state.parent = true;
      reaction.ok = isCallable$63(onFulfilled) ? onFulfilled : true;
      reaction.fail = isCallable$63(onRejected) && onRejected;
      reaction.domain = IS_NODE3 ? process3.domain : void 0;
      if (state.state === PENDING3) state.reactions.add(reaction);
      else microtask3(function() {
        callReaction3(reaction, state);
      });
      return reaction.promise;
    });
    OwnPromiseCapability3 = function() {
      var promise5 = new Internal3();
      var state = getInternalPromiseState3(promise5);
      this.promise = promise5;
      this.resolve = bind$23(internalResolve3, state);
      this.reject = bind$23(internalReject3, state);
    };
    newPromiseCapabilityModule$33.f = newPromiseCapability$13 = function(C2) {
      return C2 === PromiseConstructor3 || C2 === PromiseWrapper3 ? new OwnPromiseCapability3(C2) : newGenericPromiseCapability3(C2);
    };
    if (isCallable$63(NativePromiseConstructor$23) && NativePromisePrototype$13 !== Object.prototype) {
      nativeThen3 = NativePromisePrototype$13.then;
      if (!NATIVE_PROMISE_SUBCLASSING3) {
        defineBuiltIn$53(NativePromisePrototype$13, "then", function then5(onFulfilled, onRejected) {
          var that = this;
          return new PromiseConstructor3(function(resolve5, reject5) {
            call$73(nativeThen3, that, resolve5, reject5);
          }).then(onFulfilled, onRejected);
        }, { unsafe: true });
      }
      try {
        delete NativePromisePrototype$13.constructor;
      } catch (error) {
      }
      if (setPrototypeOf$23) {
        setPrototypeOf$23(NativePromisePrototype$13, PromisePrototype3);
      }
    }
  }
  $$83({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR$43 }, {
    Promise: PromiseConstructor3
  });
  setToStringTag$43(PromiseConstructor3, PROMISE3, false);
  setSpecies3(PROMISE3);
  var iterators3 = {};
  var wellKnownSymbol$63 = wellKnownSymbol$h3;
  var Iterators$43 = iterators3;
  var ITERATOR$53 = wellKnownSymbol$63("iterator");
  var ArrayPrototype$13 = Array.prototype;
  var isArrayIteratorMethod$13 = function(it) {
    return it !== void 0 && (Iterators$43.Array === it || ArrayPrototype$13[ITERATOR$53] === it);
  };
  var classof$33 = classof$73;
  var getMethod$13 = getMethod$33;
  var isNullOrUndefined$23 = isNullOrUndefined$63;
  var Iterators$33 = iterators3;
  var wellKnownSymbol$53 = wellKnownSymbol$h3;
  var ITERATOR$43 = wellKnownSymbol$53("iterator");
  var getIteratorMethod$23 = function(it) {
    if (!isNullOrUndefined$23(it)) return getMethod$13(it, ITERATOR$43) || getMethod$13(it, "@@iterator") || Iterators$33[classof$33(it)];
  };
  var call$63 = functionCall3;
  var aCallable$23 = aCallable$83;
  var anObject$63 = anObject$b3;
  var tryToString$13 = tryToString$43;
  var getIteratorMethod$13 = getIteratorMethod$23;
  var $TypeError$13 = TypeError;
  var getIterator$13 = function(argument, usingIterator) {
    var iteratorMethod = arguments.length < 2 ? getIteratorMethod$13(argument) : usingIterator;
    if (aCallable$23(iteratorMethod)) return anObject$63(call$63(iteratorMethod, argument));
    throw new $TypeError$13(tryToString$13(argument) + " is not iterable");
  };
  var call$53 = functionCall3;
  var anObject$53 = anObject$b3;
  var getMethod3 = getMethod$33;
  var iteratorClose$13 = function(iterator, kind, value) {
    var innerResult, innerError;
    anObject$53(iterator);
    try {
      innerResult = getMethod3(iterator, "return");
      if (!innerResult) {
        if (kind === "throw") throw value;
        return value;
      }
      innerResult = call$53(innerResult, iterator);
    } catch (error) {
      innerError = true;
      innerResult = error;
    }
    if (kind === "throw") throw value;
    if (innerError) throw innerResult;
    anObject$53(innerResult);
    return value;
  };
  var bind$13 = functionBindContext3;
  var call$43 = functionCall3;
  var anObject$43 = anObject$b3;
  var tryToString3 = tryToString$43;
  var isArrayIteratorMethod3 = isArrayIteratorMethod$13;
  var lengthOfArrayLike$23 = lengthOfArrayLike$53;
  var isPrototypeOf3 = objectIsPrototypeOf3;
  var getIterator3 = getIterator$13;
  var getIteratorMethod3 = getIteratorMethod$23;
  var iteratorClose3 = iteratorClose$13;
  var $TypeError3 = TypeError;
  var Result3 = function(stopped, result) {
    this.stopped = stopped;
    this.result = result;
  };
  var ResultPrototype3 = Result3.prototype;
  var iterate$43 = function(iterable, unboundFunction, options) {
    var that = options && options.that;
    var AS_ENTRIES = !!(options && options.AS_ENTRIES);
    var IS_RECORD = !!(options && options.IS_RECORD);
    var IS_ITERATOR = !!(options && options.IS_ITERATOR);
    var INTERRUPTED = !!(options && options.INTERRUPTED);
    var fn2 = bind$13(unboundFunction, that);
    var iterator, iterFn, index, length3, result, next5, step;
    var stop = function(condition) {
      if (iterator) iteratorClose3(iterator, "normal", condition);
      return new Result3(true, condition);
    };
    var callFn = function(value) {
      if (AS_ENTRIES) {
        anObject$43(value);
        return INTERRUPTED ? fn2(value[0], value[1], stop) : fn2(value[0], value[1]);
      }
      return INTERRUPTED ? fn2(value, stop) : fn2(value);
    };
    if (IS_RECORD) {
      iterator = iterable.iterator;
    } else if (IS_ITERATOR) {
      iterator = iterable;
    } else {
      iterFn = getIteratorMethod3(iterable);
      if (!iterFn) throw new $TypeError3(tryToString3(iterable) + " is not iterable");
      if (isArrayIteratorMethod3(iterFn)) {
        for (index = 0, length3 = lengthOfArrayLike$23(iterable); length3 > index; index++) {
          result = callFn(iterable[index]);
          if (result && isPrototypeOf3(ResultPrototype3, result)) return result;
        }
        return new Result3(false);
      }
      iterator = getIterator3(iterable, iterFn);
    }
    next5 = IS_RECORD ? iterable.next : iterator.next;
    while (!(step = call$43(next5, iterator)).done) {
      try {
        result = callFn(step.value);
      } catch (error) {
        iteratorClose3(iterator, "throw", error);
      }
      if (typeof result == "object" && result && isPrototypeOf3(ResultPrototype3, result)) return result;
    }
    return new Result3(false);
  };
  var wellKnownSymbol$43 = wellKnownSymbol$h3;
  var ITERATOR$33 = wellKnownSymbol$43("iterator");
  var SAFE_CLOSING3 = false;
  try {
    called = 0;
    iteratorWithReturn = {
      next: function() {
        return { done: !!called++ };
      },
      "return": function() {
        SAFE_CLOSING3 = true;
      }
    };
    iteratorWithReturn[ITERATOR$33] = function() {
      return this;
    };
    Array.from(iteratorWithReturn, function() {
      throw 2;
    });
  } catch (error) {
  }
  var called;
  var iteratorWithReturn;
  var checkCorrectnessOfIteration$23 = function(exec5, SKIP_CLOSING) {
    try {
      if (!SKIP_CLOSING && !SAFE_CLOSING3) return false;
    } catch (error) {
      return false;
    }
    var ITERATION_SUPPORT = false;
    try {
      var object = {};
      object[ITERATOR$33] = function() {
        return {
          next: function() {
            return { done: ITERATION_SUPPORT = true };
          }
        };
      };
      exec5(object);
    } catch (error) {
    }
    return ITERATION_SUPPORT;
  };
  var NativePromiseConstructor$13 = promiseNativeConstructor3;
  var checkCorrectnessOfIteration$13 = checkCorrectnessOfIteration$23;
  var FORCED_PROMISE_CONSTRUCTOR$33 = promiseConstructorDetection3.CONSTRUCTOR;
  var promiseStaticsIncorrectIteration3 = FORCED_PROMISE_CONSTRUCTOR$33 || !checkCorrectnessOfIteration$13(function(iterable) {
    NativePromiseConstructor$13.all(iterable).then(void 0, function() {
    });
  });
  var $$73 = _export3;
  var call$33 = functionCall3;
  var aCallable$13 = aCallable$83;
  var newPromiseCapabilityModule$23 = newPromiseCapability$23;
  var perform$13 = perform$33;
  var iterate$33 = iterate$43;
  var PROMISE_STATICS_INCORRECT_ITERATION$13 = promiseStaticsIncorrectIteration3;
  $$73({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$13 }, {
    all: function all3(iterable) {
      var C2 = this;
      var capability = newPromiseCapabilityModule$23.f(C2);
      var resolve5 = capability.resolve;
      var reject5 = capability.reject;
      var result = perform$13(function() {
        var $promiseResolve = aCallable$13(C2.resolve);
        var values5 = [];
        var counter5 = 0;
        var remaining = 1;
        iterate$33(iterable, function(promise5) {
          var index = counter5++;
          var alreadyCalled = false;
          remaining++;
          call$33($promiseResolve, C2, promise5).then(function(value) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values5[index] = value;
            --remaining || resolve5(values5);
          }, reject5);
        });
        --remaining || resolve5(values5);
      });
      if (result.error) reject5(result.value);
      return capability.promise;
    }
  });
  var $$63 = _export3;
  var FORCED_PROMISE_CONSTRUCTOR$23 = promiseConstructorDetection3.CONSTRUCTOR;
  var NativePromiseConstructor3 = promiseNativeConstructor3;
  var getBuiltIn$13 = getBuiltIn$73;
  var isCallable$53 = isCallable$m3;
  var defineBuiltIn$43 = defineBuiltIn$83;
  var NativePromisePrototype3 = NativePromiseConstructor3 && NativePromiseConstructor3.prototype;
  $$63({ target: "Promise", proto: true, forced: FORCED_PROMISE_CONSTRUCTOR$23, real: true }, {
    "catch": function(onRejected) {
      return this.then(void 0, onRejected);
    }
  });
  if (isCallable$53(NativePromiseConstructor3)) {
    method = getBuiltIn$13("Promise").prototype["catch"];
    if (NativePromisePrototype3["catch"] !== method) {
      defineBuiltIn$43(NativePromisePrototype3, "catch", method, { unsafe: true });
    }
  }
  var method;
  var $$53 = _export3;
  var call$23 = functionCall3;
  var aCallable3 = aCallable$83;
  var newPromiseCapabilityModule$13 = newPromiseCapability$23;
  var perform3 = perform$33;
  var iterate$23 = iterate$43;
  var PROMISE_STATICS_INCORRECT_ITERATION3 = promiseStaticsIncorrectIteration3;
  $$53({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION3 }, {
    race: function race3(iterable) {
      var C2 = this;
      var capability = newPromiseCapabilityModule$13.f(C2);
      var reject5 = capability.reject;
      var result = perform3(function() {
        var $promiseResolve = aCallable3(C2.resolve);
        iterate$23(iterable, function(promise5) {
          call$23($promiseResolve, C2, promise5).then(capability.resolve, reject5);
        });
      });
      if (result.error) reject5(result.value);
      return capability.promise;
    }
  });
  var $$43 = _export3;
  var call$13 = functionCall3;
  var newPromiseCapabilityModule3 = newPromiseCapability$23;
  var FORCED_PROMISE_CONSTRUCTOR$13 = promiseConstructorDetection3.CONSTRUCTOR;
  $$43({ target: "Promise", stat: true, forced: FORCED_PROMISE_CONSTRUCTOR$13 }, {
    reject: function reject3(r) {
      var capability = newPromiseCapabilityModule3.f(this);
      call$13(capability.reject, void 0, r);
      return capability.promise;
    }
  });
  var anObject$33 = anObject$b3;
  var isObject$63 = isObject$f3;
  var newPromiseCapability3 = newPromiseCapability$23;
  var promiseResolve$13 = function(C2, x) {
    anObject$33(C2);
    if (isObject$63(x) && x.constructor === C2) return x;
    var promiseCapability = newPromiseCapability3.f(C2);
    var resolve5 = promiseCapability.resolve;
    resolve5(x);
    return promiseCapability.promise;
  };
  var $$33 = _export3;
  var getBuiltIn3 = getBuiltIn$73;
  var FORCED_PROMISE_CONSTRUCTOR3 = promiseConstructorDetection3.CONSTRUCTOR;
  var promiseResolve3 = promiseResolve$13;
  getBuiltIn3("Promise");
  $$33({ target: "Promise", stat: true, forced: FORCED_PROMISE_CONSTRUCTOR3 }, {
    resolve: function resolve3(x) {
      return promiseResolve3(this, x);
    }
  });
  var objectDefineProperties3 = {};
  var DESCRIPTORS$13 = descriptors3;
  var V8_PROTOTYPE_DEFINE_BUG3 = v8PrototypeDefineBug3;
  var definePropertyModule3 = objectDefineProperty3;
  var anObject$23 = anObject$b3;
  var toIndexedObject$23 = toIndexedObject$63;
  var objectKeys3 = objectKeys$23;
  objectDefineProperties3.f = DESCRIPTORS$13 && !V8_PROTOTYPE_DEFINE_BUG3 ? Object.defineProperties : function defineProperties3(O, Properties) {
    anObject$23(O);
    var props = toIndexedObject$23(Properties);
    var keys12 = objectKeys3(Properties);
    var length3 = keys12.length;
    var index = 0;
    var key;
    while (length3 > index) definePropertyModule3.f(O, key = keys12[index++], props[key]);
    return O;
  };
  var anObject$13 = anObject$b3;
  var definePropertiesModule3 = objectDefineProperties3;
  var enumBugKeys3 = enumBugKeys$33;
  var hiddenKeys$13 = hiddenKeys$53;
  var html3 = html$23;
  var documentCreateElement$13 = documentCreateElement$23;
  var sharedKey$13 = sharedKey$33;
  var GT3 = ">";
  var LT3 = "<";
  var PROTOTYPE3 = "prototype";
  var SCRIPT3 = "script";
  var IE_PROTO$13 = sharedKey$13("IE_PROTO");
  var EmptyConstructor3 = function() {
  };
  var scriptTag3 = function(content) {
    return LT3 + SCRIPT3 + GT3 + content + LT3 + "/" + SCRIPT3 + GT3;
  };
  var NullProtoObjectViaActiveX3 = function(activeXDocument5) {
    activeXDocument5.write(scriptTag3(""));
    activeXDocument5.close();
    var temp = activeXDocument5.parentWindow.Object;
    activeXDocument5 = null;
    return temp;
  };
  var NullProtoObjectViaIFrame3 = function() {
    var iframe = documentCreateElement$13("iframe");
    var JS = "java" + SCRIPT3 + ":";
    var iframeDocument;
    iframe.style.display = "none";
    html3.appendChild(iframe);
    iframe.src = String(JS);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(scriptTag3("document.F=Object"));
    iframeDocument.close();
    return iframeDocument.F;
  };
  var activeXDocument3;
  var NullProtoObject3 = function() {
    try {
      activeXDocument3 = new ActiveXObject("htmlfile");
    } catch (error) {
    }
    NullProtoObject3 = typeof document != "undefined" ? document.domain && activeXDocument3 ? NullProtoObjectViaActiveX3(activeXDocument3) : NullProtoObjectViaIFrame3() : NullProtoObjectViaActiveX3(activeXDocument3);
    var length3 = enumBugKeys3.length;
    while (length3--) delete NullProtoObject3[PROTOTYPE3][enumBugKeys3[length3]];
    return NullProtoObject3();
  };
  hiddenKeys$13[IE_PROTO$13] = true;
  var objectCreate3 = Object.create || function create6(O, Properties) {
    var result;
    if (O !== null) {
      EmptyConstructor3[PROTOTYPE3] = anObject$13(O);
      result = new EmptyConstructor3();
      EmptyConstructor3[PROTOTYPE3] = null;
      result[IE_PROTO$13] = O;
    } else result = NullProtoObject3();
    return Properties === void 0 ? result : definePropertiesModule3.f(result, Properties);
  };
  var wellKnownSymbol$33 = wellKnownSymbol$h3;
  var create$13 = objectCreate3;
  var defineProperty$23 = objectDefineProperty3.f;
  var UNSCOPABLES3 = wellKnownSymbol$33("unscopables");
  var ArrayPrototype3 = Array.prototype;
  if (ArrayPrototype3[UNSCOPABLES3] === void 0) {
    defineProperty$23(ArrayPrototype3, UNSCOPABLES3, {
      configurable: true,
      value: create$13(null)
    });
  }
  var addToUnscopables$13 = function(key) {
    ArrayPrototype3[UNSCOPABLES3][key] = true;
  };
  var fails$53 = fails$j3;
  var correctPrototypeGetter3 = !fails$53(function() {
    function F() {
    }
    F.prototype.constructor = null;
    return Object.getPrototypeOf(new F()) !== F.prototype;
  });
  var hasOwn$23 = hasOwnProperty_13;
  var isCallable$43 = isCallable$m3;
  var toObject$13 = toObject$53;
  var sharedKey3 = sharedKey$33;
  var CORRECT_PROTOTYPE_GETTER3 = correctPrototypeGetter3;
  var IE_PROTO3 = sharedKey3("IE_PROTO");
  var $Object3 = Object;
  var ObjectPrototype3 = $Object3.prototype;
  var objectGetPrototypeOf3 = CORRECT_PROTOTYPE_GETTER3 ? $Object3.getPrototypeOf : function(O) {
    var object = toObject$13(O);
    if (hasOwn$23(object, IE_PROTO3)) return object[IE_PROTO3];
    var constructor = object.constructor;
    if (isCallable$43(constructor) && object instanceof constructor) {
      return constructor.prototype;
    }
    return object instanceof $Object3 ? ObjectPrototype3 : null;
  };
  var fails$43 = fails$j3;
  var isCallable$33 = isCallable$m3;
  var isObject$53 = isObject$f3;
  var getPrototypeOf$13 = objectGetPrototypeOf3;
  var defineBuiltIn$33 = defineBuiltIn$83;
  var wellKnownSymbol$23 = wellKnownSymbol$h3;
  var ITERATOR$23 = wellKnownSymbol$23("iterator");
  var BUGGY_SAFARI_ITERATORS$13 = false;
  var IteratorPrototype$23;
  var PrototypeOfArrayIteratorPrototype3;
  var arrayIterator3;
  if ([].keys) {
    arrayIterator3 = [].keys();
    if (!("next" in arrayIterator3)) BUGGY_SAFARI_ITERATORS$13 = true;
    else {
      PrototypeOfArrayIteratorPrototype3 = getPrototypeOf$13(getPrototypeOf$13(arrayIterator3));
      if (PrototypeOfArrayIteratorPrototype3 !== Object.prototype) IteratorPrototype$23 = PrototypeOfArrayIteratorPrototype3;
    }
  }
  var NEW_ITERATOR_PROTOTYPE3 = !isObject$53(IteratorPrototype$23) || fails$43(function() {
    var test5 = {};
    return IteratorPrototype$23[ITERATOR$23].call(test5) !== test5;
  });
  if (NEW_ITERATOR_PROTOTYPE3) IteratorPrototype$23 = {};
  if (!isCallable$33(IteratorPrototype$23[ITERATOR$23])) {
    defineBuiltIn$33(IteratorPrototype$23, ITERATOR$23, function() {
      return this;
    });
  }
  var iteratorsCore3 = {
    IteratorPrototype: IteratorPrototype$23,
    BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$13
  };
  var IteratorPrototype$13 = iteratorsCore3.IteratorPrototype;
  var create7 = objectCreate3;
  var createPropertyDescriptor3 = createPropertyDescriptor$43;
  var setToStringTag$33 = setToStringTag$53;
  var Iterators$23 = iterators3;
  var returnThis$13 = function() {
    return this;
  };
  var iteratorCreateConstructor3 = function(IteratorConstructor, NAME5, next5, ENUMERABLE_NEXT) {
    var TO_STRING_TAG5 = NAME5 + " Iterator";
    IteratorConstructor.prototype = create7(IteratorPrototype$13, { next: createPropertyDescriptor3(+!ENUMERABLE_NEXT, next5) });
    setToStringTag$33(IteratorConstructor, TO_STRING_TAG5, false);
    Iterators$23[TO_STRING_TAG5] = returnThis$13;
    return IteratorConstructor;
  };
  var $$23 = _export3;
  var call3 = functionCall3;
  var FunctionName3 = functionName3;
  var isCallable$23 = isCallable$m3;
  var createIteratorConstructor3 = iteratorCreateConstructor3;
  var getPrototypeOf3 = objectGetPrototypeOf3;
  var setPrototypeOf$13 = objectSetPrototypeOf3;
  var setToStringTag$23 = setToStringTag$53;
  var createNonEnumerableProperty$13 = createNonEnumerableProperty$43;
  var defineBuiltIn$23 = defineBuiltIn$83;
  var wellKnownSymbol$13 = wellKnownSymbol$h3;
  var Iterators$13 = iterators3;
  var IteratorsCore3 = iteratorsCore3;
  var PROPER_FUNCTION_NAME3 = FunctionName3.PROPER;
  var CONFIGURABLE_FUNCTION_NAME3 = FunctionName3.CONFIGURABLE;
  var IteratorPrototype3 = IteratorsCore3.IteratorPrototype;
  var BUGGY_SAFARI_ITERATORS3 = IteratorsCore3.BUGGY_SAFARI_ITERATORS;
  var ITERATOR$13 = wellKnownSymbol$13("iterator");
  var KEYS3 = "keys";
  var VALUES3 = "values";
  var ENTRIES3 = "entries";
  var returnThis3 = function() {
    return this;
  };
  var iteratorDefine3 = function(Iterable, NAME5, IteratorConstructor, next5, DEFAULT, IS_SET, FORCED5) {
    createIteratorConstructor3(IteratorConstructor, NAME5, next5);
    var getIterationMethod = function(KIND) {
      if (KIND === DEFAULT && defaultIterator) return defaultIterator;
      if (!BUGGY_SAFARI_ITERATORS3 && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];
      switch (KIND) {
        case KEYS3:
          return function keys12() {
            return new IteratorConstructor(this, KIND);
          };
        case VALUES3:
          return function values5() {
            return new IteratorConstructor(this, KIND);
          };
        case ENTRIES3:
          return function entries3() {
            return new IteratorConstructor(this, KIND);
          };
      }
      return function() {
        return new IteratorConstructor(this);
      };
    };
    var TO_STRING_TAG5 = NAME5 + " Iterator";
    var INCORRECT_VALUES_NAME = false;
    var IterablePrototype = Iterable.prototype;
    var nativeIterator = IterablePrototype[ITERATOR$13] || IterablePrototype["@@iterator"] || DEFAULT && IterablePrototype[DEFAULT];
    var defaultIterator = !BUGGY_SAFARI_ITERATORS3 && nativeIterator || getIterationMethod(DEFAULT);
    var anyNativeIterator = NAME5 === "Array" ? IterablePrototype.entries || nativeIterator : nativeIterator;
    var CurrentIteratorPrototype, methods, KEY;
    if (anyNativeIterator) {
      CurrentIteratorPrototype = getPrototypeOf3(anyNativeIterator.call(new Iterable()));
      if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
        if (getPrototypeOf3(CurrentIteratorPrototype) !== IteratorPrototype3) {
          if (setPrototypeOf$13) {
            setPrototypeOf$13(CurrentIteratorPrototype, IteratorPrototype3);
          } else if (!isCallable$23(CurrentIteratorPrototype[ITERATOR$13])) {
            defineBuiltIn$23(CurrentIteratorPrototype, ITERATOR$13, returnThis3);
          }
        }
        setToStringTag$23(CurrentIteratorPrototype, TO_STRING_TAG5, true);
      }
    }
    if (PROPER_FUNCTION_NAME3 && DEFAULT === VALUES3 && nativeIterator && nativeIterator.name !== VALUES3) {
      if (CONFIGURABLE_FUNCTION_NAME3) {
        createNonEnumerableProperty$13(IterablePrototype, "name", VALUES3);
      } else {
        INCORRECT_VALUES_NAME = true;
        defaultIterator = function values5() {
          return call3(nativeIterator, this);
        };
      }
    }
    if (DEFAULT) {
      methods = {
        values: getIterationMethod(VALUES3),
        keys: IS_SET ? defaultIterator : getIterationMethod(KEYS3),
        entries: getIterationMethod(ENTRIES3)
      };
      if (FORCED5) for (KEY in methods) {
        if (BUGGY_SAFARI_ITERATORS3 || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
          defineBuiltIn$23(IterablePrototype, KEY, methods[KEY]);
        }
      }
      else $$23({ target: NAME5, proto: true, forced: BUGGY_SAFARI_ITERATORS3 || INCORRECT_VALUES_NAME }, methods);
    }
    if (IterablePrototype[ITERATOR$13] !== defaultIterator) {
      defineBuiltIn$23(IterablePrototype, ITERATOR$13, defaultIterator, { name: DEFAULT });
    }
    Iterators$13[NAME5] = defaultIterator;
    return methods;
  };
  var createIterResultObject$23 = function(value, done) {
    return { value, done };
  };
  var toIndexedObject$13 = toIndexedObject$63;
  var addToUnscopables3 = addToUnscopables$13;
  var Iterators3 = iterators3;
  var InternalStateModule$23 = internalState3;
  var defineProperty$13 = objectDefineProperty3.f;
  var defineIterator$13 = iteratorDefine3;
  var createIterResultObject$13 = createIterResultObject$23;
  var DESCRIPTORS3 = descriptors3;
  var ARRAY_ITERATOR3 = "Array Iterator";
  var setInternalState$23 = InternalStateModule$23.set;
  var getInternalState$13 = InternalStateModule$23.getterFor(ARRAY_ITERATOR3);
  var es_array_iterator3 = defineIterator$13(Array, "Array", function(iterated, kind) {
    setInternalState$23(this, {
      type: ARRAY_ITERATOR3,
      target: toIndexedObject$13(iterated),
      // target
      index: 0,
      // next index
      kind
      // kind
    });
  }, function() {
    var state = getInternalState$13(this);
    var target = state.target;
    var index = state.index++;
    if (!target || index >= target.length) {
      state.target = void 0;
      return createIterResultObject$13(void 0, true);
    }
    switch (state.kind) {
      case "keys":
        return createIterResultObject$13(index, false);
      case "values":
        return createIterResultObject$13(target[index], false);
    }
    return createIterResultObject$13([index, target[index]], false);
  }, "values");
  var values3 = Iterators3.Arguments = Iterators3.Array;
  addToUnscopables3("keys");
  addToUnscopables3("values");
  addToUnscopables3("entries");
  if (DESCRIPTORS3 && values3.name !== "values") try {
    defineProperty$13(values3, "name", { value: "values" });
  } catch (error) {
  }
  var classof$23 = classof$73;
  var $String3 = String;
  var toString$23 = function(argument) {
    if (classof$23(argument) === "Symbol") throw new TypeError("Cannot convert a Symbol value to a string");
    return $String3(argument);
  };
  var uncurryThis$43 = functionUncurryThis3;
  var toIntegerOrInfinity3 = toIntegerOrInfinity$33;
  var toString$13 = toString$23;
  var requireObjectCoercible3 = requireObjectCoercible$33;
  var charAt$13 = uncurryThis$43("".charAt);
  var charCodeAt3 = uncurryThis$43("".charCodeAt);
  var stringSlice3 = uncurryThis$43("".slice);
  var createMethod$13 = function(CONVERT_TO_STRING) {
    return function($this, pos) {
      var S = toString$13(requireObjectCoercible3($this));
      var position3 = toIntegerOrInfinity3(pos);
      var size = S.length;
      var first, second2;
      if (position3 < 0 || position3 >= size) return CONVERT_TO_STRING ? "" : void 0;
      first = charCodeAt3(S, position3);
      return first < 55296 || first > 56319 || position3 + 1 === size || (second2 = charCodeAt3(S, position3 + 1)) < 56320 || second2 > 57343 ? CONVERT_TO_STRING ? charAt$13(S, position3) : first : CONVERT_TO_STRING ? stringSlice3(S, position3, position3 + 2) : (first - 55296 << 10) + (second2 - 56320) + 65536;
    };
  };
  var stringMultibyte3 = {
    // `String.prototype.codePointAt` method
    // https://tc39.es/ecma262/#sec-string.prototype.codepointat
    codeAt: createMethod$13(false),
    // `String.prototype.at` method
    // https://github.com/mathiasbynens/String.prototype.at
    charAt: createMethod$13(true)
  };
  var charAt3 = stringMultibyte3.charAt;
  var toString9 = toString$23;
  var InternalStateModule$13 = internalState3;
  var defineIterator3 = iteratorDefine3;
  var createIterResultObject3 = createIterResultObject$23;
  var STRING_ITERATOR3 = "String Iterator";
  var setInternalState$13 = InternalStateModule$13.set;
  var getInternalState3 = InternalStateModule$13.getterFor(STRING_ITERATOR3);
  defineIterator3(String, "String", function(iterated) {
    setInternalState$13(this, {
      type: STRING_ITERATOR3,
      string: toString9(iterated),
      index: 0
    });
  }, function next3() {
    var state = getInternalState3(this);
    var string = state.string;
    var index = state.index;
    var point2;
    if (index >= string.length) return createIterResultObject3(void 0, true);
    point2 = charAt3(string, index);
    state.index += point2.length;
    return createIterResultObject3(point2, false);
  });
  var internalMetadata3 = { exports: {} };
  var objectGetOwnPropertyNamesExternal3 = {};
  var toAbsoluteIndex3 = toAbsoluteIndex$23;
  var lengthOfArrayLike$13 = lengthOfArrayLike$53;
  var createProperty3 = createProperty$23;
  var $Array3 = Array;
  var max6 = Math.max;
  var arraySliceSimple3 = function(O, start3, end2) {
    var length3 = lengthOfArrayLike$13(O);
    var k2 = toAbsoluteIndex3(start3, length3);
    var fin = toAbsoluteIndex3(end2 === void 0 ? length3 : end2, length3);
    var result = $Array3(max6(fin - k2, 0));
    var n = 0;
    for (; k2 < fin; k2++, n++) createProperty3(result, n, O[k2]);
    result.length = n;
    return result;
  };
  var classof$13 = classofRaw$23;
  var toIndexedObject3 = toIndexedObject$63;
  var $getOwnPropertyNames3 = objectGetOwnPropertyNames3.f;
  var arraySlice3 = arraySliceSimple3;
  var windowNames3 = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
  var getWindowNames3 = function(it) {
    try {
      return $getOwnPropertyNames3(it);
    } catch (error) {
      return arraySlice3(windowNames3);
    }
  };
  objectGetOwnPropertyNamesExternal3.f = function getOwnPropertyNames6(it) {
    return windowNames3 && classof$13(it) === "Window" ? getWindowNames3(it) : $getOwnPropertyNames3(toIndexedObject3(it));
  };
  var fails$33 = fails$j3;
  var arrayBufferNonExtensible3 = fails$33(function() {
    if (typeof ArrayBuffer == "function") {
      var buffer = new ArrayBuffer(8);
      if (Object.isExtensible(buffer)) Object.defineProperty(buffer, "a", { value: 8 });
    }
  });
  var fails$23 = fails$j3;
  var isObject$43 = isObject$f3;
  var classof3 = classofRaw$23;
  var ARRAY_BUFFER_NON_EXTENSIBLE3 = arrayBufferNonExtensible3;
  var $isExtensible3 = Object.isExtensible;
  var FAILS_ON_PRIMITIVES3 = fails$23(function() {
    $isExtensible3(1);
  });
  var objectIsExtensible3 = FAILS_ON_PRIMITIVES3 || ARRAY_BUFFER_NON_EXTENSIBLE3 ? function isExtensible5(it) {
    if (!isObject$43(it)) return false;
    if (ARRAY_BUFFER_NON_EXTENSIBLE3 && classof3(it) === "ArrayBuffer") return false;
    return $isExtensible3 ? $isExtensible3(it) : true;
  } : $isExtensible3;
  var fails$13 = fails$j3;
  var freezing3 = !fails$13(function() {
    return Object.isExtensible(Object.preventExtensions({}));
  });
  var $$13 = _export3;
  var uncurryThis$33 = functionUncurryThis3;
  var hiddenKeys3 = hiddenKeys$53;
  var isObject$33 = isObject$f3;
  var hasOwn$13 = hasOwnProperty_13;
  var defineProperty9 = objectDefineProperty3.f;
  var getOwnPropertyNamesModule3 = objectGetOwnPropertyNames3;
  var getOwnPropertyNamesExternalModule3 = objectGetOwnPropertyNamesExternal3;
  var isExtensible6 = objectIsExtensible3;
  var uid3 = uid$33;
  var FREEZING3 = freezing3;
  var REQUIRED3 = false;
  var METADATA3 = uid3("meta");
  var id$13 = 0;
  var setMetadata3 = function(it) {
    defineProperty9(it, METADATA3, { value: {
      objectID: "O" + id$13++,
      // object ID
      weakData: {}
      // weak collections IDs
    } });
  };
  var fastKey3 = function(it, create10) {
    if (!isObject$33(it)) return typeof it == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;
    if (!hasOwn$13(it, METADATA3)) {
      if (!isExtensible6(it)) return "F";
      if (!create10) return "E";
      setMetadata3(it);
    }
    return it[METADATA3].objectID;
  };
  var getWeakData$13 = function(it, create10) {
    if (!hasOwn$13(it, METADATA3)) {
      if (!isExtensible6(it)) return true;
      if (!create10) return false;
      setMetadata3(it);
    }
    return it[METADATA3].weakData;
  };
  var onFreeze3 = function(it) {
    if (FREEZING3 && REQUIRED3 && isExtensible6(it) && !hasOwn$13(it, METADATA3)) setMetadata3(it);
    return it;
  };
  var enable3 = function() {
    meta3.enable = function() {
    };
    REQUIRED3 = true;
    var getOwnPropertyNames9 = getOwnPropertyNamesModule3.f;
    var splice5 = uncurryThis$33([].splice);
    var test5 = {};
    test5[METADATA3] = 1;
    if (getOwnPropertyNames9(test5).length) {
      getOwnPropertyNamesModule3.f = function(it) {
        var result = getOwnPropertyNames9(it);
        for (var i = 0, length3 = result.length; i < length3; i++) {
          if (result[i] === METADATA3) {
            splice5(result, i, 1);
            break;
          }
        }
        return result;
      };
      $$13({ target: "Object", stat: true, forced: true }, {
        getOwnPropertyNames: getOwnPropertyNamesExternalModule3.f
      });
    }
  };
  var meta3 = internalMetadata3.exports = {
    enable: enable3,
    fastKey: fastKey3,
    getWeakData: getWeakData$13,
    onFreeze: onFreeze3
  };
  hiddenKeys3[METADATA3] = true;
  var internalMetadataExports3 = internalMetadata3.exports;
  var isCallable$13 = isCallable$m3;
  var isObject$23 = isObject$f3;
  var setPrototypeOf3 = objectSetPrototypeOf3;
  var inheritIfRequired$13 = function($this, dummy, Wrapper) {
    var NewTarget, NewTargetPrototype;
    if (
      // it can work only with native `setPrototypeOf`
      setPrototypeOf3 && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
      isCallable$13(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject$23(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype
    ) setPrototypeOf3($this, NewTargetPrototype);
    return $this;
  };
  var $3 = _export3;
  var global$23 = global$j3;
  var uncurryThis$23 = functionUncurryThis3;
  var isForced3 = isForced_13;
  var defineBuiltIn$13 = defineBuiltIn$83;
  var InternalMetadataModule3 = internalMetadataExports3;
  var iterate$13 = iterate$43;
  var anInstance$13 = anInstance$33;
  var isCallable3 = isCallable$m3;
  var isNullOrUndefined$13 = isNullOrUndefined$63;
  var isObject$13 = isObject$f3;
  var fails3 = fails$j3;
  var checkCorrectnessOfIteration3 = checkCorrectnessOfIteration$23;
  var setToStringTag$13 = setToStringTag$53;
  var inheritIfRequired3 = inheritIfRequired$13;
  var collection$13 = function(CONSTRUCTOR_NAME, wrapper, common) {
    var IS_MAP = CONSTRUCTOR_NAME.indexOf("Map") !== -1;
    var IS_WEAK = CONSTRUCTOR_NAME.indexOf("Weak") !== -1;
    var ADDER = IS_MAP ? "set" : "add";
    var NativeConstructor = global$23[CONSTRUCTOR_NAME];
    var NativePrototype = NativeConstructor && NativeConstructor.prototype;
    var Constructor = NativeConstructor;
    var exported = {};
    var fixMethod = function(KEY) {
      var uncurriedNativeMethod = uncurryThis$23(NativePrototype[KEY]);
      defineBuiltIn$13(
        NativePrototype,
        KEY,
        KEY === "add" ? function add(value) {
          uncurriedNativeMethod(this, value === 0 ? 0 : value);
          return this;
        } : KEY === "delete" ? function(key) {
          return IS_WEAK && !isObject$13(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : KEY === "get" ? function get7(key) {
          return IS_WEAK && !isObject$13(key) ? void 0 : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : KEY === "has" ? function has5(key) {
          return IS_WEAK && !isObject$13(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : function set7(key, value) {
          uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
          return this;
        }
      );
    };
    var REPLACE2 = isForced3(
      CONSTRUCTOR_NAME,
      !isCallable3(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails3(function() {
        new NativeConstructor().entries().next();
      }))
    );
    if (REPLACE2) {
      Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
      InternalMetadataModule3.enable();
    } else if (isForced3(CONSTRUCTOR_NAME, true)) {
      var instance = new Constructor();
      var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) !== instance;
      var THROWS_ON_PRIMITIVES = fails3(function() {
        instance.has(1);
      });
      var ACCEPT_ITERABLES = checkCorrectnessOfIteration3(function(iterable) {
        new NativeConstructor(iterable);
      });
      var BUGGY_ZERO = !IS_WEAK && fails3(function() {
        var $instance = new NativeConstructor();
        var index = 5;
        while (index--) $instance[ADDER](index, index);
        return !$instance.has(-0);
      });
      if (!ACCEPT_ITERABLES) {
        Constructor = wrapper(function(dummy, iterable) {
          anInstance$13(dummy, NativePrototype);
          var that = inheritIfRequired3(new NativeConstructor(), dummy, Constructor);
          if (!isNullOrUndefined$13(iterable)) iterate$13(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
          return that;
        });
        Constructor.prototype = NativePrototype;
        NativePrototype.constructor = Constructor;
      }
      if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
        fixMethod("delete");
        fixMethod("has");
        IS_MAP && fixMethod("get");
      }
      if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
      if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
    }
    exported[CONSTRUCTOR_NAME] = Constructor;
    $3({ global: true, constructor: true, forced: Constructor !== NativeConstructor }, exported);
    setToStringTag$13(Constructor, CONSTRUCTOR_NAME);
    if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
    return Constructor;
  };
  var defineBuiltIn3 = defineBuiltIn$83;
  var defineBuiltIns$13 = function(target, src, options) {
    for (var key in src) defineBuiltIn3(target, key, src[key], options);
    return target;
  };
  var bind3 = functionBindContext3;
  var uncurryThis$13 = functionUncurryThis3;
  var IndexedObject3 = indexedObject3;
  var toObject3 = toObject$53;
  var lengthOfArrayLike3 = lengthOfArrayLike$53;
  var arraySpeciesCreate3 = arraySpeciesCreate$23;
  var push3 = uncurryThis$13([].push);
  var createMethod3 = function(TYPE) {
    var IS_MAP = TYPE === 1;
    var IS_FILTER = TYPE === 2;
    var IS_SOME = TYPE === 3;
    var IS_EVERY = TYPE === 4;
    var IS_FIND_INDEX = TYPE === 6;
    var IS_FILTER_REJECT = TYPE === 7;
    var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
    return function($this, callbackfn, that, specificCreate) {
      var O = toObject3($this);
      var self2 = IndexedObject3(O);
      var length3 = lengthOfArrayLike3(self2);
      var boundFunction = bind3(callbackfn, that);
      var index = 0;
      var create10 = specificCreate || arraySpeciesCreate3;
      var target = IS_MAP ? create10($this, length3) : IS_FILTER || IS_FILTER_REJECT ? create10($this, 0) : void 0;
      var value, result;
      for (; length3 > index; index++) if (NO_HOLES || index in self2) {
        value = self2[index];
        result = boundFunction(value, index, O);
        if (TYPE) {
          if (IS_MAP) target[index] = result;
          else if (result) switch (TYPE) {
            case 3:
              return true;
            // some
            case 5:
              return value;
            // find
            case 6:
              return index;
            // findIndex
            case 2:
              push3(target, value);
          }
          else switch (TYPE) {
            case 4:
              return false;
            // every
            case 7:
              push3(target, value);
          }
        }
      }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
    };
  };
  var arrayIteration3 = {
    // `Array.prototype.forEach` method
    // https://tc39.es/ecma262/#sec-array.prototype.foreach
    forEach: createMethod3(0),
    // `Array.prototype.map` method
    // https://tc39.es/ecma262/#sec-array.prototype.map
    map: createMethod3(1),
    // `Array.prototype.filter` method
    // https://tc39.es/ecma262/#sec-array.prototype.filter
    filter: createMethod3(2),
    // `Array.prototype.some` method
    // https://tc39.es/ecma262/#sec-array.prototype.some
    some: createMethod3(3),
    // `Array.prototype.every` method
    // https://tc39.es/ecma262/#sec-array.prototype.every
    every: createMethod3(4),
    // `Array.prototype.find` method
    // https://tc39.es/ecma262/#sec-array.prototype.find
    find: createMethod3(5),
    // `Array.prototype.findIndex` method
    // https://tc39.es/ecma262/#sec-array.prototype.findIndex
    findIndex: createMethod3(6),
    // `Array.prototype.filterReject` method
    // https://github.com/tc39/proposal-array-filtering
    filterReject: createMethod3(7)
  };
  var uncurryThis3 = functionUncurryThis3;
  var defineBuiltIns3 = defineBuiltIns$13;
  var getWeakData3 = internalMetadataExports3.getWeakData;
  var anInstance3 = anInstance$33;
  var anObject3 = anObject$b3;
  var isNullOrUndefined3 = isNullOrUndefined$63;
  var isObject3 = isObject$f3;
  var iterate3 = iterate$43;
  var ArrayIterationModule3 = arrayIteration3;
  var hasOwn6 = hasOwnProperty_13;
  var InternalStateModule3 = internalState3;
  var setInternalState3 = InternalStateModule3.set;
  var internalStateGetterFor3 = InternalStateModule3.getterFor;
  var find4 = ArrayIterationModule3.find;
  var findIndex3 = ArrayIterationModule3.findIndex;
  var splice3 = uncurryThis3([].splice);
  var id4 = 0;
  var uncaughtFrozenStore3 = function(state) {
    return state.frozen || (state.frozen = new UncaughtFrozenStore3());
  };
  var UncaughtFrozenStore3 = function() {
    this.entries = [];
  };
  var findUncaughtFrozen3 = function(store, key) {
    return find4(store.entries, function(it) {
      return it[0] === key;
    });
  };
  UncaughtFrozenStore3.prototype = {
    get: function(key) {
      var entry = findUncaughtFrozen3(this, key);
      if (entry) return entry[1];
    },
    has: function(key) {
      return !!findUncaughtFrozen3(this, key);
    },
    set: function(key, value) {
      var entry = findUncaughtFrozen3(this, key);
      if (entry) entry[1] = value;
      else this.entries.push([key, value]);
    },
    "delete": function(key) {
      var index = findIndex3(this.entries, function(it) {
        return it[0] === key;
      });
      if (~index) splice3(this.entries, index, 1);
      return !!~index;
    }
  };
  var collectionWeak$13 = {
    getConstructor: function(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
      var Constructor = wrapper(function(that, iterable) {
        anInstance3(that, Prototype);
        setInternalState3(that, {
          type: CONSTRUCTOR_NAME,
          id: id4++,
          frozen: void 0
        });
        if (!isNullOrUndefined3(iterable)) iterate3(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
      });
      var Prototype = Constructor.prototype;
      var getInternalState5 = internalStateGetterFor3(CONSTRUCTOR_NAME);
      var define = function(that, key, value) {
        var state = getInternalState5(that);
        var data6 = getWeakData3(anObject3(key), true);
        if (data6 === true) uncaughtFrozenStore3(state).set(key, value);
        else data6[state.id] = value;
        return that;
      };
      defineBuiltIns3(Prototype, {
        // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
        // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
        // https://tc39.es/ecma262/#sec-weakset.prototype.delete
        "delete": function(key) {
          var state = getInternalState5(this);
          if (!isObject3(key)) return false;
          var data6 = getWeakData3(key);
          if (data6 === true) return uncaughtFrozenStore3(state)["delete"](key);
          return data6 && hasOwn6(data6, state.id) && delete data6[state.id];
        },
        // `{ WeakMap, WeakSet }.prototype.has(key)` methods
        // https://tc39.es/ecma262/#sec-weakmap.prototype.has
        // https://tc39.es/ecma262/#sec-weakset.prototype.has
        has: function has5(key) {
          var state = getInternalState5(this);
          if (!isObject3(key)) return false;
          var data6 = getWeakData3(key);
          if (data6 === true) return uncaughtFrozenStore3(state).has(key);
          return data6 && hasOwn6(data6, state.id);
        }
      });
      defineBuiltIns3(Prototype, IS_MAP ? {
        // `WeakMap.prototype.get(key)` method
        // https://tc39.es/ecma262/#sec-weakmap.prototype.get
        get: function get7(key) {
          var state = getInternalState5(this);
          if (isObject3(key)) {
            var data6 = getWeakData3(key);
            if (data6 === true) return uncaughtFrozenStore3(state).get(key);
            return data6 ? data6[state.id] : void 0;
          }
        },
        // `WeakMap.prototype.set(key, value)` method
        // https://tc39.es/ecma262/#sec-weakmap.prototype.set
        set: function set7(key, value) {
          return define(this, key, value);
        }
      } : {
        // `WeakSet.prototype.add(value)` method
        // https://tc39.es/ecma262/#sec-weakset.prototype.add
        add: function add(value) {
          return define(this, value, true);
        }
      });
      return Constructor;
    }
  };
  var collection3 = collection$13;
  var collectionWeak3 = collectionWeak$13;
  collection3("WeakSet", function(init2) {
    return function WeakSet2() {
      return init2(this, arguments.length ? arguments[0] : void 0);
    };
  }, collectionWeak3);
  var domIterables3 = {
    CSSRuleList: 0,
    CSSStyleDeclaration: 0,
    CSSValueList: 0,
    ClientRectList: 0,
    DOMRectList: 0,
    DOMStringList: 0,
    DOMTokenList: 1,
    DataTransferItemList: 0,
    FileList: 0,
    HTMLAllCollection: 0,
    HTMLCollection: 0,
    HTMLFormElement: 0,
    HTMLSelectElement: 0,
    MediaList: 0,
    MimeTypeArray: 0,
    NamedNodeMap: 0,
    NodeList: 1,
    PaintRequestList: 0,
    Plugin: 0,
    PluginArray: 0,
    SVGLengthList: 0,
    SVGNumberList: 0,
    SVGPathSegList: 0,
    SVGPointList: 0,
    SVGStringList: 0,
    SVGTransformList: 0,
    SourceBufferList: 0,
    StyleSheetList: 0,
    TextTrackCueList: 0,
    TextTrackList: 0,
    TouchList: 0
  };
  var documentCreateElement3 = documentCreateElement$23;
  var classList4 = documentCreateElement3("span").classList;
  var DOMTokenListPrototype$13 = classList4 && classList4.constructor && classList4.constructor.prototype;
  var domTokenListPrototype3 = DOMTokenListPrototype$13 === Object.prototype ? void 0 : DOMTokenListPrototype$13;
  var global$13 = global$j3;
  var DOMIterables3 = domIterables3;
  var DOMTokenListPrototype3 = domTokenListPrototype3;
  var ArrayIteratorMethods3 = es_array_iterator3;
  var createNonEnumerableProperty3 = createNonEnumerableProperty$43;
  var setToStringTag3 = setToStringTag$53;
  var wellKnownSymbol3 = wellKnownSymbol$h3;
  var ITERATOR3 = wellKnownSymbol3("iterator");
  var ArrayValues3 = ArrayIteratorMethods3.values;
  var handlePrototype3 = function(CollectionPrototype, COLLECTION_NAME) {
    if (CollectionPrototype) {
      if (CollectionPrototype[ITERATOR3] !== ArrayValues3) try {
        createNonEnumerableProperty3(CollectionPrototype, ITERATOR3, ArrayValues3);
      } catch (error) {
        CollectionPrototype[ITERATOR3] = ArrayValues3;
      }
      setToStringTag3(CollectionPrototype, COLLECTION_NAME, true);
      if (DOMIterables3[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods3) {
        if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods3[METHOD_NAME]) try {
          createNonEnumerableProperty3(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods3[METHOD_NAME]);
        } catch (error) {
          CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods3[METHOD_NAME];
        }
      }
    }
  };
  for (COLLECTION_NAME in DOMIterables3) {
    handlePrototype3(global$13[COLLECTION_NAME] && global$13[COLLECTION_NAME].prototype, COLLECTION_NAME);
  }
  var COLLECTION_NAME;
  handlePrototype3(DOMTokenListPrototype3, "DOMTokenList");
  function __classPrivateFieldGet3(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
  }
  var _Tooltip_instances;
  var _Tooltip_show;
  var _Tooltip_hide;
  var DEFAULT_SELECTOR3 = "#ch-tooltip";
  var defaultOptions2 = {
    enabled: true,
    // Expecting a function, which will return the tooltip content
    text: function text(_timestamp, value, dayjsDate) {
      return (
        // eslint-disable-next-line implicit-arrow-linebreak
        "".concat(value, " - ").concat(dayjsDate.format("LLLL"))
      );
    }
  };
  var DEFAULT_POPPER_OPTIONS = {
    placement: "top",
    modifiers: [{
      name: "offset",
      options: {
        offset: [0, 8]
      }
    }]
  };
  var virtualElement = {
    getBoundingClientRect: function getBoundingClientRect2() {
      var x = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      var y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      return {
        width: 0,
        height: 0,
        top: y,
        right: x,
        bottom: y,
        left: x,
        x,
        y,
        toJSON: function toJSON() {
        }
      };
    }
  };
  var Tooltip = /* @__PURE__ */ (function() {
    function Tooltip2(calendar2) {
      _classCallCheck3(this, Tooltip2);
      _Tooltip_instances.add(this);
      this.name = "Tooltip";
      this.calendar = calendar2;
      this.root = null;
      this.popperInstance = null;
      this.options = defaultOptions2;
      this.listenerAttached = false;
    }
    _createClass3(Tooltip2, [{
      key: "setup",
      value: function setup(pluginOptions) {
        this.options = Object.assign(Object.assign({}, defaultOptions2), pluginOptions);
        var event = this.calendar.eventEmitter;
        if (!this.options.enabled) {
          if (this.listenerAttached) {
            event.off("mouseover", this.mouseOverCallback, this);
            event.off("mouseout", this.mouseOutCallback, this);
            this.listenerAttached = false;
          }
          this.destroy();
          return;
        }
        this.popperOptions = Object.assign(Object.assign({}, DEFAULT_POPPER_OPTIONS), this.options);
        this.root = document.getElementById(DEFAULT_SELECTOR3.slice(1));
        if (!this.root) {
          var tooltipElem = document.createElement("div");
          tooltipElem.setAttribute("id", DEFAULT_SELECTOR3.slice(1));
          tooltipElem.setAttribute("role", "tooltip");
          tooltipElem.innerHTML = '<div id="'.concat(DEFAULT_SELECTOR3.slice(1), '-arrow" data-popper-arrow="true"></div>') + '<span id="'.concat(DEFAULT_SELECTOR3.slice(1), '-body"></span>');
          this.root = document.body.appendChild(tooltipElem);
        }
        this.root.setAttribute("data-theme", this.calendar.options.options.theme);
        this.popperInstance = createPopper(virtualElement, this.root, this.popperOptions);
        if (!this.listenerAttached) {
          event.on("mouseover", this.mouseOverCallback, this);
          event.on("mouseout", this.mouseOutCallback, this);
          this.listenerAttached = true;
        }
      }
    }, {
      key: "mouseOverCallback",
      value: function mouseOverCallback(e, timestamp, value) {
        __classPrivateFieldGet3(this, _Tooltip_instances, "m", _Tooltip_show).call(this, e.target, timestamp, value);
      }
    }, {
      key: "mouseOutCallback",
      value: function mouseOutCallback() {
        __classPrivateFieldGet3(this, _Tooltip_instances, "m", _Tooltip_hide).call(this);
      }
      // eslint-disable-next-line class-methods-use-this
    }, {
      key: "paint",
      value: function paint() {
        return Promise.resolve();
      }
    }, {
      key: "destroy",
      value: function destroy() {
        if (this.root) {
          this.root.remove();
        }
        return Promise.resolve();
      }
    }]);
    return Tooltip2;
  })();
  _Tooltip_instances = /* @__PURE__ */ new WeakSet(), _Tooltip_show = function _Tooltip_show2(e, timestamp, value) {
    var _this = this;
    var formatter = this.options.text;
    var title = formatter ? formatter(timestamp, value, this.calendar.dateHelper.date(timestamp)) : null;
    if (!title) {
      return;
    }
    virtualElement.getBoundingClientRect = function() {
      return e.getBoundingClientRect();
    };
    document.getElementById("".concat(DEFAULT_SELECTOR3.slice(1), "-body")).innerHTML = title;
    this.popperInstance.setOptions(function() {
      return Object.assign(Object.assign({}, _this.popperOptions), {
        modifiers: [].concat(_toConsumableArray3(_this.popperOptions.modifiers), [{
          name: "eventListeners",
          enabled: true
        }])
      });
    });
    this.popperInstance.update();
    this.root.setAttribute("data-show", "1");
  }, _Tooltip_hide = function _Tooltip_hide2() {
    var _this2 = this;
    this.root.removeAttribute("data-show");
    this.popperInstance.setOptions(function() {
      return Object.assign(Object.assign({}, _this2.popperOptions), {
        modifiers: [].concat(_toConsumableArray3(_this2.popperOptions.modifiers), [{
          name: "eventListeners",
          enabled: false
        }])
      });
    });
  };

  // node_modules/cal-heatmap/dist/plugins/CalendarLabel.esm.js
  function _classCallCheck4(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _defineProperties4(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey4(descriptor.key), descriptor);
    }
  }
  function _createClass4(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties4(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties4(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
      writable: false
    });
    return Constructor;
  }
  function _toPrimitive4(input, hint) {
    if (typeof input !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== void 0) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
  function _toPropertyKey4(arg) {
    var key = _toPrimitive4(arg, "string");
    return typeof key === "symbol" ? key : String(key);
  }
  var commonjsGlobal4 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
  var fails$j4 = function(exec5) {
    try {
      return !!exec5();
    } catch (error) {
      return true;
    }
  };
  var fails$i4 = fails$j4;
  var descriptors4 = !fails$i4(function() {
    return Object.defineProperty({}, 1, { get: function() {
      return 7;
    } })[1] !== 7;
  });
  var fails$h4 = fails$j4;
  var functionBindNative4 = !fails$h4(function() {
    var test5 = (function() {
    }).bind();
    return typeof test5 != "function" || test5.hasOwnProperty("prototype");
  });
  var NATIVE_BIND$34 = functionBindNative4;
  var FunctionPrototype$34 = Function.prototype;
  var call$e4 = FunctionPrototype$34.call;
  var uncurryThisWithBind4 = NATIVE_BIND$34 && FunctionPrototype$34.bind.bind(call$e4, call$e4);
  var functionUncurryThis4 = NATIVE_BIND$34 ? uncurryThisWithBind4 : function(fn2) {
    return function() {
      return call$e4.apply(fn2, arguments);
    };
  };
  var isNullOrUndefined$64 = function(it) {
    return it === null || it === void 0;
  };
  var isNullOrUndefined$54 = isNullOrUndefined$64;
  var $TypeError$c4 = TypeError;
  var requireObjectCoercible$34 = function(it) {
    if (isNullOrUndefined$54(it)) throw new $TypeError$c4("Can't call method on " + it);
    return it;
  };
  var requireObjectCoercible$24 = requireObjectCoercible$34;
  var $Object$44 = Object;
  var toObject$54 = function(argument) {
    return $Object$44(requireObjectCoercible$24(argument));
  };
  var uncurryThis$l3 = functionUncurryThis4;
  var toObject$44 = toObject$54;
  var hasOwnProperty4 = uncurryThis$l3({}.hasOwnProperty);
  var hasOwnProperty_14 = Object.hasOwn || function hasOwn7(it, key) {
    return hasOwnProperty4(toObject$44(it), key);
  };
  var DESCRIPTORS$b4 = descriptors4;
  var hasOwn$b4 = hasOwnProperty_14;
  var FunctionPrototype$24 = Function.prototype;
  var getDescriptor4 = DESCRIPTORS$b4 && Object.getOwnPropertyDescriptor;
  var EXISTS$14 = hasOwn$b4(FunctionPrototype$24, "name");
  var PROPER4 = EXISTS$14 && (function something4() {
  }).name === "something";
  var CONFIGURABLE$14 = EXISTS$14 && (!DESCRIPTORS$b4 || DESCRIPTORS$b4 && getDescriptor4(FunctionPrototype$24, "name").configurable);
  var functionName4 = {
    EXISTS: EXISTS$14,
    PROPER: PROPER4,
    CONFIGURABLE: CONFIGURABLE$14
  };
  var makeBuiltIn$34 = { exports: {} };
  var documentAll$24 = typeof document == "object" && document.all;
  var IS_HTMLDDA4 = typeof documentAll$24 == "undefined" && documentAll$24 !== void 0;
  var documentAll_14 = {
    all: documentAll$24,
    IS_HTMLDDA: IS_HTMLDDA4
  };
  var $documentAll$14 = documentAll_14;
  var documentAll$14 = $documentAll$14.all;
  var isCallable$m4 = $documentAll$14.IS_HTMLDDA ? function(argument) {
    return typeof argument == "function" || argument === documentAll$14;
  } : function(argument) {
    return typeof argument == "function";
  };
  var check4 = function(it) {
    return it && it.Math === Math && it;
  };
  var global$k3 = (
    // eslint-disable-next-line es/no-global-this -- safe
    check4(typeof globalThis == "object" && globalThis) || check4(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
    check4(typeof self == "object" && self) || check4(typeof commonjsGlobal4 == "object" && commonjsGlobal4) || check4(typeof commonjsGlobal4 == "object" && commonjsGlobal4) || // eslint-disable-next-line no-new-func -- fallback
    /* @__PURE__ */ (function() {
      return this;
    })() || Function("return this")()
  );
  var global$j4 = global$k3;
  var defineProperty$74 = Object.defineProperty;
  var defineGlobalProperty$34 = function(key, value) {
    try {
      defineProperty$74(global$j4, key, { value, configurable: true, writable: true });
    } catch (error) {
      global$j4[key] = value;
    }
    return value;
  };
  var global$i4 = global$k3;
  var defineGlobalProperty$24 = defineGlobalProperty$34;
  var SHARED4 = "__core-js_shared__";
  var store$34 = global$i4[SHARED4] || defineGlobalProperty$24(SHARED4, {});
  var sharedStore4 = store$34;
  var uncurryThis$k4 = functionUncurryThis4;
  var isCallable$l4 = isCallable$m4;
  var store$24 = sharedStore4;
  var functionToString$14 = uncurryThis$k4(Function.toString);
  if (!isCallable$l4(store$24.inspectSource)) {
    store$24.inspectSource = function(it) {
      return functionToString$14(it);
    };
  }
  var inspectSource$34 = store$24.inspectSource;
  var global$h4 = global$k3;
  var isCallable$k4 = isCallable$m4;
  var WeakMap$14 = global$h4.WeakMap;
  var weakMapBasicDetection4 = isCallable$k4(WeakMap$14) && /native code/.test(String(WeakMap$14));
  var isCallable$j4 = isCallable$m4;
  var $documentAll4 = documentAll_14;
  var documentAll4 = $documentAll4.all;
  var isObject$e4 = $documentAll4.IS_HTMLDDA ? function(it) {
    return typeof it == "object" ? it !== null : isCallable$j4(it) || it === documentAll4;
  } : function(it) {
    return typeof it == "object" ? it !== null : isCallable$j4(it);
  };
  var objectDefineProperty4 = {};
  var global$g4 = global$k3;
  var isObject$d4 = isObject$e4;
  var document$34 = global$g4.document;
  var EXISTS4 = isObject$d4(document$34) && isObject$d4(document$34.createElement);
  var documentCreateElement$24 = function(it) {
    return EXISTS4 ? document$34.createElement(it) : {};
  };
  var DESCRIPTORS$a4 = descriptors4;
  var fails$g4 = fails$j4;
  var createElement$14 = documentCreateElement$24;
  var ie8DomDefine4 = !DESCRIPTORS$a4 && !fails$g4(function() {
    return Object.defineProperty(createElement$14("div"), "a", {
      get: function() {
        return 7;
      }
    }).a !== 7;
  });
  var DESCRIPTORS$94 = descriptors4;
  var fails$f4 = fails$j4;
  var v8PrototypeDefineBug4 = DESCRIPTORS$94 && fails$f4(function() {
    return Object.defineProperty(function() {
    }, "prototype", {
      value: 42,
      writable: false
    }).prototype !== 42;
  });
  var isObject$c4 = isObject$e4;
  var $String$54 = String;
  var $TypeError$b4 = TypeError;
  var anObject$b4 = function(argument) {
    if (isObject$c4(argument)) return argument;
    throw new $TypeError$b4($String$54(argument) + " is not an object");
  };
  var NATIVE_BIND$24 = functionBindNative4;
  var call$d4 = Function.prototype.call;
  var functionCall4 = NATIVE_BIND$24 ? call$d4.bind(call$d4) : function() {
    return call$d4.apply(call$d4, arguments);
  };
  var global$f4 = global$k3;
  var isCallable$i4 = isCallable$m4;
  var aFunction4 = function(argument) {
    return isCallable$i4(argument) ? argument : void 0;
  };
  var getBuiltIn$74 = function(namespace, method) {
    return arguments.length < 2 ? aFunction4(global$f4[namespace]) : global$f4[namespace] && global$f4[namespace][method];
  };
  var uncurryThis$j4 = functionUncurryThis4;
  var objectIsPrototypeOf4 = uncurryThis$j4({}.isPrototypeOf);
  var engineUserAgent4 = typeof navigator != "undefined" && String(navigator.userAgent) || "";
  var global$e4 = global$k3;
  var userAgent$34 = engineUserAgent4;
  var process$34 = global$e4.process;
  var Deno$14 = global$e4.Deno;
  var versions4 = process$34 && process$34.versions || Deno$14 && Deno$14.version;
  var v84 = versions4 && versions4.v8;
  var match4;
  var version4;
  if (v84) {
    match4 = v84.split(".");
    version4 = match4[0] > 0 && match4[0] < 4 ? 1 : +(match4[0] + match4[1]);
  }
  if (!version4 && userAgent$34) {
    match4 = userAgent$34.match(/Edge\/(\d+)/);
    if (!match4 || match4[1] >= 74) {
      match4 = userAgent$34.match(/Chrome\/(\d+)/);
      if (match4) version4 = +match4[1];
    }
  }
  var engineV8Version4 = version4;
  var V8_VERSION$14 = engineV8Version4;
  var fails$e4 = fails$j4;
  var global$d4 = global$k3;
  var $String$44 = global$d4.String;
  var symbolConstructorDetection4 = !!Object.getOwnPropertySymbols && !fails$e4(function() {
    var symbol3 = Symbol("symbol detection");
    return !$String$44(symbol3) || !(Object(symbol3) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION$14 && V8_VERSION$14 < 41;
  });
  var NATIVE_SYMBOL$14 = symbolConstructorDetection4;
  var useSymbolAsUid4 = NATIVE_SYMBOL$14 && !Symbol.sham && typeof Symbol.iterator == "symbol";
  var getBuiltIn$64 = getBuiltIn$74;
  var isCallable$h4 = isCallable$m4;
  var isPrototypeOf$24 = objectIsPrototypeOf4;
  var USE_SYMBOL_AS_UID$14 = useSymbolAsUid4;
  var $Object$34 = Object;
  var isSymbol$24 = USE_SYMBOL_AS_UID$14 ? function(it) {
    return typeof it == "symbol";
  } : function(it) {
    var $Symbol = getBuiltIn$64("Symbol");
    return isCallable$h4($Symbol) && isPrototypeOf$24($Symbol.prototype, $Object$34(it));
  };
  var $String$34 = String;
  var tryToString$44 = function(argument) {
    try {
      return $String$34(argument);
    } catch (error) {
      return "Object";
    }
  };
  var isCallable$g4 = isCallable$m4;
  var tryToString$34 = tryToString$44;
  var $TypeError$a4 = TypeError;
  var aCallable$84 = function(argument) {
    if (isCallable$g4(argument)) return argument;
    throw new $TypeError$a4(tryToString$34(argument) + " is not a function");
  };
  var aCallable$74 = aCallable$84;
  var isNullOrUndefined$44 = isNullOrUndefined$64;
  var getMethod$34 = function(V, P) {
    var func = V[P];
    return isNullOrUndefined$44(func) ? void 0 : aCallable$74(func);
  };
  var call$c4 = functionCall4;
  var isCallable$f4 = isCallable$m4;
  var isObject$b4 = isObject$e4;
  var $TypeError$94 = TypeError;
  var ordinaryToPrimitive$14 = function(input, pref) {
    var fn2, val;
    if (pref === "string" && isCallable$f4(fn2 = input.toString) && !isObject$b4(val = call$c4(fn2, input))) return val;
    if (isCallable$f4(fn2 = input.valueOf) && !isObject$b4(val = call$c4(fn2, input))) return val;
    if (pref !== "string" && isCallable$f4(fn2 = input.toString) && !isObject$b4(val = call$c4(fn2, input))) return val;
    throw new $TypeError$94("Can't convert object to primitive value");
  };
  var shared$34 = { exports: {} };
  var store$14 = sharedStore4;
  (shared$34.exports = function(key, value) {
    return store$14[key] || (store$14[key] = value !== void 0 ? value : {});
  })("versions", []).push({
    version: "3.34.0",
    mode: "global",
    copyright: "\xA9 2014-2023 Denis Pushkarev (zloirock.ru)",
    license: "https://github.com/zloirock/core-js/blob/v3.34.0/LICENSE",
    source: "https://github.com/zloirock/core-js"
  });
  var sharedExports4 = shared$34.exports;
  var uncurryThis$i4 = functionUncurryThis4;
  var id$24 = 0;
  var postfix4 = Math.random();
  var toString$54 = uncurryThis$i4(1 .toString);
  var uid$34 = function(key) {
    return "Symbol(" + (key === void 0 ? "" : key) + ")_" + toString$54(++id$24 + postfix4, 36);
  };
  var global$c4 = global$k3;
  var shared$24 = sharedExports4;
  var hasOwn$a4 = hasOwnProperty_14;
  var uid$24 = uid$34;
  var NATIVE_SYMBOL4 = symbolConstructorDetection4;
  var USE_SYMBOL_AS_UID4 = useSymbolAsUid4;
  var Symbol$14 = global$c4.Symbol;
  var WellKnownSymbolsStore4 = shared$24("wks");
  var createWellKnownSymbol4 = USE_SYMBOL_AS_UID4 ? Symbol$14["for"] || Symbol$14 : Symbol$14 && Symbol$14.withoutSetter || uid$24;
  var wellKnownSymbol$f4 = function(name) {
    if (!hasOwn$a4(WellKnownSymbolsStore4, name)) {
      WellKnownSymbolsStore4[name] = NATIVE_SYMBOL4 && hasOwn$a4(Symbol$14, name) ? Symbol$14[name] : createWellKnownSymbol4("Symbol." + name);
    }
    return WellKnownSymbolsStore4[name];
  };
  var call$b4 = functionCall4;
  var isObject$a4 = isObject$e4;
  var isSymbol$14 = isSymbol$24;
  var getMethod$24 = getMethod$34;
  var ordinaryToPrimitive4 = ordinaryToPrimitive$14;
  var wellKnownSymbol$e4 = wellKnownSymbol$f4;
  var $TypeError$84 = TypeError;
  var TO_PRIMITIVE4 = wellKnownSymbol$e4("toPrimitive");
  var toPrimitive$14 = function(input, pref) {
    if (!isObject$a4(input) || isSymbol$14(input)) return input;
    var exoticToPrim = getMethod$24(input, TO_PRIMITIVE4);
    var result;
    if (exoticToPrim) {
      if (pref === void 0) pref = "default";
      result = call$b4(exoticToPrim, input, pref);
      if (!isObject$a4(result) || isSymbol$14(result)) return result;
      throw new $TypeError$84("Can't convert object to primitive value");
    }
    if (pref === void 0) pref = "number";
    return ordinaryToPrimitive4(input, pref);
  };
  var toPrimitive4 = toPrimitive$14;
  var isSymbol4 = isSymbol$24;
  var toPropertyKey$34 = function(argument) {
    var key = toPrimitive4(argument, "string");
    return isSymbol4(key) ? key : key + "";
  };
  var DESCRIPTORS$84 = descriptors4;
  var IE8_DOM_DEFINE$14 = ie8DomDefine4;
  var V8_PROTOTYPE_DEFINE_BUG$14 = v8PrototypeDefineBug4;
  var anObject$a4 = anObject$b4;
  var toPropertyKey$24 = toPropertyKey$34;
  var $TypeError$74 = TypeError;
  var $defineProperty4 = Object.defineProperty;
  var $getOwnPropertyDescriptor$14 = Object.getOwnPropertyDescriptor;
  var ENUMERABLE4 = "enumerable";
  var CONFIGURABLE4 = "configurable";
  var WRITABLE4 = "writable";
  objectDefineProperty4.f = DESCRIPTORS$84 ? V8_PROTOTYPE_DEFINE_BUG$14 ? function defineProperty10(O, P, Attributes) {
    anObject$a4(O);
    P = toPropertyKey$24(P);
    anObject$a4(Attributes);
    if (typeof O === "function" && P === "prototype" && "value" in Attributes && WRITABLE4 in Attributes && !Attributes[WRITABLE4]) {
      var current = $getOwnPropertyDescriptor$14(O, P);
      if (current && current[WRITABLE4]) {
        O[P] = Attributes.value;
        Attributes = {
          configurable: CONFIGURABLE4 in Attributes ? Attributes[CONFIGURABLE4] : current[CONFIGURABLE4],
          enumerable: ENUMERABLE4 in Attributes ? Attributes[ENUMERABLE4] : current[ENUMERABLE4],
          writable: false
        };
      }
    }
    return $defineProperty4(O, P, Attributes);
  } : $defineProperty4 : function defineProperty11(O, P, Attributes) {
    anObject$a4(O);
    P = toPropertyKey$24(P);
    anObject$a4(Attributes);
    if (IE8_DOM_DEFINE$14) try {
      return $defineProperty4(O, P, Attributes);
    } catch (error) {
    }
    if ("get" in Attributes || "set" in Attributes) throw new $TypeError$74("Accessors not supported");
    if ("value" in Attributes) O[P] = Attributes.value;
    return O;
  };
  var createPropertyDescriptor$44 = function(bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value
    };
  };
  var DESCRIPTORS$74 = descriptors4;
  var definePropertyModule$44 = objectDefineProperty4;
  var createPropertyDescriptor$34 = createPropertyDescriptor$44;
  var createNonEnumerableProperty$53 = DESCRIPTORS$74 ? function(object, key, value) {
    return definePropertyModule$44.f(object, key, createPropertyDescriptor$34(1, value));
  } : function(object, key, value) {
    object[key] = value;
    return object;
  };
  var shared$14 = sharedExports4;
  var uid$14 = uid$34;
  var keys9 = shared$14("keys");
  var sharedKey$34 = function(key) {
    return keys9[key] || (keys9[key] = uid$14(key));
  };
  var hiddenKeys$54 = {};
  var NATIVE_WEAK_MAP4 = weakMapBasicDetection4;
  var global$b4 = global$k3;
  var isObject$94 = isObject$e4;
  var createNonEnumerableProperty$44 = createNonEnumerableProperty$53;
  var hasOwn$94 = hasOwnProperty_14;
  var shared4 = sharedStore4;
  var sharedKey$24 = sharedKey$34;
  var hiddenKeys$44 = hiddenKeys$54;
  var OBJECT_ALREADY_INITIALIZED4 = "Object already initialized";
  var TypeError$24 = global$b4.TypeError;
  var WeakMap4 = global$b4.WeakMap;
  var set$14;
  var get6;
  var has4;
  var enforce4 = function(it) {
    return has4(it) ? get6(it) : set$14(it, {});
  };
  var getterFor4 = function(TYPE) {
    return function(it) {
      var state;
      if (!isObject$94(it) || (state = get6(it)).type !== TYPE) {
        throw new TypeError$24("Incompatible receiver, " + TYPE + " required");
      }
      return state;
    };
  };
  if (NATIVE_WEAK_MAP4 || shared4.state) {
    store = shared4.state || (shared4.state = new WeakMap4());
    store.get = store.get;
    store.has = store.has;
    store.set = store.set;
    set$14 = function(it, metadata) {
      if (store.has(it)) throw new TypeError$24(OBJECT_ALREADY_INITIALIZED4);
      metadata.facade = it;
      store.set(it, metadata);
      return metadata;
    };
    get6 = function(it) {
      return store.get(it) || {};
    };
    has4 = function(it) {
      return store.has(it);
    };
  } else {
    STATE = sharedKey$24("state");
    hiddenKeys$44[STATE] = true;
    set$14 = function(it, metadata) {
      if (hasOwn$94(it, STATE)) throw new TypeError$24(OBJECT_ALREADY_INITIALIZED4);
      metadata.facade = it;
      createNonEnumerableProperty$44(it, STATE, metadata);
      return metadata;
    };
    get6 = function(it) {
      return hasOwn$94(it, STATE) ? it[STATE] : {};
    };
    has4 = function(it) {
      return hasOwn$94(it, STATE);
    };
  }
  var store;
  var STATE;
  var internalState4 = {
    set: set$14,
    get: get6,
    has: has4,
    enforce: enforce4,
    getterFor: getterFor4
  };
  var uncurryThis$h4 = functionUncurryThis4;
  var fails$d4 = fails$j4;
  var isCallable$e4 = isCallable$m4;
  var hasOwn$84 = hasOwnProperty_14;
  var DESCRIPTORS$64 = descriptors4;
  var CONFIGURABLE_FUNCTION_NAME$14 = functionName4.CONFIGURABLE;
  var inspectSource$24 = inspectSource$34;
  var InternalStateModule$44 = internalState4;
  var enforceInternalState4 = InternalStateModule$44.enforce;
  var getInternalState$24 = InternalStateModule$44.get;
  var $String$24 = String;
  var defineProperty$64 = Object.defineProperty;
  var stringSlice$24 = uncurryThis$h4("".slice);
  var replace4 = uncurryThis$h4("".replace);
  var join6 = uncurryThis$h4([].join);
  var CONFIGURABLE_LENGTH4 = DESCRIPTORS$64 && !fails$d4(function() {
    return defineProperty$64(function() {
    }, "length", { value: 8 }).length !== 8;
  });
  var TEMPLATE4 = String(String).split("String");
  var makeBuiltIn$24 = makeBuiltIn$34.exports = function(value, name, options) {
    if (stringSlice$24($String$24(name), 0, 7) === "Symbol(") {
      name = "[" + replace4($String$24(name), /^Symbol\(([^)]*)\)/, "$1") + "]";
    }
    if (options && options.getter) name = "get " + name;
    if (options && options.setter) name = "set " + name;
    if (!hasOwn$84(value, "name") || CONFIGURABLE_FUNCTION_NAME$14 && value.name !== name) {
      if (DESCRIPTORS$64) defineProperty$64(value, "name", { value: name, configurable: true });
      else value.name = name;
    }
    if (CONFIGURABLE_LENGTH4 && options && hasOwn$84(options, "arity") && value.length !== options.arity) {
      defineProperty$64(value, "length", { value: options.arity });
    }
    try {
      if (options && hasOwn$84(options, "constructor") && options.constructor) {
        if (DESCRIPTORS$64) defineProperty$64(value, "prototype", { writable: false });
      } else if (value.prototype) value.prototype = void 0;
    } catch (error) {
    }
    var state = enforceInternalState4(value);
    if (!hasOwn$84(state, "source")) {
      state.source = join6(TEMPLATE4, typeof name == "string" ? name : "");
    }
    return value;
  };
  Function.prototype.toString = makeBuiltIn$24(function toString10() {
    return isCallable$e4(this) && getInternalState$24(this).source || inspectSource$24(this);
  }, "toString");
  var makeBuiltInExports4 = makeBuiltIn$34.exports;
  var makeBuiltIn$14 = makeBuiltInExports4;
  var defineProperty$54 = objectDefineProperty4;
  var defineBuiltInAccessor$24 = function(target, name, descriptor) {
    if (descriptor.get) makeBuiltIn$14(descriptor.get, name, { getter: true });
    if (descriptor.set) makeBuiltIn$14(descriptor.set, name, { setter: true });
    return defineProperty$54.f(target, name, descriptor);
  };
  var DESCRIPTORS$54 = descriptors4;
  var FUNCTION_NAME_EXISTS4 = functionName4.EXISTS;
  var uncurryThis$g4 = functionUncurryThis4;
  var defineBuiltInAccessor$14 = defineBuiltInAccessor$24;
  var FunctionPrototype$14 = Function.prototype;
  var functionToString4 = uncurryThis$g4(FunctionPrototype$14.toString);
  var nameRE4 = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;
  var regExpExec4 = uncurryThis$g4(nameRE4.exec);
  var NAME4 = "name";
  if (DESCRIPTORS$54 && !FUNCTION_NAME_EXISTS4) {
    defineBuiltInAccessor$14(FunctionPrototype$14, NAME4, {
      configurable: true,
      get: function() {
        try {
          return regExpExec4(nameRE4, functionToString4(this))[1];
        } catch (error) {
          return "";
        }
      }
    });
  }
  var objectGetOwnPropertyDescriptor4 = {};
  var objectPropertyIsEnumerable4 = {};
  var $propertyIsEnumerable4 = {}.propertyIsEnumerable;
  var getOwnPropertyDescriptor$24 = Object.getOwnPropertyDescriptor;
  var NASHORN_BUG4 = getOwnPropertyDescriptor$24 && !$propertyIsEnumerable4.call({ 1: 2 }, 1);
  objectPropertyIsEnumerable4.f = NASHORN_BUG4 ? function propertyIsEnumerable6(V) {
    var descriptor = getOwnPropertyDescriptor$24(this, V);
    return !!descriptor && descriptor.enumerable;
  } : $propertyIsEnumerable4;
  var uncurryThis$f4 = functionUncurryThis4;
  var toString$44 = uncurryThis$f4({}.toString);
  var stringSlice$14 = uncurryThis$f4("".slice);
  var classofRaw$24 = function(it) {
    return stringSlice$14(toString$44(it), 8, -1);
  };
  var uncurryThis$e4 = functionUncurryThis4;
  var fails$c4 = fails$j4;
  var classof$94 = classofRaw$24;
  var $Object$24 = Object;
  var split4 = uncurryThis$e4("".split);
  var indexedObject4 = fails$c4(function() {
    return !$Object$24("z").propertyIsEnumerable(0);
  }) ? function(it) {
    return classof$94(it) === "String" ? split4(it, "") : $Object$24(it);
  } : $Object$24;
  var IndexedObject$33 = indexedObject4;
  var requireObjectCoercible$14 = requireObjectCoercible$34;
  var toIndexedObject$73 = function(it) {
    return IndexedObject$33(requireObjectCoercible$14(it));
  };
  var DESCRIPTORS$44 = descriptors4;
  var call$a4 = functionCall4;
  var propertyIsEnumerableModule$14 = objectPropertyIsEnumerable4;
  var createPropertyDescriptor$24 = createPropertyDescriptor$44;
  var toIndexedObject$64 = toIndexedObject$73;
  var toPropertyKey$14 = toPropertyKey$34;
  var hasOwn$74 = hasOwnProperty_14;
  var IE8_DOM_DEFINE4 = ie8DomDefine4;
  var $getOwnPropertyDescriptor4 = Object.getOwnPropertyDescriptor;
  objectGetOwnPropertyDescriptor4.f = DESCRIPTORS$44 ? $getOwnPropertyDescriptor4 : function getOwnPropertyDescriptor7(O, P) {
    O = toIndexedObject$64(O);
    P = toPropertyKey$14(P);
    if (IE8_DOM_DEFINE4) try {
      return $getOwnPropertyDescriptor4(O, P);
    } catch (error) {
    }
    if (hasOwn$74(O, P)) return createPropertyDescriptor$24(!call$a4(propertyIsEnumerableModule$14.f, O, P), O[P]);
  };
  var isCallable$d4 = isCallable$m4;
  var definePropertyModule$34 = objectDefineProperty4;
  var makeBuiltIn4 = makeBuiltInExports4;
  var defineGlobalProperty$14 = defineGlobalProperty$34;
  var defineBuiltIn$84 = function(O, key, value, options) {
    if (!options) options = {};
    var simple = options.enumerable;
    var name = options.name !== void 0 ? options.name : key;
    if (isCallable$d4(value)) makeBuiltIn4(value, name, options);
    if (options.global) {
      if (simple) O[key] = value;
      else defineGlobalProperty$14(key, value);
    } else {
      try {
        if (!options.unsafe) delete O[key];
        else if (O[key]) simple = true;
      } catch (error) {
      }
      if (simple) O[key] = value;
      else definePropertyModule$34.f(O, key, {
        value,
        enumerable: false,
        configurable: !options.nonConfigurable,
        writable: !options.nonWritable
      });
    }
    return O;
  };
  var objectGetOwnPropertyNames4 = {};
  var ceil4 = Math.ceil;
  var floor4 = Math.floor;
  var mathTrunc4 = Math.trunc || function trunc7(x) {
    var n = +x;
    return (n > 0 ? floor4 : ceil4)(n);
  };
  var trunc8 = mathTrunc4;
  var toIntegerOrInfinity$34 = function(argument) {
    var number5 = +argument;
    return number5 !== number5 || number5 === 0 ? 0 : trunc8(number5);
  };
  var toIntegerOrInfinity$24 = toIntegerOrInfinity$34;
  var max$14 = Math.max;
  var min$14 = Math.min;
  var toAbsoluteIndex$24 = function(index, length3) {
    var integer = toIntegerOrInfinity$24(index);
    return integer < 0 ? max$14(integer + length3, 0) : min$14(integer, length3);
  };
  var toIntegerOrInfinity$14 = toIntegerOrInfinity$34;
  var min8 = Math.min;
  var toLength$14 = function(argument) {
    return argument > 0 ? min8(toIntegerOrInfinity$14(argument), 9007199254740991) : 0;
  };
  var toLength4 = toLength$14;
  var lengthOfArrayLike$44 = function(obj) {
    return toLength4(obj.length);
  };
  var toIndexedObject$54 = toIndexedObject$73;
  var toAbsoluteIndex$14 = toAbsoluteIndex$24;
  var lengthOfArrayLike$34 = lengthOfArrayLike$44;
  var createMethod$24 = function(IS_INCLUDES) {
    return function($this, el, fromIndex) {
      var O = toIndexedObject$54($this);
      var length3 = lengthOfArrayLike$34(O);
      var index = toAbsoluteIndex$14(fromIndex, length3);
      var value;
      if (IS_INCLUDES && el !== el) while (length3 > index) {
        value = O[index++];
        if (value !== value) return true;
      }
      else for (; length3 > index; index++) {
        if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
      }
      return !IS_INCLUDES && -1;
    };
  };
  var arrayIncludes4 = {
    // `Array.prototype.includes` method
    // https://tc39.es/ecma262/#sec-array.prototype.includes
    includes: createMethod$24(true),
    // `Array.prototype.indexOf` method
    // https://tc39.es/ecma262/#sec-array.prototype.indexof
    indexOf: createMethod$24(false)
  };
  var uncurryThis$d4 = functionUncurryThis4;
  var hasOwn$64 = hasOwnProperty_14;
  var toIndexedObject$44 = toIndexedObject$73;
  var indexOf4 = arrayIncludes4.indexOf;
  var hiddenKeys$34 = hiddenKeys$54;
  var push$14 = uncurryThis$d4([].push);
  var objectKeysInternal4 = function(object, names) {
    var O = toIndexedObject$44(object);
    var i = 0;
    var result = [];
    var key;
    for (key in O) !hasOwn$64(hiddenKeys$34, key) && hasOwn$64(O, key) && push$14(result, key);
    while (names.length > i) if (hasOwn$64(O, key = names[i++])) {
      ~indexOf4(result, key) || push$14(result, key);
    }
    return result;
  };
  var enumBugKeys$34 = [
    "constructor",
    "hasOwnProperty",
    "isPrototypeOf",
    "propertyIsEnumerable",
    "toLocaleString",
    "toString",
    "valueOf"
  ];
  var internalObjectKeys$14 = objectKeysInternal4;
  var enumBugKeys$24 = enumBugKeys$34;
  var hiddenKeys$24 = enumBugKeys$24.concat("length", "prototype");
  objectGetOwnPropertyNames4.f = Object.getOwnPropertyNames || function getOwnPropertyNames7(O) {
    return internalObjectKeys$14(O, hiddenKeys$24);
  };
  var objectGetOwnPropertySymbols4 = {};
  objectGetOwnPropertySymbols4.f = Object.getOwnPropertySymbols;
  var getBuiltIn$54 = getBuiltIn$74;
  var uncurryThis$c4 = functionUncurryThis4;
  var getOwnPropertyNamesModule$14 = objectGetOwnPropertyNames4;
  var getOwnPropertySymbolsModule$14 = objectGetOwnPropertySymbols4;
  var anObject$94 = anObject$b4;
  var concat$14 = uncurryThis$c4([].concat);
  var ownKeys$14 = getBuiltIn$54("Reflect", "ownKeys") || function ownKeys7(it) {
    var keys12 = getOwnPropertyNamesModule$14.f(anObject$94(it));
    var getOwnPropertySymbols = getOwnPropertySymbolsModule$14.f;
    return getOwnPropertySymbols ? concat$14(keys12, getOwnPropertySymbols(it)) : keys12;
  };
  var hasOwn$54 = hasOwnProperty_14;
  var ownKeys8 = ownKeys$14;
  var getOwnPropertyDescriptorModule4 = objectGetOwnPropertyDescriptor4;
  var definePropertyModule$24 = objectDefineProperty4;
  var copyConstructorProperties$14 = function(target, source, exceptions) {
    var keys12 = ownKeys8(source);
    var defineProperty13 = definePropertyModule$24.f;
    var getOwnPropertyDescriptor9 = getOwnPropertyDescriptorModule4.f;
    for (var i = 0; i < keys12.length; i++) {
      var key = keys12[i];
      if (!hasOwn$54(target, key) && !(exceptions && hasOwn$54(exceptions, key))) {
        defineProperty13(target, key, getOwnPropertyDescriptor9(source, key));
      }
    }
  };
  var fails$b4 = fails$j4;
  var isCallable$c4 = isCallable$m4;
  var replacement4 = /#|\.prototype\./;
  var isForced$34 = function(feature, detection) {
    var value = data5[normalize5(feature)];
    return value === POLYFILL4 ? true : value === NATIVE4 ? false : isCallable$c4(detection) ? fails$b4(detection) : !!detection;
  };
  var normalize5 = isForced$34.normalize = function(string) {
    return String(string).replace(replacement4, ".").toLowerCase();
  };
  var data5 = isForced$34.data = {};
  var NATIVE4 = isForced$34.NATIVE = "N";
  var POLYFILL4 = isForced$34.POLYFILL = "P";
  var isForced_14 = isForced$34;
  var global$a4 = global$k3;
  var getOwnPropertyDescriptor$14 = objectGetOwnPropertyDescriptor4.f;
  var createNonEnumerableProperty$34 = createNonEnumerableProperty$53;
  var defineBuiltIn$74 = defineBuiltIn$84;
  var defineGlobalProperty4 = defineGlobalProperty$34;
  var copyConstructorProperties4 = copyConstructorProperties$14;
  var isForced$24 = isForced_14;
  var _export4 = function(options, source) {
    var TARGET = options.target;
    var GLOBAL = options.global;
    var STATIC = options.stat;
    var FORCED5, target, key, targetProperty, sourceProperty, descriptor;
    if (GLOBAL) {
      target = global$a4;
    } else if (STATIC) {
      target = global$a4[TARGET] || defineGlobalProperty4(TARGET, {});
    } else {
      target = (global$a4[TARGET] || {}).prototype;
    }
    if (target) for (key in source) {
      sourceProperty = source[key];
      if (options.dontCallGetSet) {
        descriptor = getOwnPropertyDescriptor$14(target, key);
        targetProperty = descriptor && descriptor.value;
      } else targetProperty = target[key];
      FORCED5 = isForced$24(GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key, options.forced);
      if (!FORCED5 && targetProperty !== void 0) {
        if (typeof sourceProperty == typeof targetProperty) continue;
        copyConstructorProperties4(sourceProperty, targetProperty);
      }
      if (options.sham || targetProperty && targetProperty.sham) {
        createNonEnumerableProperty$34(sourceProperty, "sham", true);
      }
      defineBuiltIn$74(target, key, sourceProperty, options);
    }
  };
  var internalObjectKeys4 = objectKeysInternal4;
  var enumBugKeys$14 = enumBugKeys$34;
  var objectKeys$24 = Object.keys || function keys10(O) {
    return internalObjectKeys4(O, enumBugKeys$14);
  };
  var DESCRIPTORS$34 = descriptors4;
  var uncurryThis$b4 = functionUncurryThis4;
  var call$94 = functionCall4;
  var fails$a4 = fails$j4;
  var objectKeys$14 = objectKeys$24;
  var getOwnPropertySymbolsModule4 = objectGetOwnPropertySymbols4;
  var propertyIsEnumerableModule4 = objectPropertyIsEnumerable4;
  var toObject$34 = toObject$54;
  var IndexedObject$24 = indexedObject4;
  var $assign4 = Object.assign;
  var defineProperty$44 = Object.defineProperty;
  var concat7 = uncurryThis$b4([].concat);
  var objectAssign4 = !$assign4 || fails$a4(function() {
    if (DESCRIPTORS$34 && $assign4({ b: 1 }, $assign4(defineProperty$44({}, "a", {
      enumerable: true,
      get: function() {
        defineProperty$44(this, "b", {
          value: 3,
          enumerable: false
        });
      }
    }), { b: 2 })).b !== 1) return true;
    var A2 = {};
    var B2 = {};
    var symbol3 = Symbol("assign detection");
    var alphabet = "abcdefghijklmnopqrst";
    A2[symbol3] = 7;
    alphabet.split("").forEach(function(chr) {
      B2[chr] = chr;
    });
    return $assign4({}, A2)[symbol3] !== 7 || objectKeys$14($assign4({}, B2)).join("") !== alphabet;
  }) ? function assign7(target, source) {
    var T = toObject$34(target);
    var argumentsLength = arguments.length;
    var index = 1;
    var getOwnPropertySymbols = getOwnPropertySymbolsModule4.f;
    var propertyIsEnumerable7 = propertyIsEnumerableModule4.f;
    while (argumentsLength > index) {
      var S = IndexedObject$24(arguments[index++]);
      var keys12 = getOwnPropertySymbols ? concat7(objectKeys$14(S), getOwnPropertySymbols(S)) : objectKeys$14(S);
      var length3 = keys12.length;
      var j = 0;
      var key;
      while (length3 > j) {
        key = keys12[j++];
        if (!DESCRIPTORS$34 || call$94(propertyIsEnumerable7, S, key)) T[key] = S[key];
      }
    }
    return T;
  } : $assign4;
  var $$b3 = _export4;
  var assign8 = objectAssign4;
  $$b3({ target: "Object", stat: true, arity: 2, forced: Object.assign !== assign8 }, {
    assign: assign8
  });
  var wellKnownSymbol$d4 = wellKnownSymbol$f4;
  var TO_STRING_TAG$24 = wellKnownSymbol$d4("toStringTag");
  var test4 = {};
  test4[TO_STRING_TAG$24] = "z";
  var toStringTagSupport4 = String(test4) === "[object z]";
  var TO_STRING_TAG_SUPPORT$24 = toStringTagSupport4;
  var isCallable$b4 = isCallable$m4;
  var classofRaw$14 = classofRaw$24;
  var wellKnownSymbol$c4 = wellKnownSymbol$f4;
  var TO_STRING_TAG$14 = wellKnownSymbol$c4("toStringTag");
  var $Object$14 = Object;
  var CORRECT_ARGUMENTS4 = classofRaw$14(/* @__PURE__ */ (function() {
    return arguments;
  })()) === "Arguments";
  var tryGet4 = function(it, key) {
    try {
      return it[key];
    } catch (error) {
    }
  };
  var classof$84 = TO_STRING_TAG_SUPPORT$24 ? classofRaw$14 : function(it) {
    var O, tag, result;
    return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet4(O = $Object$14(it), TO_STRING_TAG$14)) == "string" ? tag : CORRECT_ARGUMENTS4 ? classofRaw$14(O) : (result = classofRaw$14(O)) === "Object" && isCallable$b4(O.callee) ? "Arguments" : result;
  };
  var TO_STRING_TAG_SUPPORT$14 = toStringTagSupport4;
  var classof$74 = classof$84;
  var objectToString4 = TO_STRING_TAG_SUPPORT$14 ? {}.toString : function toString11() {
    return "[object " + classof$74(this) + "]";
  };
  var TO_STRING_TAG_SUPPORT4 = toStringTagSupport4;
  var defineBuiltIn$64 = defineBuiltIn$84;
  var toString$34 = objectToString4;
  if (!TO_STRING_TAG_SUPPORT4) {
    defineBuiltIn$64(Object.prototype, "toString", toString$34, { unsafe: true });
  }
  var global$94 = global$k3;
  var classof$64 = classofRaw$24;
  var engineIsNode4 = classof$64(global$94.process) === "process";
  var uncurryThis$a4 = functionUncurryThis4;
  var aCallable$64 = aCallable$84;
  var functionUncurryThisAccessor4 = function(object, key, method) {
    try {
      return uncurryThis$a4(aCallable$64(Object.getOwnPropertyDescriptor(object, key)[method]));
    } catch (error) {
    }
  };
  var isCallable$a4 = isCallable$m4;
  var $String$14 = String;
  var $TypeError$64 = TypeError;
  var aPossiblePrototype$14 = function(argument) {
    if (typeof argument == "object" || isCallable$a4(argument)) return argument;
    throw new $TypeError$64("Can't set " + $String$14(argument) + " as a prototype");
  };
  var uncurryThisAccessor4 = functionUncurryThisAccessor4;
  var anObject$84 = anObject$b4;
  var aPossiblePrototype4 = aPossiblePrototype$14;
  var objectSetPrototypeOf4 = Object.setPrototypeOf || ("__proto__" in {} ? (function() {
    var CORRECT_SETTER = false;
    var test5 = {};
    var setter;
    try {
      setter = uncurryThisAccessor4(Object.prototype, "__proto__", "set");
      setter(test5, []);
      CORRECT_SETTER = test5 instanceof Array;
    } catch (error) {
    }
    return function setPrototypeOf5(O, proto) {
      anObject$84(O);
      aPossiblePrototype4(proto);
      if (CORRECT_SETTER) setter(O, proto);
      else O.__proto__ = proto;
      return O;
    };
  })() : void 0);
  var defineProperty$34 = objectDefineProperty4.f;
  var hasOwn$44 = hasOwnProperty_14;
  var wellKnownSymbol$b4 = wellKnownSymbol$f4;
  var TO_STRING_TAG4 = wellKnownSymbol$b4("toStringTag");
  var setToStringTag$54 = function(target, TAG, STATIC) {
    if (target && !STATIC) target = target.prototype;
    if (target && !hasOwn$44(target, TO_STRING_TAG4)) {
      defineProperty$34(target, TO_STRING_TAG4, { configurable: true, value: TAG });
    }
  };
  var getBuiltIn$44 = getBuiltIn$74;
  var defineBuiltInAccessor4 = defineBuiltInAccessor$24;
  var wellKnownSymbol$a4 = wellKnownSymbol$f4;
  var DESCRIPTORS$24 = descriptors4;
  var SPECIES$34 = wellKnownSymbol$a4("species");
  var setSpecies$14 = function(CONSTRUCTOR_NAME) {
    var Constructor = getBuiltIn$44(CONSTRUCTOR_NAME);
    if (DESCRIPTORS$24 && Constructor && !Constructor[SPECIES$34]) {
      defineBuiltInAccessor4(Constructor, SPECIES$34, {
        configurable: true,
        get: function() {
          return this;
        }
      });
    }
  };
  var isPrototypeOf$14 = objectIsPrototypeOf4;
  var $TypeError$54 = TypeError;
  var anInstance$34 = function(it, Prototype) {
    if (isPrototypeOf$14(Prototype, it)) return it;
    throw new $TypeError$54("Incorrect invocation");
  };
  var uncurryThis$94 = functionUncurryThis4;
  var fails$94 = fails$j4;
  var isCallable$94 = isCallable$m4;
  var classof$54 = classof$84;
  var getBuiltIn$34 = getBuiltIn$74;
  var inspectSource$14 = inspectSource$34;
  var noop5 = function() {
  };
  var empty5 = [];
  var construct4 = getBuiltIn$34("Reflect", "construct");
  var constructorRegExp4 = /^\s*(?:class|function)\b/;
  var exec4 = uncurryThis$94(constructorRegExp4.exec);
  var INCORRECT_TO_STRING4 = !constructorRegExp4.test(noop5);
  var isConstructorModern4 = function isConstructor10(argument) {
    if (!isCallable$94(argument)) return false;
    try {
      construct4(noop5, empty5, argument);
      return true;
    } catch (error) {
      return false;
    }
  };
  var isConstructorLegacy4 = function isConstructor11(argument) {
    if (!isCallable$94(argument)) return false;
    switch (classof$54(argument)) {
      case "AsyncFunction":
      case "GeneratorFunction":
      case "AsyncGeneratorFunction":
        return false;
    }
    try {
      return INCORRECT_TO_STRING4 || !!exec4(constructorRegExp4, inspectSource$14(argument));
    } catch (error) {
      return true;
    }
  };
  isConstructorLegacy4.sham = true;
  var isConstructor$24 = !construct4 || fails$94(function() {
    var called;
    return isConstructorModern4(isConstructorModern4.call) || !isConstructorModern4(Object) || !isConstructorModern4(function() {
      called = true;
    }) || called;
  }) ? isConstructorLegacy4 : isConstructorModern4;
  var isConstructor$14 = isConstructor$24;
  var tryToString$24 = tryToString$44;
  var $TypeError$44 = TypeError;
  var aConstructor$14 = function(argument) {
    if (isConstructor$14(argument)) return argument;
    throw new $TypeError$44(tryToString$24(argument) + " is not a constructor");
  };
  var anObject$74 = anObject$b4;
  var aConstructor4 = aConstructor$14;
  var isNullOrUndefined$34 = isNullOrUndefined$64;
  var wellKnownSymbol$94 = wellKnownSymbol$f4;
  var SPECIES$24 = wellKnownSymbol$94("species");
  var speciesConstructor$14 = function(O, defaultConstructor) {
    var C2 = anObject$74(O).constructor;
    var S;
    return C2 === void 0 || isNullOrUndefined$34(S = anObject$74(C2)[SPECIES$24]) ? defaultConstructor : aConstructor4(S);
  };
  var NATIVE_BIND$14 = functionBindNative4;
  var FunctionPrototype4 = Function.prototype;
  var apply$14 = FunctionPrototype4.apply;
  var call$84 = FunctionPrototype4.call;
  var functionApply4 = typeof Reflect == "object" && Reflect.apply || (NATIVE_BIND$14 ? call$84.bind(apply$14) : function() {
    return call$84.apply(apply$14, arguments);
  });
  var classofRaw4 = classofRaw$24;
  var uncurryThis$84 = functionUncurryThis4;
  var functionUncurryThisClause4 = function(fn2) {
    if (classofRaw4(fn2) === "Function") return uncurryThis$84(fn2);
  };
  var uncurryThis$74 = functionUncurryThisClause4;
  var aCallable$54 = aCallable$84;
  var NATIVE_BIND4 = functionBindNative4;
  var bind$54 = uncurryThis$74(uncurryThis$74.bind);
  var functionBindContext4 = function(fn2, that) {
    aCallable$54(fn2);
    return that === void 0 ? fn2 : NATIVE_BIND4 ? bind$54(fn2, that) : function() {
      return fn2.apply(that, arguments);
    };
  };
  var getBuiltIn$24 = getBuiltIn$74;
  var html$24 = getBuiltIn$24("document", "documentElement");
  var uncurryThis$64 = functionUncurryThis4;
  var arraySlice$24 = uncurryThis$64([].slice);
  var $TypeError$34 = TypeError;
  var validateArgumentsLength$14 = function(passed, required) {
    if (passed < required) throw new $TypeError$34("Not enough arguments");
    return passed;
  };
  var userAgent$24 = engineUserAgent4;
  var engineIsIos4 = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$24);
  var global$84 = global$k3;
  var apply4 = functionApply4;
  var bind$44 = functionBindContext4;
  var isCallable$84 = isCallable$m4;
  var hasOwn$34 = hasOwnProperty_14;
  var fails$84 = fails$j4;
  var html$14 = html$24;
  var arraySlice$14 = arraySlice$24;
  var createElement4 = documentCreateElement$24;
  var validateArgumentsLength4 = validateArgumentsLength$14;
  var IS_IOS$14 = engineIsIos4;
  var IS_NODE$34 = engineIsNode4;
  var set6 = global$84.setImmediate;
  var clear4 = global$84.clearImmediate;
  var process$24 = global$84.process;
  var Dispatch5 = global$84.Dispatch;
  var Function$14 = global$84.Function;
  var MessageChannel4 = global$84.MessageChannel;
  var String$14 = global$84.String;
  var counter4 = 0;
  var queue$24 = {};
  var ONREADYSTATECHANGE4 = "onreadystatechange";
  var $location4;
  var defer4;
  var channel4;
  var port4;
  fails$84(function() {
    $location4 = global$84.location;
  });
  var run4 = function(id6) {
    if (hasOwn$34(queue$24, id6)) {
      var fn2 = queue$24[id6];
      delete queue$24[id6];
      fn2();
    }
  };
  var runner4 = function(id6) {
    return function() {
      run4(id6);
    };
  };
  var eventListener4 = function(event) {
    run4(event.data);
  };
  var globalPostMessageDefer4 = function(id6) {
    global$84.postMessage(String$14(id6), $location4.protocol + "//" + $location4.host);
  };
  if (!set6 || !clear4) {
    set6 = function setImmediate(handler) {
      validateArgumentsLength4(arguments.length, 1);
      var fn2 = isCallable$84(handler) ? handler : Function$14(handler);
      var args = arraySlice$14(arguments, 1);
      queue$24[++counter4] = function() {
        apply4(fn2, void 0, args);
      };
      defer4(counter4);
      return counter4;
    };
    clear4 = function clearImmediate(id6) {
      delete queue$24[id6];
    };
    if (IS_NODE$34) {
      defer4 = function(id6) {
        process$24.nextTick(runner4(id6));
      };
    } else if (Dispatch5 && Dispatch5.now) {
      defer4 = function(id6) {
        Dispatch5.now(runner4(id6));
      };
    } else if (MessageChannel4 && !IS_IOS$14) {
      channel4 = new MessageChannel4();
      port4 = channel4.port2;
      channel4.port1.onmessage = eventListener4;
      defer4 = bind$44(port4.postMessage, port4);
    } else if (global$84.addEventListener && isCallable$84(global$84.postMessage) && !global$84.importScripts && $location4 && $location4.protocol !== "file:" && !fails$84(globalPostMessageDefer4)) {
      defer4 = globalPostMessageDefer4;
      global$84.addEventListener("message", eventListener4, false);
    } else if (ONREADYSTATECHANGE4 in createElement4("script")) {
      defer4 = function(id6) {
        html$14.appendChild(createElement4("script"))[ONREADYSTATECHANGE4] = function() {
          html$14.removeChild(this);
          run4(id6);
        };
      };
    } else {
      defer4 = function(id6) {
        setTimeout(runner4(id6), 0);
      };
    }
  }
  var task$14 = {
    set: set6,
    clear: clear4
  };
  var Queue$24 = function() {
    this.head = null;
    this.tail = null;
  };
  Queue$24.prototype = {
    add: function(item) {
      var entry = { item, next: null };
      var tail = this.tail;
      if (tail) tail.next = entry;
      else this.head = entry;
      this.tail = entry;
    },
    get: function() {
      var entry = this.head;
      if (entry) {
        var next5 = this.head = entry.next;
        if (next5 === null) this.tail = null;
        return entry.item;
      }
    }
  };
  var queue$14 = Queue$24;
  var userAgent$14 = engineUserAgent4;
  var engineIsIosPebble4 = /ipad|iphone|ipod/i.test(userAgent$14) && typeof Pebble != "undefined";
  var userAgent4 = engineUserAgent4;
  var engineIsWebosWebkit4 = /web0s(?!.*chrome)/i.test(userAgent4);
  var global$74 = global$k3;
  var bind$34 = functionBindContext4;
  var getOwnPropertyDescriptor8 = objectGetOwnPropertyDescriptor4.f;
  var macrotask4 = task$14.set;
  var Queue$14 = queue$14;
  var IS_IOS4 = engineIsIos4;
  var IS_IOS_PEBBLE4 = engineIsIosPebble4;
  var IS_WEBOS_WEBKIT4 = engineIsWebosWebkit4;
  var IS_NODE$24 = engineIsNode4;
  var MutationObserver4 = global$74.MutationObserver || global$74.WebKitMutationObserver;
  var document$24 = global$74.document;
  var process$14 = global$74.process;
  var Promise$14 = global$74.Promise;
  var queueMicrotaskDescriptor4 = getOwnPropertyDescriptor8(global$74, "queueMicrotask");
  var microtask$14 = queueMicrotaskDescriptor4 && queueMicrotaskDescriptor4.value;
  var notify$14;
  var toggle4;
  var node4;
  var promise4;
  var then4;
  if (!microtask$14) {
    queue = new Queue$14();
    flush = function() {
      var parent, fn2;
      if (IS_NODE$24 && (parent = process$14.domain)) parent.exit();
      while (fn2 = queue.get()) try {
        fn2();
      } catch (error) {
        if (queue.head) notify$14();
        throw error;
      }
      if (parent) parent.enter();
    };
    if (!IS_IOS4 && !IS_NODE$24 && !IS_WEBOS_WEBKIT4 && MutationObserver4 && document$24) {
      toggle4 = true;
      node4 = document$24.createTextNode("");
      new MutationObserver4(flush).observe(node4, { characterData: true });
      notify$14 = function() {
        node4.data = toggle4 = !toggle4;
      };
    } else if (!IS_IOS_PEBBLE4 && Promise$14 && Promise$14.resolve) {
      promise4 = Promise$14.resolve(void 0);
      promise4.constructor = Promise$14;
      then4 = bind$34(promise4.then, promise4);
      notify$14 = function() {
        then4(flush);
      };
    } else if (IS_NODE$24) {
      notify$14 = function() {
        process$14.nextTick(flush);
      };
    } else {
      macrotask4 = bind$34(macrotask4, global$74);
      notify$14 = function() {
        macrotask4(flush);
      };
    }
    microtask$14 = function(fn2) {
      if (!queue.head) notify$14();
      queue.add(fn2);
    };
  }
  var queue;
  var flush;
  var microtask_14 = microtask$14;
  var hostReportErrors$14 = function(a2, b) {
    try {
      arguments.length === 1 ? console.error(a2) : console.error(a2, b);
    } catch (error) {
    }
  };
  var perform$34 = function(exec5) {
    try {
      return { error: false, value: exec5() };
    } catch (error) {
      return { error: true, value: error };
    }
  };
  var global$64 = global$k3;
  var promiseNativeConstructor4 = global$64.Promise;
  var engineIsDeno4 = typeof Deno == "object" && Deno && typeof Deno.version == "object";
  var IS_DENO$14 = engineIsDeno4;
  var IS_NODE$14 = engineIsNode4;
  var engineIsBrowser4 = !IS_DENO$14 && !IS_NODE$14 && typeof window == "object" && typeof document == "object";
  var global$54 = global$k3;
  var NativePromiseConstructor$34 = promiseNativeConstructor4;
  var isCallable$74 = isCallable$m4;
  var isForced$14 = isForced_14;
  var inspectSource4 = inspectSource$34;
  var wellKnownSymbol$84 = wellKnownSymbol$f4;
  var IS_BROWSER4 = engineIsBrowser4;
  var IS_DENO4 = engineIsDeno4;
  var V8_VERSION4 = engineV8Version4;
  NativePromiseConstructor$34 && NativePromiseConstructor$34.prototype;
  var SPECIES$14 = wellKnownSymbol$84("species");
  var SUBCLASSING4 = false;
  var NATIVE_PROMISE_REJECTION_EVENT$14 = isCallable$74(global$54.PromiseRejectionEvent);
  var FORCED_PROMISE_CONSTRUCTOR$54 = isForced$14("Promise", function() {
    var PROMISE_CONSTRUCTOR_SOURCE = inspectSource4(NativePromiseConstructor$34);
    var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor$34);
    if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION4 === 66) return true;
    if (!V8_VERSION4 || V8_VERSION4 < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
      var promise5 = new NativePromiseConstructor$34(function(resolve5) {
        resolve5(1);
      });
      var FakePromise = function(exec5) {
        exec5(function() {
        }, function() {
        });
      };
      var constructor = promise5.constructor = {};
      constructor[SPECIES$14] = FakePromise;
      SUBCLASSING4 = promise5.then(function() {
      }) instanceof FakePromise;
      if (!SUBCLASSING4) return true;
    }
    return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER4 || IS_DENO4) && !NATIVE_PROMISE_REJECTION_EVENT$14;
  });
  var promiseConstructorDetection4 = {
    CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$54,
    REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$14,
    SUBCLASSING: SUBCLASSING4
  };
  var newPromiseCapability$24 = {};
  var aCallable$44 = aCallable$84;
  var $TypeError$24 = TypeError;
  var PromiseCapability4 = function(C2) {
    var resolve5, reject5;
    this.promise = new C2(function($$resolve, $$reject) {
      if (resolve5 !== void 0 || reject5 !== void 0) throw new $TypeError$24("Bad Promise constructor");
      resolve5 = $$resolve;
      reject5 = $$reject;
    });
    this.resolve = aCallable$44(resolve5);
    this.reject = aCallable$44(reject5);
  };
  newPromiseCapability$24.f = function(C2) {
    return new PromiseCapability4(C2);
  };
  var $$a4 = _export4;
  var IS_NODE4 = engineIsNode4;
  var global$44 = global$k3;
  var call$74 = functionCall4;
  var defineBuiltIn$54 = defineBuiltIn$84;
  var setPrototypeOf$24 = objectSetPrototypeOf4;
  var setToStringTag$44 = setToStringTag$54;
  var setSpecies4 = setSpecies$14;
  var aCallable$34 = aCallable$84;
  var isCallable$64 = isCallable$m4;
  var isObject$84 = isObject$e4;
  var anInstance$24 = anInstance$34;
  var speciesConstructor4 = speciesConstructor$14;
  var task4 = task$14.set;
  var microtask4 = microtask_14;
  var hostReportErrors4 = hostReportErrors$14;
  var perform$24 = perform$34;
  var Queue4 = queue$14;
  var InternalStateModule$34 = internalState4;
  var NativePromiseConstructor$24 = promiseNativeConstructor4;
  var PromiseConstructorDetection4 = promiseConstructorDetection4;
  var newPromiseCapabilityModule$34 = newPromiseCapability$24;
  var PROMISE4 = "Promise";
  var FORCED_PROMISE_CONSTRUCTOR$44 = PromiseConstructorDetection4.CONSTRUCTOR;
  var NATIVE_PROMISE_REJECTION_EVENT4 = PromiseConstructorDetection4.REJECTION_EVENT;
  var NATIVE_PROMISE_SUBCLASSING4 = PromiseConstructorDetection4.SUBCLASSING;
  var getInternalPromiseState4 = InternalStateModule$34.getterFor(PROMISE4);
  var setInternalState$34 = InternalStateModule$34.set;
  var NativePromisePrototype$14 = NativePromiseConstructor$24 && NativePromiseConstructor$24.prototype;
  var PromiseConstructor4 = NativePromiseConstructor$24;
  var PromisePrototype4 = NativePromisePrototype$14;
  var TypeError$14 = global$44.TypeError;
  var document$14 = global$44.document;
  var process4 = global$44.process;
  var newPromiseCapability$14 = newPromiseCapabilityModule$34.f;
  var newGenericPromiseCapability4 = newPromiseCapability$14;
  var DISPATCH_EVENT4 = !!(document$14 && document$14.createEvent && global$44.dispatchEvent);
  var UNHANDLED_REJECTION4 = "unhandledrejection";
  var REJECTION_HANDLED4 = "rejectionhandled";
  var PENDING4 = 0;
  var FULFILLED4 = 1;
  var REJECTED4 = 2;
  var HANDLED4 = 1;
  var UNHANDLED4 = 2;
  var Internal4;
  var OwnPromiseCapability4;
  var PromiseWrapper4;
  var nativeThen4;
  var isThenable4 = function(it) {
    var then5;
    return isObject$84(it) && isCallable$64(then5 = it.then) ? then5 : false;
  };
  var callReaction4 = function(reaction, state) {
    var value = state.value;
    var ok = state.state === FULFILLED4;
    var handler = ok ? reaction.ok : reaction.fail;
    var resolve5 = reaction.resolve;
    var reject5 = reaction.reject;
    var domain = reaction.domain;
    var result, then5, exited;
    try {
      if (handler) {
        if (!ok) {
          if (state.rejection === UNHANDLED4) onHandleUnhandled4(state);
          state.rejection = HANDLED4;
        }
        if (handler === true) result = value;
        else {
          if (domain) domain.enter();
          result = handler(value);
          if (domain) {
            domain.exit();
            exited = true;
          }
        }
        if (result === reaction.promise) {
          reject5(new TypeError$14("Promise-chain cycle"));
        } else if (then5 = isThenable4(result)) {
          call$74(then5, result, resolve5, reject5);
        } else resolve5(result);
      } else reject5(value);
    } catch (error) {
      if (domain && !exited) domain.exit();
      reject5(error);
    }
  };
  var notify4 = function(state, isReject) {
    if (state.notified) return;
    state.notified = true;
    microtask4(function() {
      var reactions = state.reactions;
      var reaction;
      while (reaction = reactions.get()) {
        callReaction4(reaction, state);
      }
      state.notified = false;
      if (isReject && !state.rejection) onUnhandled4(state);
    });
  };
  var dispatchEvent5 = function(name, promise5, reason) {
    var event, handler;
    if (DISPATCH_EVENT4) {
      event = document$14.createEvent("Event");
      event.promise = promise5;
      event.reason = reason;
      event.initEvent(name, false, true);
      global$44.dispatchEvent(event);
    } else event = { promise: promise5, reason };
    if (!NATIVE_PROMISE_REJECTION_EVENT4 && (handler = global$44["on" + name])) handler(event);
    else if (name === UNHANDLED_REJECTION4) hostReportErrors4("Unhandled promise rejection", reason);
  };
  var onUnhandled4 = function(state) {
    call$74(task4, global$44, function() {
      var promise5 = state.facade;
      var value = state.value;
      var IS_UNHANDLED = isUnhandled4(state);
      var result;
      if (IS_UNHANDLED) {
        result = perform$24(function() {
          if (IS_NODE4) {
            process4.emit("unhandledRejection", value, promise5);
          } else dispatchEvent5(UNHANDLED_REJECTION4, promise5, value);
        });
        state.rejection = IS_NODE4 || isUnhandled4(state) ? UNHANDLED4 : HANDLED4;
        if (result.error) throw result.value;
      }
    });
  };
  var isUnhandled4 = function(state) {
    return state.rejection !== HANDLED4 && !state.parent;
  };
  var onHandleUnhandled4 = function(state) {
    call$74(task4, global$44, function() {
      var promise5 = state.facade;
      if (IS_NODE4) {
        process4.emit("rejectionHandled", promise5);
      } else dispatchEvent5(REJECTION_HANDLED4, promise5, state.value);
    });
  };
  var bind$24 = function(fn2, state, unwrap) {
    return function(value) {
      fn2(state, value, unwrap);
    };
  };
  var internalReject4 = function(state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    state.value = value;
    state.state = REJECTED4;
    notify4(state, true);
  };
  var internalResolve4 = function(state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    try {
      if (state.facade === value) throw new TypeError$14("Promise can't be resolved itself");
      var then5 = isThenable4(value);
      if (then5) {
        microtask4(function() {
          var wrapper = { done: false };
          try {
            call$74(
              then5,
              value,
              bind$24(internalResolve4, wrapper, state),
              bind$24(internalReject4, wrapper, state)
            );
          } catch (error) {
            internalReject4(wrapper, error, state);
          }
        });
      } else {
        state.value = value;
        state.state = FULFILLED4;
        notify4(state, false);
      }
    } catch (error) {
      internalReject4({ done: false }, error, state);
    }
  };
  if (FORCED_PROMISE_CONSTRUCTOR$44) {
    PromiseConstructor4 = function Promise2(executor) {
      anInstance$24(this, PromisePrototype4);
      aCallable$34(executor);
      call$74(Internal4, this);
      var state = getInternalPromiseState4(this);
      try {
        executor(bind$24(internalResolve4, state), bind$24(internalReject4, state));
      } catch (error) {
        internalReject4(state, error);
      }
    };
    PromisePrototype4 = PromiseConstructor4.prototype;
    Internal4 = function Promise2(executor) {
      setInternalState$34(this, {
        type: PROMISE4,
        done: false,
        notified: false,
        parent: false,
        reactions: new Queue4(),
        rejection: false,
        state: PENDING4,
        value: void 0
      });
    };
    Internal4.prototype = defineBuiltIn$54(PromisePrototype4, "then", function then5(onFulfilled, onRejected) {
      var state = getInternalPromiseState4(this);
      var reaction = newPromiseCapability$14(speciesConstructor4(this, PromiseConstructor4));
      state.parent = true;
      reaction.ok = isCallable$64(onFulfilled) ? onFulfilled : true;
      reaction.fail = isCallable$64(onRejected) && onRejected;
      reaction.domain = IS_NODE4 ? process4.domain : void 0;
      if (state.state === PENDING4) state.reactions.add(reaction);
      else microtask4(function() {
        callReaction4(reaction, state);
      });
      return reaction.promise;
    });
    OwnPromiseCapability4 = function() {
      var promise5 = new Internal4();
      var state = getInternalPromiseState4(promise5);
      this.promise = promise5;
      this.resolve = bind$24(internalResolve4, state);
      this.reject = bind$24(internalReject4, state);
    };
    newPromiseCapabilityModule$34.f = newPromiseCapability$14 = function(C2) {
      return C2 === PromiseConstructor4 || C2 === PromiseWrapper4 ? new OwnPromiseCapability4(C2) : newGenericPromiseCapability4(C2);
    };
    if (isCallable$64(NativePromiseConstructor$24) && NativePromisePrototype$14 !== Object.prototype) {
      nativeThen4 = NativePromisePrototype$14.then;
      if (!NATIVE_PROMISE_SUBCLASSING4) {
        defineBuiltIn$54(NativePromisePrototype$14, "then", function then5(onFulfilled, onRejected) {
          var that = this;
          return new PromiseConstructor4(function(resolve5, reject5) {
            call$74(nativeThen4, that, resolve5, reject5);
          }).then(onFulfilled, onRejected);
        }, { unsafe: true });
      }
      try {
        delete NativePromisePrototype$14.constructor;
      } catch (error) {
      }
      if (setPrototypeOf$24) {
        setPrototypeOf$24(NativePromisePrototype$14, PromisePrototype4);
      }
    }
  }
  $$a4({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR$44 }, {
    Promise: PromiseConstructor4
  });
  setToStringTag$44(PromiseConstructor4, PROMISE4, false);
  setSpecies4(PROMISE4);
  var iterators4 = {};
  var wellKnownSymbol$74 = wellKnownSymbol$f4;
  var Iterators$44 = iterators4;
  var ITERATOR$54 = wellKnownSymbol$74("iterator");
  var ArrayPrototype$14 = Array.prototype;
  var isArrayIteratorMethod$14 = function(it) {
    return it !== void 0 && (Iterators$44.Array === it || ArrayPrototype$14[ITERATOR$54] === it);
  };
  var classof$44 = classof$84;
  var getMethod$14 = getMethod$34;
  var isNullOrUndefined$24 = isNullOrUndefined$64;
  var Iterators$34 = iterators4;
  var wellKnownSymbol$64 = wellKnownSymbol$f4;
  var ITERATOR$44 = wellKnownSymbol$64("iterator");
  var getIteratorMethod$24 = function(it) {
    if (!isNullOrUndefined$24(it)) return getMethod$14(it, ITERATOR$44) || getMethod$14(it, "@@iterator") || Iterators$34[classof$44(it)];
  };
  var call$64 = functionCall4;
  var aCallable$24 = aCallable$84;
  var anObject$64 = anObject$b4;
  var tryToString$14 = tryToString$44;
  var getIteratorMethod$14 = getIteratorMethod$24;
  var $TypeError$14 = TypeError;
  var getIterator$14 = function(argument, usingIterator) {
    var iteratorMethod = arguments.length < 2 ? getIteratorMethod$14(argument) : usingIterator;
    if (aCallable$24(iteratorMethod)) return anObject$64(call$64(iteratorMethod, argument));
    throw new $TypeError$14(tryToString$14(argument) + " is not iterable");
  };
  var call$54 = functionCall4;
  var anObject$54 = anObject$b4;
  var getMethod4 = getMethod$34;
  var iteratorClose$14 = function(iterator, kind, value) {
    var innerResult, innerError;
    anObject$54(iterator);
    try {
      innerResult = getMethod4(iterator, "return");
      if (!innerResult) {
        if (kind === "throw") throw value;
        return value;
      }
      innerResult = call$54(innerResult, iterator);
    } catch (error) {
      innerError = true;
      innerResult = error;
    }
    if (kind === "throw") throw value;
    if (innerError) throw innerResult;
    anObject$54(innerResult);
    return value;
  };
  var bind$14 = functionBindContext4;
  var call$44 = functionCall4;
  var anObject$44 = anObject$b4;
  var tryToString4 = tryToString$44;
  var isArrayIteratorMethod4 = isArrayIteratorMethod$14;
  var lengthOfArrayLike$24 = lengthOfArrayLike$44;
  var isPrototypeOf4 = objectIsPrototypeOf4;
  var getIterator4 = getIterator$14;
  var getIteratorMethod4 = getIteratorMethod$24;
  var iteratorClose4 = iteratorClose$14;
  var $TypeError4 = TypeError;
  var Result4 = function(stopped, result) {
    this.stopped = stopped;
    this.result = result;
  };
  var ResultPrototype4 = Result4.prototype;
  var iterate$44 = function(iterable, unboundFunction, options) {
    var that = options && options.that;
    var AS_ENTRIES = !!(options && options.AS_ENTRIES);
    var IS_RECORD = !!(options && options.IS_RECORD);
    var IS_ITERATOR = !!(options && options.IS_ITERATOR);
    var INTERRUPTED = !!(options && options.INTERRUPTED);
    var fn2 = bind$14(unboundFunction, that);
    var iterator, iterFn, index, length3, result, next5, step;
    var stop = function(condition) {
      if (iterator) iteratorClose4(iterator, "normal", condition);
      return new Result4(true, condition);
    };
    var callFn = function(value) {
      if (AS_ENTRIES) {
        anObject$44(value);
        return INTERRUPTED ? fn2(value[0], value[1], stop) : fn2(value[0], value[1]);
      }
      return INTERRUPTED ? fn2(value, stop) : fn2(value);
    };
    if (IS_RECORD) {
      iterator = iterable.iterator;
    } else if (IS_ITERATOR) {
      iterator = iterable;
    } else {
      iterFn = getIteratorMethod4(iterable);
      if (!iterFn) throw new $TypeError4(tryToString4(iterable) + " is not iterable");
      if (isArrayIteratorMethod4(iterFn)) {
        for (index = 0, length3 = lengthOfArrayLike$24(iterable); length3 > index; index++) {
          result = callFn(iterable[index]);
          if (result && isPrototypeOf4(ResultPrototype4, result)) return result;
        }
        return new Result4(false);
      }
      iterator = getIterator4(iterable, iterFn);
    }
    next5 = IS_RECORD ? iterable.next : iterator.next;
    while (!(step = call$44(next5, iterator)).done) {
      try {
        result = callFn(step.value);
      } catch (error) {
        iteratorClose4(iterator, "throw", error);
      }
      if (typeof result == "object" && result && isPrototypeOf4(ResultPrototype4, result)) return result;
    }
    return new Result4(false);
  };
  var wellKnownSymbol$54 = wellKnownSymbol$f4;
  var ITERATOR$34 = wellKnownSymbol$54("iterator");
  var SAFE_CLOSING4 = false;
  try {
    called = 0;
    iteratorWithReturn = {
      next: function() {
        return { done: !!called++ };
      },
      "return": function() {
        SAFE_CLOSING4 = true;
      }
    };
    iteratorWithReturn[ITERATOR$34] = function() {
      return this;
    };
    Array.from(iteratorWithReturn, function() {
      throw 2;
    });
  } catch (error) {
  }
  var called;
  var iteratorWithReturn;
  var checkCorrectnessOfIteration$24 = function(exec5, SKIP_CLOSING) {
    try {
      if (!SKIP_CLOSING && !SAFE_CLOSING4) return false;
    } catch (error) {
      return false;
    }
    var ITERATION_SUPPORT = false;
    try {
      var object = {};
      object[ITERATOR$34] = function() {
        return {
          next: function() {
            return { done: ITERATION_SUPPORT = true };
          }
        };
      };
      exec5(object);
    } catch (error) {
    }
    return ITERATION_SUPPORT;
  };
  var NativePromiseConstructor$14 = promiseNativeConstructor4;
  var checkCorrectnessOfIteration$14 = checkCorrectnessOfIteration$24;
  var FORCED_PROMISE_CONSTRUCTOR$34 = promiseConstructorDetection4.CONSTRUCTOR;
  var promiseStaticsIncorrectIteration4 = FORCED_PROMISE_CONSTRUCTOR$34 || !checkCorrectnessOfIteration$14(function(iterable) {
    NativePromiseConstructor$14.all(iterable).then(void 0, function() {
    });
  });
  var $$94 = _export4;
  var call$34 = functionCall4;
  var aCallable$14 = aCallable$84;
  var newPromiseCapabilityModule$24 = newPromiseCapability$24;
  var perform$14 = perform$34;
  var iterate$34 = iterate$44;
  var PROMISE_STATICS_INCORRECT_ITERATION$14 = promiseStaticsIncorrectIteration4;
  $$94({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$14 }, {
    all: function all4(iterable) {
      var C2 = this;
      var capability = newPromiseCapabilityModule$24.f(C2);
      var resolve5 = capability.resolve;
      var reject5 = capability.reject;
      var result = perform$14(function() {
        var $promiseResolve = aCallable$14(C2.resolve);
        var values5 = [];
        var counter5 = 0;
        var remaining = 1;
        iterate$34(iterable, function(promise5) {
          var index = counter5++;
          var alreadyCalled = false;
          remaining++;
          call$34($promiseResolve, C2, promise5).then(function(value) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values5[index] = value;
            --remaining || resolve5(values5);
          }, reject5);
        });
        --remaining || resolve5(values5);
      });
      if (result.error) reject5(result.value);
      return capability.promise;
    }
  });
  var $$84 = _export4;
  var FORCED_PROMISE_CONSTRUCTOR$24 = promiseConstructorDetection4.CONSTRUCTOR;
  var NativePromiseConstructor4 = promiseNativeConstructor4;
  var getBuiltIn$14 = getBuiltIn$74;
  var isCallable$54 = isCallable$m4;
  var defineBuiltIn$44 = defineBuiltIn$84;
  var NativePromisePrototype4 = NativePromiseConstructor4 && NativePromiseConstructor4.prototype;
  $$84({ target: "Promise", proto: true, forced: FORCED_PROMISE_CONSTRUCTOR$24, real: true }, {
    "catch": function(onRejected) {
      return this.then(void 0, onRejected);
    }
  });
  if (isCallable$54(NativePromiseConstructor4)) {
    method = getBuiltIn$14("Promise").prototype["catch"];
    if (NativePromisePrototype4["catch"] !== method) {
      defineBuiltIn$44(NativePromisePrototype4, "catch", method, { unsafe: true });
    }
  }
  var method;
  var $$74 = _export4;
  var call$24 = functionCall4;
  var aCallable4 = aCallable$84;
  var newPromiseCapabilityModule$14 = newPromiseCapability$24;
  var perform4 = perform$34;
  var iterate$24 = iterate$44;
  var PROMISE_STATICS_INCORRECT_ITERATION4 = promiseStaticsIncorrectIteration4;
  $$74({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION4 }, {
    race: function race4(iterable) {
      var C2 = this;
      var capability = newPromiseCapabilityModule$14.f(C2);
      var reject5 = capability.reject;
      var result = perform4(function() {
        var $promiseResolve = aCallable4(C2.resolve);
        iterate$24(iterable, function(promise5) {
          call$24($promiseResolve, C2, promise5).then(capability.resolve, reject5);
        });
      });
      if (result.error) reject5(result.value);
      return capability.promise;
    }
  });
  var $$64 = _export4;
  var call$14 = functionCall4;
  var newPromiseCapabilityModule4 = newPromiseCapability$24;
  var FORCED_PROMISE_CONSTRUCTOR$14 = promiseConstructorDetection4.CONSTRUCTOR;
  $$64({ target: "Promise", stat: true, forced: FORCED_PROMISE_CONSTRUCTOR$14 }, {
    reject: function reject4(r) {
      var capability = newPromiseCapabilityModule4.f(this);
      call$14(capability.reject, void 0, r);
      return capability.promise;
    }
  });
  var anObject$34 = anObject$b4;
  var isObject$74 = isObject$e4;
  var newPromiseCapability4 = newPromiseCapability$24;
  var promiseResolve$14 = function(C2, x) {
    anObject$34(C2);
    if (isObject$74(x) && x.constructor === C2) return x;
    var promiseCapability = newPromiseCapability4.f(C2);
    var resolve5 = promiseCapability.resolve;
    resolve5(x);
    return promiseCapability.promise;
  };
  var $$54 = _export4;
  var getBuiltIn4 = getBuiltIn$74;
  var FORCED_PROMISE_CONSTRUCTOR4 = promiseConstructorDetection4.CONSTRUCTOR;
  var promiseResolve4 = promiseResolve$14;
  getBuiltIn4("Promise");
  $$54({ target: "Promise", stat: true, forced: FORCED_PROMISE_CONSTRUCTOR4 }, {
    resolve: function resolve4(x) {
      return promiseResolve4(this, x);
    }
  });
  var fails$74 = fails$j4;
  var arrayMethodIsStrict$23 = function(METHOD_NAME, argument) {
    var method = [][METHOD_NAME];
    return !!method && fails$74(function() {
      method.call(null, argument || function() {
        return 1;
      }, 1);
    });
  };
  var $$44 = _export4;
  var uncurryThis$54 = functionUncurryThis4;
  var IndexedObject$14 = indexedObject4;
  var toIndexedObject$34 = toIndexedObject$73;
  var arrayMethodIsStrict$13 = arrayMethodIsStrict$23;
  var nativeJoin3 = uncurryThis$54([].join);
  var ES3_STRINGS3 = IndexedObject$14 !== Object;
  var FORCED4 = ES3_STRINGS3 || !arrayMethodIsStrict$13("join", ",");
  $$44({ target: "Array", proto: true, forced: FORCED4 }, {
    join: function join7(separator) {
      return nativeJoin3(toIndexedObject$34(this), separator === void 0 ? "," : separator);
    }
  });
  var objectDefineProperties4 = {};
  var DESCRIPTORS$14 = descriptors4;
  var V8_PROTOTYPE_DEFINE_BUG4 = v8PrototypeDefineBug4;
  var definePropertyModule$14 = objectDefineProperty4;
  var anObject$24 = anObject$b4;
  var toIndexedObject$24 = toIndexedObject$73;
  var objectKeys4 = objectKeys$24;
  objectDefineProperties4.f = DESCRIPTORS$14 && !V8_PROTOTYPE_DEFINE_BUG4 ? Object.defineProperties : function defineProperties4(O, Properties) {
    anObject$24(O);
    var props = toIndexedObject$24(Properties);
    var keys12 = objectKeys4(Properties);
    var length3 = keys12.length;
    var index = 0;
    var key;
    while (length3 > index) definePropertyModule$14.f(O, key = keys12[index++], props[key]);
    return O;
  };
  var anObject$14 = anObject$b4;
  var definePropertiesModule4 = objectDefineProperties4;
  var enumBugKeys4 = enumBugKeys$34;
  var hiddenKeys$14 = hiddenKeys$54;
  var html4 = html$24;
  var documentCreateElement$14 = documentCreateElement$24;
  var sharedKey$14 = sharedKey$34;
  var GT4 = ">";
  var LT4 = "<";
  var PROTOTYPE4 = "prototype";
  var SCRIPT4 = "script";
  var IE_PROTO$14 = sharedKey$14("IE_PROTO");
  var EmptyConstructor4 = function() {
  };
  var scriptTag4 = function(content) {
    return LT4 + SCRIPT4 + GT4 + content + LT4 + "/" + SCRIPT4 + GT4;
  };
  var NullProtoObjectViaActiveX4 = function(activeXDocument5) {
    activeXDocument5.write(scriptTag4(""));
    activeXDocument5.close();
    var temp = activeXDocument5.parentWindow.Object;
    activeXDocument5 = null;
    return temp;
  };
  var NullProtoObjectViaIFrame4 = function() {
    var iframe = documentCreateElement$14("iframe");
    var JS = "java" + SCRIPT4 + ":";
    var iframeDocument;
    iframe.style.display = "none";
    html4.appendChild(iframe);
    iframe.src = String(JS);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(scriptTag4("document.F=Object"));
    iframeDocument.close();
    return iframeDocument.F;
  };
  var activeXDocument4;
  var NullProtoObject4 = function() {
    try {
      activeXDocument4 = new ActiveXObject("htmlfile");
    } catch (error) {
    }
    NullProtoObject4 = typeof document != "undefined" ? document.domain && activeXDocument4 ? NullProtoObjectViaActiveX4(activeXDocument4) : NullProtoObjectViaIFrame4() : NullProtoObjectViaActiveX4(activeXDocument4);
    var length3 = enumBugKeys4.length;
    while (length3--) delete NullProtoObject4[PROTOTYPE4][enumBugKeys4[length3]];
    return NullProtoObject4();
  };
  hiddenKeys$14[IE_PROTO$14] = true;
  var objectCreate4 = Object.create || function create8(O, Properties) {
    var result;
    if (O !== null) {
      EmptyConstructor4[PROTOTYPE4] = anObject$14(O);
      result = new EmptyConstructor4();
      EmptyConstructor4[PROTOTYPE4] = null;
      result[IE_PROTO$14] = O;
    } else result = NullProtoObject4();
    return Properties === void 0 ? result : definePropertiesModule4.f(result, Properties);
  };
  var wellKnownSymbol$44 = wellKnownSymbol$f4;
  var create$14 = objectCreate4;
  var defineProperty$24 = objectDefineProperty4.f;
  var UNSCOPABLES4 = wellKnownSymbol$44("unscopables");
  var ArrayPrototype4 = Array.prototype;
  if (ArrayPrototype4[UNSCOPABLES4] === void 0) {
    defineProperty$24(ArrayPrototype4, UNSCOPABLES4, {
      configurable: true,
      value: create$14(null)
    });
  }
  var addToUnscopables$14 = function(key) {
    ArrayPrototype4[UNSCOPABLES4][key] = true;
  };
  var fails$64 = fails$j4;
  var correctPrototypeGetter4 = !fails$64(function() {
    function F() {
    }
    F.prototype.constructor = null;
    return Object.getPrototypeOf(new F()) !== F.prototype;
  });
  var hasOwn$24 = hasOwnProperty_14;
  var isCallable$44 = isCallable$m4;
  var toObject$24 = toObject$54;
  var sharedKey4 = sharedKey$34;
  var CORRECT_PROTOTYPE_GETTER4 = correctPrototypeGetter4;
  var IE_PROTO4 = sharedKey4("IE_PROTO");
  var $Object4 = Object;
  var ObjectPrototype4 = $Object4.prototype;
  var objectGetPrototypeOf4 = CORRECT_PROTOTYPE_GETTER4 ? $Object4.getPrototypeOf : function(O) {
    var object = toObject$24(O);
    if (hasOwn$24(object, IE_PROTO4)) return object[IE_PROTO4];
    var constructor = object.constructor;
    if (isCallable$44(constructor) && object instanceof constructor) {
      return constructor.prototype;
    }
    return object instanceof $Object4 ? ObjectPrototype4 : null;
  };
  var fails$54 = fails$j4;
  var isCallable$34 = isCallable$m4;
  var isObject$64 = isObject$e4;
  var getPrototypeOf$14 = objectGetPrototypeOf4;
  var defineBuiltIn$34 = defineBuiltIn$84;
  var wellKnownSymbol$34 = wellKnownSymbol$f4;
  var ITERATOR$24 = wellKnownSymbol$34("iterator");
  var BUGGY_SAFARI_ITERATORS$14 = false;
  var IteratorPrototype$24;
  var PrototypeOfArrayIteratorPrototype4;
  var arrayIterator4;
  if ([].keys) {
    arrayIterator4 = [].keys();
    if (!("next" in arrayIterator4)) BUGGY_SAFARI_ITERATORS$14 = true;
    else {
      PrototypeOfArrayIteratorPrototype4 = getPrototypeOf$14(getPrototypeOf$14(arrayIterator4));
      if (PrototypeOfArrayIteratorPrototype4 !== Object.prototype) IteratorPrototype$24 = PrototypeOfArrayIteratorPrototype4;
    }
  }
  var NEW_ITERATOR_PROTOTYPE4 = !isObject$64(IteratorPrototype$24) || fails$54(function() {
    var test5 = {};
    return IteratorPrototype$24[ITERATOR$24].call(test5) !== test5;
  });
  if (NEW_ITERATOR_PROTOTYPE4) IteratorPrototype$24 = {};
  if (!isCallable$34(IteratorPrototype$24[ITERATOR$24])) {
    defineBuiltIn$34(IteratorPrototype$24, ITERATOR$24, function() {
      return this;
    });
  }
  var iteratorsCore4 = {
    IteratorPrototype: IteratorPrototype$24,
    BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$14
  };
  var IteratorPrototype$14 = iteratorsCore4.IteratorPrototype;
  var create9 = objectCreate4;
  var createPropertyDescriptor$14 = createPropertyDescriptor$44;
  var setToStringTag$34 = setToStringTag$54;
  var Iterators$24 = iterators4;
  var returnThis$14 = function() {
    return this;
  };
  var iteratorCreateConstructor4 = function(IteratorConstructor, NAME5, next5, ENUMERABLE_NEXT) {
    var TO_STRING_TAG5 = NAME5 + " Iterator";
    IteratorConstructor.prototype = create9(IteratorPrototype$14, { next: createPropertyDescriptor$14(+!ENUMERABLE_NEXT, next5) });
    setToStringTag$34(IteratorConstructor, TO_STRING_TAG5, false);
    Iterators$24[TO_STRING_TAG5] = returnThis$14;
    return IteratorConstructor;
  };
  var $$34 = _export4;
  var call4 = functionCall4;
  var FunctionName4 = functionName4;
  var isCallable$24 = isCallable$m4;
  var createIteratorConstructor4 = iteratorCreateConstructor4;
  var getPrototypeOf4 = objectGetPrototypeOf4;
  var setPrototypeOf$14 = objectSetPrototypeOf4;
  var setToStringTag$24 = setToStringTag$54;
  var createNonEnumerableProperty$24 = createNonEnumerableProperty$53;
  var defineBuiltIn$24 = defineBuiltIn$84;
  var wellKnownSymbol$24 = wellKnownSymbol$f4;
  var Iterators$14 = iterators4;
  var IteratorsCore4 = iteratorsCore4;
  var PROPER_FUNCTION_NAME4 = FunctionName4.PROPER;
  var CONFIGURABLE_FUNCTION_NAME4 = FunctionName4.CONFIGURABLE;
  var IteratorPrototype4 = IteratorsCore4.IteratorPrototype;
  var BUGGY_SAFARI_ITERATORS4 = IteratorsCore4.BUGGY_SAFARI_ITERATORS;
  var ITERATOR$14 = wellKnownSymbol$24("iterator");
  var KEYS4 = "keys";
  var VALUES4 = "values";
  var ENTRIES4 = "entries";
  var returnThis4 = function() {
    return this;
  };
  var iteratorDefine4 = function(Iterable, NAME5, IteratorConstructor, next5, DEFAULT, IS_SET, FORCED5) {
    createIteratorConstructor4(IteratorConstructor, NAME5, next5);
    var getIterationMethod = function(KIND) {
      if (KIND === DEFAULT && defaultIterator) return defaultIterator;
      if (!BUGGY_SAFARI_ITERATORS4 && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];
      switch (KIND) {
        case KEYS4:
          return function keys12() {
            return new IteratorConstructor(this, KIND);
          };
        case VALUES4:
          return function values5() {
            return new IteratorConstructor(this, KIND);
          };
        case ENTRIES4:
          return function entries3() {
            return new IteratorConstructor(this, KIND);
          };
      }
      return function() {
        return new IteratorConstructor(this);
      };
    };
    var TO_STRING_TAG5 = NAME5 + " Iterator";
    var INCORRECT_VALUES_NAME = false;
    var IterablePrototype = Iterable.prototype;
    var nativeIterator = IterablePrototype[ITERATOR$14] || IterablePrototype["@@iterator"] || DEFAULT && IterablePrototype[DEFAULT];
    var defaultIterator = !BUGGY_SAFARI_ITERATORS4 && nativeIterator || getIterationMethod(DEFAULT);
    var anyNativeIterator = NAME5 === "Array" ? IterablePrototype.entries || nativeIterator : nativeIterator;
    var CurrentIteratorPrototype, methods, KEY;
    if (anyNativeIterator) {
      CurrentIteratorPrototype = getPrototypeOf4(anyNativeIterator.call(new Iterable()));
      if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
        if (getPrototypeOf4(CurrentIteratorPrototype) !== IteratorPrototype4) {
          if (setPrototypeOf$14) {
            setPrototypeOf$14(CurrentIteratorPrototype, IteratorPrototype4);
          } else if (!isCallable$24(CurrentIteratorPrototype[ITERATOR$14])) {
            defineBuiltIn$24(CurrentIteratorPrototype, ITERATOR$14, returnThis4);
          }
        }
        setToStringTag$24(CurrentIteratorPrototype, TO_STRING_TAG5, true);
      }
    }
    if (PROPER_FUNCTION_NAME4 && DEFAULT === VALUES4 && nativeIterator && nativeIterator.name !== VALUES4) {
      if (CONFIGURABLE_FUNCTION_NAME4) {
        createNonEnumerableProperty$24(IterablePrototype, "name", VALUES4);
      } else {
        INCORRECT_VALUES_NAME = true;
        defaultIterator = function values5() {
          return call4(nativeIterator, this);
        };
      }
    }
    if (DEFAULT) {
      methods = {
        values: getIterationMethod(VALUES4),
        keys: IS_SET ? defaultIterator : getIterationMethod(KEYS4),
        entries: getIterationMethod(ENTRIES4)
      };
      if (FORCED5) for (KEY in methods) {
        if (BUGGY_SAFARI_ITERATORS4 || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
          defineBuiltIn$24(IterablePrototype, KEY, methods[KEY]);
        }
      }
      else $$34({ target: NAME5, proto: true, forced: BUGGY_SAFARI_ITERATORS4 || INCORRECT_VALUES_NAME }, methods);
    }
    if (IterablePrototype[ITERATOR$14] !== defaultIterator) {
      defineBuiltIn$24(IterablePrototype, ITERATOR$14, defaultIterator, { name: DEFAULT });
    }
    Iterators$14[NAME5] = defaultIterator;
    return methods;
  };
  var createIterResultObject$24 = function(value, done) {
    return { value, done };
  };
  var toIndexedObject$14 = toIndexedObject$73;
  var addToUnscopables4 = addToUnscopables$14;
  var Iterators4 = iterators4;
  var InternalStateModule$24 = internalState4;
  var defineProperty$14 = objectDefineProperty4.f;
  var defineIterator$14 = iteratorDefine4;
  var createIterResultObject$14 = createIterResultObject$24;
  var DESCRIPTORS4 = descriptors4;
  var ARRAY_ITERATOR4 = "Array Iterator";
  var setInternalState$24 = InternalStateModule$24.set;
  var getInternalState$14 = InternalStateModule$24.getterFor(ARRAY_ITERATOR4);
  var es_array_iterator4 = defineIterator$14(Array, "Array", function(iterated, kind) {
    setInternalState$24(this, {
      type: ARRAY_ITERATOR4,
      target: toIndexedObject$14(iterated),
      // target
      index: 0,
      // next index
      kind
      // kind
    });
  }, function() {
    var state = getInternalState$14(this);
    var target = state.target;
    var index = state.index++;
    if (!target || index >= target.length) {
      state.target = void 0;
      return createIterResultObject$14(void 0, true);
    }
    switch (state.kind) {
      case "keys":
        return createIterResultObject$14(index, false);
      case "values":
        return createIterResultObject$14(target[index], false);
    }
    return createIterResultObject$14([index, target[index]], false);
  }, "values");
  var values4 = Iterators4.Arguments = Iterators4.Array;
  addToUnscopables4("keys");
  addToUnscopables4("values");
  addToUnscopables4("entries");
  if (DESCRIPTORS4 && values4.name !== "values") try {
    defineProperty$14(values4, "name", { value: "values" });
  } catch (error) {
  }
  var classof$34 = classof$84;
  var $String4 = String;
  var toString$24 = function(argument) {
    if (classof$34(argument) === "Symbol") throw new TypeError("Cannot convert a Symbol value to a string");
    return $String4(argument);
  };
  var uncurryThis$44 = functionUncurryThis4;
  var toIntegerOrInfinity4 = toIntegerOrInfinity$34;
  var toString$14 = toString$24;
  var requireObjectCoercible4 = requireObjectCoercible$34;
  var charAt$14 = uncurryThis$44("".charAt);
  var charCodeAt4 = uncurryThis$44("".charCodeAt);
  var stringSlice4 = uncurryThis$44("".slice);
  var createMethod$14 = function(CONVERT_TO_STRING) {
    return function($this, pos) {
      var S = toString$14(requireObjectCoercible4($this));
      var position3 = toIntegerOrInfinity4(pos);
      var size = S.length;
      var first, second2;
      if (position3 < 0 || position3 >= size) return CONVERT_TO_STRING ? "" : void 0;
      first = charCodeAt4(S, position3);
      return first < 55296 || first > 56319 || position3 + 1 === size || (second2 = charCodeAt4(S, position3 + 1)) < 56320 || second2 > 57343 ? CONVERT_TO_STRING ? charAt$14(S, position3) : first : CONVERT_TO_STRING ? stringSlice4(S, position3, position3 + 2) : (first - 55296 << 10) + (second2 - 56320) + 65536;
    };
  };
  var stringMultibyte4 = {
    // `String.prototype.codePointAt` method
    // https://tc39.es/ecma262/#sec-string.prototype.codepointat
    codeAt: createMethod$14(false),
    // `String.prototype.at` method
    // https://github.com/mathiasbynens/String.prototype.at
    charAt: createMethod$14(true)
  };
  var charAt4 = stringMultibyte4.charAt;
  var toString12 = toString$24;
  var InternalStateModule$14 = internalState4;
  var defineIterator4 = iteratorDefine4;
  var createIterResultObject4 = createIterResultObject$24;
  var STRING_ITERATOR4 = "String Iterator";
  var setInternalState$14 = InternalStateModule$14.set;
  var getInternalState4 = InternalStateModule$14.getterFor(STRING_ITERATOR4);
  defineIterator4(String, "String", function(iterated) {
    setInternalState$14(this, {
      type: STRING_ITERATOR4,
      string: toString12(iterated),
      index: 0
    });
  }, function next4() {
    var state = getInternalState4(this);
    var string = state.string;
    var index = state.index;
    var point2;
    if (index >= string.length) return createIterResultObject4(void 0, true);
    point2 = charAt4(string, index);
    state.index += point2.length;
    return createIterResultObject4(point2, false);
  });
  var internalMetadata4 = { exports: {} };
  var objectGetOwnPropertyNamesExternal4 = {};
  var toPropertyKey4 = toPropertyKey$34;
  var definePropertyModule4 = objectDefineProperty4;
  var createPropertyDescriptor4 = createPropertyDescriptor$44;
  var createProperty$14 = function(object, key, value) {
    var propertyKey = toPropertyKey4(key);
    if (propertyKey in object) definePropertyModule4.f(object, propertyKey, createPropertyDescriptor4(0, value));
    else object[propertyKey] = value;
  };
  var toAbsoluteIndex4 = toAbsoluteIndex$24;
  var lengthOfArrayLike$14 = lengthOfArrayLike$44;
  var createProperty4 = createProperty$14;
  var $Array$14 = Array;
  var max7 = Math.max;
  var arraySliceSimple4 = function(O, start3, end2) {
    var length3 = lengthOfArrayLike$14(O);
    var k2 = toAbsoluteIndex4(start3, length3);
    var fin = toAbsoluteIndex4(end2 === void 0 ? length3 : end2, length3);
    var result = $Array$14(max7(fin - k2, 0));
    var n = 0;
    for (; k2 < fin; k2++, n++) createProperty4(result, n, O[k2]);
    result.length = n;
    return result;
  };
  var classof$24 = classofRaw$24;
  var toIndexedObject4 = toIndexedObject$73;
  var $getOwnPropertyNames4 = objectGetOwnPropertyNames4.f;
  var arraySlice4 = arraySliceSimple4;
  var windowNames4 = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
  var getWindowNames4 = function(it) {
    try {
      return $getOwnPropertyNames4(it);
    } catch (error) {
      return arraySlice4(windowNames4);
    }
  };
  objectGetOwnPropertyNamesExternal4.f = function getOwnPropertyNames8(it) {
    return windowNames4 && classof$24(it) === "Window" ? getWindowNames4(it) : $getOwnPropertyNames4(toIndexedObject4(it));
  };
  var fails$44 = fails$j4;
  var arrayBufferNonExtensible4 = fails$44(function() {
    if (typeof ArrayBuffer == "function") {
      var buffer = new ArrayBuffer(8);
      if (Object.isExtensible(buffer)) Object.defineProperty(buffer, "a", { value: 8 });
    }
  });
  var fails$34 = fails$j4;
  var isObject$54 = isObject$e4;
  var classof$14 = classofRaw$24;
  var ARRAY_BUFFER_NON_EXTENSIBLE4 = arrayBufferNonExtensible4;
  var $isExtensible4 = Object.isExtensible;
  var FAILS_ON_PRIMITIVES$13 = fails$34(function() {
    $isExtensible4(1);
  });
  var objectIsExtensible4 = FAILS_ON_PRIMITIVES$13 || ARRAY_BUFFER_NON_EXTENSIBLE4 ? function isExtensible7(it) {
    if (!isObject$54(it)) return false;
    if (ARRAY_BUFFER_NON_EXTENSIBLE4 && classof$14(it) === "ArrayBuffer") return false;
    return $isExtensible4 ? $isExtensible4(it) : true;
  } : $isExtensible4;
  var fails$24 = fails$j4;
  var freezing4 = !fails$24(function() {
    return Object.isExtensible(Object.preventExtensions({}));
  });
  var $$24 = _export4;
  var uncurryThis$34 = functionUncurryThis4;
  var hiddenKeys4 = hiddenKeys$54;
  var isObject$44 = isObject$e4;
  var hasOwn$14 = hasOwnProperty_14;
  var defineProperty12 = objectDefineProperty4.f;
  var getOwnPropertyNamesModule4 = objectGetOwnPropertyNames4;
  var getOwnPropertyNamesExternalModule4 = objectGetOwnPropertyNamesExternal4;
  var isExtensible8 = objectIsExtensible4;
  var uid4 = uid$34;
  var FREEZING4 = freezing4;
  var REQUIRED4 = false;
  var METADATA4 = uid4("meta");
  var id$14 = 0;
  var setMetadata4 = function(it) {
    defineProperty12(it, METADATA4, { value: {
      objectID: "O" + id$14++,
      // object ID
      weakData: {}
      // weak collections IDs
    } });
  };
  var fastKey4 = function(it, create10) {
    if (!isObject$44(it)) return typeof it == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;
    if (!hasOwn$14(it, METADATA4)) {
      if (!isExtensible8(it)) return "F";
      if (!create10) return "E";
      setMetadata4(it);
    }
    return it[METADATA4].objectID;
  };
  var getWeakData$14 = function(it, create10) {
    if (!hasOwn$14(it, METADATA4)) {
      if (!isExtensible8(it)) return true;
      if (!create10) return false;
      setMetadata4(it);
    }
    return it[METADATA4].weakData;
  };
  var onFreeze4 = function(it) {
    if (FREEZING4 && REQUIRED4 && isExtensible8(it) && !hasOwn$14(it, METADATA4)) setMetadata4(it);
    return it;
  };
  var enable4 = function() {
    meta4.enable = function() {
    };
    REQUIRED4 = true;
    var getOwnPropertyNames9 = getOwnPropertyNamesModule4.f;
    var splice5 = uncurryThis$34([].splice);
    var test5 = {};
    test5[METADATA4] = 1;
    if (getOwnPropertyNames9(test5).length) {
      getOwnPropertyNamesModule4.f = function(it) {
        var result = getOwnPropertyNames9(it);
        for (var i = 0, length3 = result.length; i < length3; i++) {
          if (result[i] === METADATA4) {
            splice5(result, i, 1);
            break;
          }
        }
        return result;
      };
      $$24({ target: "Object", stat: true, forced: true }, {
        getOwnPropertyNames: getOwnPropertyNamesExternalModule4.f
      });
    }
  };
  var meta4 = internalMetadata4.exports = {
    enable: enable4,
    fastKey: fastKey4,
    getWeakData: getWeakData$14,
    onFreeze: onFreeze4
  };
  hiddenKeys4[METADATA4] = true;
  var internalMetadataExports4 = internalMetadata4.exports;
  var isCallable$14 = isCallable$m4;
  var isObject$34 = isObject$e4;
  var setPrototypeOf4 = objectSetPrototypeOf4;
  var inheritIfRequired$14 = function($this, dummy, Wrapper) {
    var NewTarget, NewTargetPrototype;
    if (
      // it can work only with native `setPrototypeOf`
      setPrototypeOf4 && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
      isCallable$14(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject$34(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype
    ) setPrototypeOf4($this, NewTargetPrototype);
    return $this;
  };
  var $$14 = _export4;
  var global$34 = global$k3;
  var uncurryThis$24 = functionUncurryThis4;
  var isForced4 = isForced_14;
  var defineBuiltIn$14 = defineBuiltIn$84;
  var InternalMetadataModule4 = internalMetadataExports4;
  var iterate$14 = iterate$44;
  var anInstance$14 = anInstance$34;
  var isCallable4 = isCallable$m4;
  var isNullOrUndefined$14 = isNullOrUndefined$64;
  var isObject$24 = isObject$e4;
  var fails$14 = fails$j4;
  var checkCorrectnessOfIteration4 = checkCorrectnessOfIteration$24;
  var setToStringTag$14 = setToStringTag$54;
  var inheritIfRequired4 = inheritIfRequired$14;
  var collection$14 = function(CONSTRUCTOR_NAME, wrapper, common) {
    var IS_MAP = CONSTRUCTOR_NAME.indexOf("Map") !== -1;
    var IS_WEAK = CONSTRUCTOR_NAME.indexOf("Weak") !== -1;
    var ADDER = IS_MAP ? "set" : "add";
    var NativeConstructor = global$34[CONSTRUCTOR_NAME];
    var NativePrototype = NativeConstructor && NativeConstructor.prototype;
    var Constructor = NativeConstructor;
    var exported = {};
    var fixMethod = function(KEY) {
      var uncurriedNativeMethod = uncurryThis$24(NativePrototype[KEY]);
      defineBuiltIn$14(
        NativePrototype,
        KEY,
        KEY === "add" ? function add(value) {
          uncurriedNativeMethod(this, value === 0 ? 0 : value);
          return this;
        } : KEY === "delete" ? function(key) {
          return IS_WEAK && !isObject$24(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : KEY === "get" ? function get7(key) {
          return IS_WEAK && !isObject$24(key) ? void 0 : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : KEY === "has" ? function has5(key) {
          return IS_WEAK && !isObject$24(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : function set7(key, value) {
          uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
          return this;
        }
      );
    };
    var REPLACE2 = isForced4(
      CONSTRUCTOR_NAME,
      !isCallable4(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails$14(function() {
        new NativeConstructor().entries().next();
      }))
    );
    if (REPLACE2) {
      Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
      InternalMetadataModule4.enable();
    } else if (isForced4(CONSTRUCTOR_NAME, true)) {
      var instance = new Constructor();
      var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) !== instance;
      var THROWS_ON_PRIMITIVES = fails$14(function() {
        instance.has(1);
      });
      var ACCEPT_ITERABLES = checkCorrectnessOfIteration4(function(iterable) {
        new NativeConstructor(iterable);
      });
      var BUGGY_ZERO = !IS_WEAK && fails$14(function() {
        var $instance = new NativeConstructor();
        var index = 5;
        while (index--) $instance[ADDER](index, index);
        return !$instance.has(-0);
      });
      if (!ACCEPT_ITERABLES) {
        Constructor = wrapper(function(dummy, iterable) {
          anInstance$14(dummy, NativePrototype);
          var that = inheritIfRequired4(new NativeConstructor(), dummy, Constructor);
          if (!isNullOrUndefined$14(iterable)) iterate$14(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
          return that;
        });
        Constructor.prototype = NativePrototype;
        NativePrototype.constructor = Constructor;
      }
      if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
        fixMethod("delete");
        fixMethod("has");
        IS_MAP && fixMethod("get");
      }
      if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
      if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
    }
    exported[CONSTRUCTOR_NAME] = Constructor;
    $$14({ global: true, constructor: true, forced: Constructor !== NativeConstructor }, exported);
    setToStringTag$14(Constructor, CONSTRUCTOR_NAME);
    if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
    return Constructor;
  };
  var defineBuiltIn4 = defineBuiltIn$84;
  var defineBuiltIns$14 = function(target, src, options) {
    for (var key in src) defineBuiltIn4(target, key, src[key], options);
    return target;
  };
  var classof4 = classofRaw$24;
  var isArray$14 = Array.isArray || function isArray7(argument) {
    return classof4(argument) === "Array";
  };
  var isArray8 = isArray$14;
  var isConstructor12 = isConstructor$24;
  var isObject$14 = isObject$e4;
  var wellKnownSymbol$14 = wellKnownSymbol$f4;
  var SPECIES4 = wellKnownSymbol$14("species");
  var $Array4 = Array;
  var arraySpeciesConstructor$14 = function(originalArray) {
    var C2;
    if (isArray8(originalArray)) {
      C2 = originalArray.constructor;
      if (isConstructor12(C2) && (C2 === $Array4 || isArray8(C2.prototype))) C2 = void 0;
      else if (isObject$14(C2)) {
        C2 = C2[SPECIES4];
        if (C2 === null) C2 = void 0;
      }
    }
    return C2 === void 0 ? $Array4 : C2;
  };
  var arraySpeciesConstructor4 = arraySpeciesConstructor$14;
  var arraySpeciesCreate$14 = function(originalArray, length3) {
    return new (arraySpeciesConstructor4(originalArray))(length3 === 0 ? 0 : length3);
  };
  var bind4 = functionBindContext4;
  var uncurryThis$14 = functionUncurryThis4;
  var IndexedObject4 = indexedObject4;
  var toObject$14 = toObject$54;
  var lengthOfArrayLike4 = lengthOfArrayLike$44;
  var arraySpeciesCreate4 = arraySpeciesCreate$14;
  var push4 = uncurryThis$14([].push);
  var createMethod4 = function(TYPE) {
    var IS_MAP = TYPE === 1;
    var IS_FILTER = TYPE === 2;
    var IS_SOME = TYPE === 3;
    var IS_EVERY = TYPE === 4;
    var IS_FIND_INDEX = TYPE === 6;
    var IS_FILTER_REJECT = TYPE === 7;
    var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
    return function($this, callbackfn, that, specificCreate) {
      var O = toObject$14($this);
      var self2 = IndexedObject4(O);
      var length3 = lengthOfArrayLike4(self2);
      var boundFunction = bind4(callbackfn, that);
      var index = 0;
      var create10 = specificCreate || arraySpeciesCreate4;
      var target = IS_MAP ? create10($this, length3) : IS_FILTER || IS_FILTER_REJECT ? create10($this, 0) : void 0;
      var value, result;
      for (; length3 > index; index++) if (NO_HOLES || index in self2) {
        value = self2[index];
        result = boundFunction(value, index, O);
        if (TYPE) {
          if (IS_MAP) target[index] = result;
          else if (result) switch (TYPE) {
            case 3:
              return true;
            // some
            case 5:
              return value;
            // find
            case 6:
              return index;
            // findIndex
            case 2:
              push4(target, value);
          }
          else switch (TYPE) {
            case 4:
              return false;
            // every
            case 7:
              push4(target, value);
          }
        }
      }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
    };
  };
  var arrayIteration4 = {
    // `Array.prototype.forEach` method
    // https://tc39.es/ecma262/#sec-array.prototype.foreach
    forEach: createMethod4(0),
    // `Array.prototype.map` method
    // https://tc39.es/ecma262/#sec-array.prototype.map
    map: createMethod4(1),
    // `Array.prototype.filter` method
    // https://tc39.es/ecma262/#sec-array.prototype.filter
    filter: createMethod4(2),
    // `Array.prototype.some` method
    // https://tc39.es/ecma262/#sec-array.prototype.some
    some: createMethod4(3),
    // `Array.prototype.every` method
    // https://tc39.es/ecma262/#sec-array.prototype.every
    every: createMethod4(4),
    // `Array.prototype.find` method
    // https://tc39.es/ecma262/#sec-array.prototype.find
    find: createMethod4(5),
    // `Array.prototype.findIndex` method
    // https://tc39.es/ecma262/#sec-array.prototype.findIndex
    findIndex: createMethod4(6),
    // `Array.prototype.filterReject` method
    // https://github.com/tc39/proposal-array-filtering
    filterReject: createMethod4(7)
  };
  var uncurryThis4 = functionUncurryThis4;
  var defineBuiltIns4 = defineBuiltIns$14;
  var getWeakData4 = internalMetadataExports4.getWeakData;
  var anInstance4 = anInstance$34;
  var anObject4 = anObject$b4;
  var isNullOrUndefined4 = isNullOrUndefined$64;
  var isObject4 = isObject$e4;
  var iterate4 = iterate$44;
  var ArrayIterationModule4 = arrayIteration4;
  var hasOwn8 = hasOwnProperty_14;
  var InternalStateModule4 = internalState4;
  var setInternalState4 = InternalStateModule4.set;
  var internalStateGetterFor4 = InternalStateModule4.getterFor;
  var find5 = ArrayIterationModule4.find;
  var findIndex4 = ArrayIterationModule4.findIndex;
  var splice4 = uncurryThis4([].splice);
  var id5 = 0;
  var uncaughtFrozenStore4 = function(state) {
    return state.frozen || (state.frozen = new UncaughtFrozenStore4());
  };
  var UncaughtFrozenStore4 = function() {
    this.entries = [];
  };
  var findUncaughtFrozen4 = function(store, key) {
    return find5(store.entries, function(it) {
      return it[0] === key;
    });
  };
  UncaughtFrozenStore4.prototype = {
    get: function(key) {
      var entry = findUncaughtFrozen4(this, key);
      if (entry) return entry[1];
    },
    has: function(key) {
      return !!findUncaughtFrozen4(this, key);
    },
    set: function(key, value) {
      var entry = findUncaughtFrozen4(this, key);
      if (entry) entry[1] = value;
      else this.entries.push([key, value]);
    },
    "delete": function(key) {
      var index = findIndex4(this.entries, function(it) {
        return it[0] === key;
      });
      if (~index) splice4(this.entries, index, 1);
      return !!~index;
    }
  };
  var collectionWeak$14 = {
    getConstructor: function(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
      var Constructor = wrapper(function(that, iterable) {
        anInstance4(that, Prototype);
        setInternalState4(that, {
          type: CONSTRUCTOR_NAME,
          id: id5++,
          frozen: void 0
        });
        if (!isNullOrUndefined4(iterable)) iterate4(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
      });
      var Prototype = Constructor.prototype;
      var getInternalState5 = internalStateGetterFor4(CONSTRUCTOR_NAME);
      var define = function(that, key, value) {
        var state = getInternalState5(that);
        var data6 = getWeakData4(anObject4(key), true);
        if (data6 === true) uncaughtFrozenStore4(state).set(key, value);
        else data6[state.id] = value;
        return that;
      };
      defineBuiltIns4(Prototype, {
        // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
        // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
        // https://tc39.es/ecma262/#sec-weakset.prototype.delete
        "delete": function(key) {
          var state = getInternalState5(this);
          if (!isObject4(key)) return false;
          var data6 = getWeakData4(key);
          if (data6 === true) return uncaughtFrozenStore4(state)["delete"](key);
          return data6 && hasOwn8(data6, state.id) && delete data6[state.id];
        },
        // `{ WeakMap, WeakSet }.prototype.has(key)` methods
        // https://tc39.es/ecma262/#sec-weakmap.prototype.has
        // https://tc39.es/ecma262/#sec-weakset.prototype.has
        has: function has5(key) {
          var state = getInternalState5(this);
          if (!isObject4(key)) return false;
          var data6 = getWeakData4(key);
          if (data6 === true) return uncaughtFrozenStore4(state).has(key);
          return data6 && hasOwn8(data6, state.id);
        }
      });
      defineBuiltIns4(Prototype, IS_MAP ? {
        // `WeakMap.prototype.get(key)` method
        // https://tc39.es/ecma262/#sec-weakmap.prototype.get
        get: function get7(key) {
          var state = getInternalState5(this);
          if (isObject4(key)) {
            var data6 = getWeakData4(key);
            if (data6 === true) return uncaughtFrozenStore4(state).get(key);
            return data6 ? data6[state.id] : void 0;
          }
        },
        // `WeakMap.prototype.set(key, value)` method
        // https://tc39.es/ecma262/#sec-weakmap.prototype.set
        set: function set7(key, value) {
          return define(this, key, value);
        }
      } : {
        // `WeakSet.prototype.add(value)` method
        // https://tc39.es/ecma262/#sec-weakset.prototype.add
        add: function add(value) {
          return define(this, value, true);
        }
      });
      return Constructor;
    }
  };
  var collection4 = collection$14;
  var collectionWeak4 = collectionWeak$14;
  collection4("WeakSet", function(init2) {
    return function WeakSet2() {
      return init2(this, arguments.length ? arguments[0] : void 0);
    };
  }, collectionWeak4);
  var domIterables4 = {
    CSSRuleList: 0,
    CSSStyleDeclaration: 0,
    CSSValueList: 0,
    ClientRectList: 0,
    DOMRectList: 0,
    DOMStringList: 0,
    DOMTokenList: 1,
    DataTransferItemList: 0,
    FileList: 0,
    HTMLAllCollection: 0,
    HTMLCollection: 0,
    HTMLFormElement: 0,
    HTMLSelectElement: 0,
    MediaList: 0,
    MimeTypeArray: 0,
    NamedNodeMap: 0,
    NodeList: 1,
    PaintRequestList: 0,
    Plugin: 0,
    PluginArray: 0,
    SVGLengthList: 0,
    SVGNumberList: 0,
    SVGPathSegList: 0,
    SVGPointList: 0,
    SVGStringList: 0,
    SVGTransformList: 0,
    SourceBufferList: 0,
    StyleSheetList: 0,
    TextTrackCueList: 0,
    TextTrackList: 0,
    TouchList: 0
  };
  var documentCreateElement4 = documentCreateElement$24;
  var classList5 = documentCreateElement4("span").classList;
  var DOMTokenListPrototype$23 = classList5 && classList5.constructor && classList5.constructor.prototype;
  var domTokenListPrototype4 = DOMTokenListPrototype$23 === Object.prototype ? void 0 : DOMTokenListPrototype$23;
  var global$24 = global$k3;
  var DOMIterables$13 = domIterables4;
  var DOMTokenListPrototype$14 = domTokenListPrototype4;
  var ArrayIteratorMethods4 = es_array_iterator4;
  var createNonEnumerableProperty$14 = createNonEnumerableProperty$53;
  var setToStringTag4 = setToStringTag$54;
  var wellKnownSymbol4 = wellKnownSymbol$f4;
  var ITERATOR4 = wellKnownSymbol4("iterator");
  var ArrayValues4 = ArrayIteratorMethods4.values;
  var handlePrototype$13 = function(CollectionPrototype, COLLECTION_NAME) {
    if (CollectionPrototype) {
      if (CollectionPrototype[ITERATOR4] !== ArrayValues4) try {
        createNonEnumerableProperty$14(CollectionPrototype, ITERATOR4, ArrayValues4);
      } catch (error) {
        CollectionPrototype[ITERATOR4] = ArrayValues4;
      }
      setToStringTag4(CollectionPrototype, COLLECTION_NAME, true);
      if (DOMIterables$13[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods4) {
        if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods4[METHOD_NAME]) try {
          createNonEnumerableProperty$14(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods4[METHOD_NAME]);
        } catch (error) {
          CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods4[METHOD_NAME];
        }
      }
    }
  };
  for (COLLECTION_NAME$1 in DOMIterables$13) {
    handlePrototype$13(global$24[COLLECTION_NAME$1] && global$24[COLLECTION_NAME$1].prototype, COLLECTION_NAME$1);
  }
  var COLLECTION_NAME$1;
  handlePrototype$13(DOMTokenListPrototype$14, "DOMTokenList");
  var $forEach3 = arrayIteration4.forEach;
  var arrayMethodIsStrict3 = arrayMethodIsStrict$23;
  var STRICT_METHOD3 = arrayMethodIsStrict3("forEach");
  var arrayForEach3 = !STRICT_METHOD3 ? function forEach5(callbackfn) {
    return $forEach3(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
  } : [].forEach;
  var global$14 = global$k3;
  var DOMIterables4 = domIterables4;
  var DOMTokenListPrototype4 = domTokenListPrototype4;
  var forEach6 = arrayForEach3;
  var createNonEnumerableProperty4 = createNonEnumerableProperty$53;
  var handlePrototype4 = function(CollectionPrototype) {
    if (CollectionPrototype && CollectionPrototype.forEach !== forEach6) try {
      createNonEnumerableProperty4(CollectionPrototype, "forEach", forEach6);
    } catch (error) {
      CollectionPrototype.forEach = forEach6;
    }
  };
  for (COLLECTION_NAME in DOMIterables4) {
    if (DOMIterables4[COLLECTION_NAME]) {
      handlePrototype4(global$14[COLLECTION_NAME] && global$14[COLLECTION_NAME].prototype);
    }
  }
  var COLLECTION_NAME;
  handlePrototype4(DOMTokenListPrototype4);
  var $4 = _export4;
  var toObject4 = toObject$54;
  var nativeKeys3 = objectKeys$24;
  var fails4 = fails$j4;
  var FAILS_ON_PRIMITIVES4 = fails4(function() {
    nativeKeys3(1);
  });
  $4({ target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES4 }, {
    keys: function keys11(it) {
      return nativeKeys3(toObject4(it));
    }
  });
  function __classPrivateFieldGet4(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
  }
  var ScrollDirection3;
  (function(ScrollDirection4) {
    ScrollDirection4[ScrollDirection4["SCROLL_NONE"] = 0] = "SCROLL_NONE";
    ScrollDirection4[ScrollDirection4["SCROLL_BACKWARD"] = 1] = "SCROLL_BACKWARD";
    ScrollDirection4[ScrollDirection4["SCROLL_FORWARD"] = 2] = "SCROLL_FORWARD";
  })(ScrollDirection3 || (ScrollDirection3 = {}));
  var Position3;
  (function(Position4) {
    Position4[Position4["TOP"] = 0] = "TOP";
    Position4[Position4["RIGHT"] = 1] = "RIGHT";
    Position4[Position4["BOTTOM"] = 2] = "BOTTOM";
    Position4[Position4["LEFT"] = 3] = "LEFT";
  })(Position3 || (Position3 = {}));
  function isHorizontal(position3) {
    return position3 === "left" || position3 === "right";
  }
  function isVertical2(position3) {
    return position3 === "top" || position3 === "bottom";
  }
  function horizontalPadding2(padding) {
    return padding[Position3.LEFT] + padding[Position3.RIGHT];
  }
  function verticalPadding2(padding) {
    return padding[Position3.TOP] + padding[Position3.BOTTOM];
  }
  var _CalendarLabel_instances;
  var _CalendarLabel_buildComputedOptions;
  var _CalendarLabel_computeDimensions;
  var _CalendarLabel_setRectAttr;
  var _CalendarLabel_setTextAttr;
  var _CalendarLabel_getTextXOffset;
  var _CalendarLabel_getX;
  var _CalendarLabel_getY;
  var DEFAULT_SELECTOR4 = ".ch-plugin-calendar-label";
  var defaultOptions3 = {
    enabled: true,
    dimensions: {
      width: 0,
      height: 0
    },
    position: "left",
    text: function text2() {
      return [];
    },
    padding: [0, 0, 0, 0]
  };
  var CalendarLabel = /* @__PURE__ */ (function() {
    function CalendarLabel2(calendar2) {
      _classCallCheck4(this, CalendarLabel2);
      var _a, _b;
      _CalendarLabel_instances.add(this);
      this.name = "CalendarLabel";
      var subDomain = (_b = (_a = calendar2 === null || calendar2 === void 0 ? void 0 : calendar2.options) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.subDomain;
      this.calendar = calendar2;
      this.root = null;
      this.shown = false;
      this.options = defaultOptions3;
      this.computedOptions = {
        radius: subDomain === null || subDomain === void 0 ? void 0 : subDomain.radius,
        width: subDomain === null || subDomain === void 0 ? void 0 : subDomain.width,
        height: subDomain === null || subDomain === void 0 ? void 0 : subDomain.height,
        gutter: subDomain === null || subDomain === void 0 ? void 0 : subDomain.gutter,
        textAlign: "start"
      };
    }
    _createClass4(CalendarLabel2, [{
      key: "setup",
      value: function setup(pluginOptions) {
        this.options = Object.assign(Object.assign({}, defaultOptions3), pluginOptions);
      }
    }, {
      key: "paint",
      value: function paint() {
        var enabled = this.options.enabled;
        if (!enabled) {
          return this.destroy();
        }
        this.shown = true;
        var calendarRoot = this.calendar.calendarPainter.root;
        if (!this.root) {
          this.root = calendarRoot.append("svg").attr("class", DEFAULT_SELECTOR4.slice(1)).attr("data-key", this.options.key).attr("x", 0).attr("y", 0);
        }
        this.build();
        return Promise.resolve();
      }
    }, {
      key: "destroy",
      value: function destroy() {
        if (this.root !== null) {
          this.root.remove();
          this.root = null;
        }
        return Promise.resolve();
      }
    }, {
      key: "build",
      value: function build() {
        var _this = this;
        __classPrivateFieldGet4(this, _CalendarLabel_instances, "m", _CalendarLabel_buildComputedOptions).call(this);
        __classPrivateFieldGet4(this, _CalendarLabel_instances, "m", _CalendarLabel_computeDimensions).call(this);
        this.root.selectAll("g").data(this.options.text).join(function(enter) {
          return enter.append("g").call(function(selection2) {
            return selection2.append("rect").attr("class", "".concat(DEFAULT_SELECTOR4.slice(1), "-bg")).attr("style", "fill: transparent").call(function(s2) {
              return __classPrivateFieldGet4(_this, _CalendarLabel_instances, "m", _CalendarLabel_setRectAttr).call(_this, s2);
            });
          }).call(function(selection2) {
            return selection2.append("text").attr("class", "".concat(DEFAULT_SELECTOR4.slice(1), "-text")).attr("dominant-baseline", "central").attr("text-anchor", "middle").attr("style", "fill: currentColor; font-size: 10px").call(function(s2) {
              return __classPrivateFieldGet4(_this, _CalendarLabel_instances, "m", _CalendarLabel_setTextAttr).call(_this, s2);
            });
          });
        });
        return Promise.resolve();
      }
    }]);
    return CalendarLabel2;
  })();
  _CalendarLabel_instances = /* @__PURE__ */ new WeakSet(), _CalendarLabel_buildComputedOptions = function _CalendarLabel_buildComputedOptions2() {
    var _this2 = this;
    Object.keys(this.computedOptions).forEach(function(key) {
      if (typeof _this2.options[key] !== "undefined") {
        _this2.computedOptions[key] = _this2.options[key];
      }
    });
  }, _CalendarLabel_computeDimensions = function _CalendarLabel_computeDimensions2() {
    var _this$computedOptions = this.computedOptions, width = _this$computedOptions.width, height = _this$computedOptions.height, gutter = _this$computedOptions.gutter;
    var _this$options = this.options, text3 = _this$options.text, padding = _this$options.padding, position3 = _this$options.position;
    var labelsCount = text3().length;
    this.options.dimensions = {
      width: width + horizontalPadding2(padding),
      height: height + verticalPadding2(padding)
    };
    if (isVertical2(position3)) {
      this.options.dimensions.width += (width + gutter) * (labelsCount - 1);
    } else {
      this.options.dimensions.height += (height + gutter) * (labelsCount - 1);
    }
  }, _CalendarLabel_setRectAttr = function _CalendarLabel_setRectAttr2(selection2) {
    var _this3 = this;
    var _this$computedOptions2 = this.computedOptions, width = _this$computedOptions2.width, height = _this$computedOptions2.height, radius3 = _this$computedOptions2.radius;
    selection2.attr("width", width).attr("height", height).attr("rx", radius3 && radius3 > 0 ? radius3 : null).attr("ry", radius3 && radius3 > 0 ? radius3 : null).attr("x", function(_d, i) {
      return __classPrivateFieldGet4(_this3, _CalendarLabel_instances, "m", _CalendarLabel_getX).call(_this3, i);
    }).attr("y", function(_d, i) {
      return __classPrivateFieldGet4(_this3, _CalendarLabel_instances, "m", _CalendarLabel_getY).call(_this3, i);
    });
  }, _CalendarLabel_setTextAttr = function _CalendarLabel_setTextAttr2(selection2) {
    var _this4 = this;
    var _this$computedOptions3 = this.computedOptions, height = _this$computedOptions3.height, textAlign = _this$computedOptions3.textAlign;
    selection2.attr("text-anchor", textAlign).attr("x", function(_d, i) {
      return __classPrivateFieldGet4(_this4, _CalendarLabel_instances, "m", _CalendarLabel_getTextXOffset).call(_this4) + __classPrivateFieldGet4(_this4, _CalendarLabel_instances, "m", _CalendarLabel_getX).call(_this4, i);
    }).attr("y", function(_d, i) {
      return __classPrivateFieldGet4(_this4, _CalendarLabel_instances, "m", _CalendarLabel_getY).call(_this4, i) + height / 2;
    }).text(function(data6) {
      return data6;
    });
  }, _CalendarLabel_getTextXOffset = function _CalendarLabel_getTextXOffset2() {
    var _this$computedOptions4 = this.computedOptions, width = _this$computedOptions4.width, textAlign = _this$computedOptions4.textAlign;
    switch (textAlign) {
      case "start":
        return 0;
      case "middle":
        return width / 2;
      case "end":
        return width;
      default:
        return 0;
    }
  }, _CalendarLabel_getX = function _CalendarLabel_getX2(index) {
    var _this$options2 = this.options, position3 = _this$options2.position, padding = _this$options2.padding;
    var _this$computedOptions5 = this.computedOptions, width = _this$computedOptions5.width, gutter = _this$computedOptions5.gutter;
    if (isHorizontal(position3)) {
      return padding[Position3.LEFT];
    }
    return padding[Position3.LEFT] + (width + gutter) * index;
  }, _CalendarLabel_getY = function _CalendarLabel_getY2(index) {
    var _this$options3 = this.options, position3 = _this$options3.position, padding = _this$options3.padding;
    var _this$computedOptions6 = this.computedOptions, height = _this$computedOptions6.height, gutter = _this$computedOptions6.gutter;
    if (isVertical2(position3)) {
      return padding[Position3.TOP];
    }
    return padding[Position3.TOP] + (height + gutter) * index;
  };

  // <stdin>
  async function fetchDates() {
    try {
      const response = await fetch(`${window.BASE_URL}dates.json`);
      if (!response) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      data = await response.json();
      return data.dates;
    } catch (error) {
      console.error("error fetching dates: ", error);
    }
  }
  async function fetchData() {
    try {
      const response = await fetch(`${window.BASE_URL}feed.json`);
      if (!response) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      data = await response.json();
      return data;
    } catch (error) {
      console.error("error fetching data: ", error);
    }
  }
  async function parseData(data6, selectedYear) {
    dates = data6.filter((d) => d.substring(0, 4) === `${selectedYear}`);
    const counts = {};
    const result = [];
    dates.forEach((date2) => {
      counts[date2] = (counts[date2] || 0) + 1;
    });
    for (const date2 in counts) {
      if (counts.hasOwnProperty(date2)) {
        result.push({ date: date2, value: counts[date2] });
      }
    }
    return result;
  }
  var cal = new CalHeatmap();
  async function renderCalendar(selectedYear) {
    const startDate = /* @__PURE__ */ new Date(`${selectedYear}-01-01`);
    const endDate = /* @__PURE__ */ new Date(`${selectedYear}-12-31`);
    const data6 = await fetchDates();
    const dates2 = await parseData(data6, selectedYear);
    await cal.paint(
      {
        theme: "dark",
        data: {
          source: dates2,
          x: "date",
          y: "value"
        },
        itemSelector: "#cal-heatmap",
        type: "year",
        date: {
          start: startDate,
          min: startDate,
          max: endDate
        },
        range: 12,
        scale: {
          color: {
            type: "threshold",
            range: ["#b9f8cf", "#86efac", "#22c55e", "#14532d"],
            domain: [0, 5, 10]
          }
        },
        domain: {
          type: "month",
          gutter: 4,
          label: { text: "MMM", textAlign: "start", position: "top" }
        },
        subDomain: {
          type: "ghDay",
          radius: 2,
          width: 11,
          height: 11,
          gutter: 4
        }
      },
      [
        [
          LegendLite,
          {
            includeBlank: false,
            radius: 3,
            itemSelector: "#ex-ghDay-legend"
          }
        ],
        [
          Tooltip,
          {
            enabled: true,
            text: (date2, value, dayjsDate) => value ? `${value} ${value === 1 ? "Item" : "Items"} on ${dayjsDate.format("dddd, MMMM D, YYYY")}` : `No Items on ${dayjsDate.format("dddd, MMMM D, YYYY")}`
          }
        ],
        [
          CalendarLabel,
          {
            width: 30,
            textAlign: "start",
            text: () => dayjs.weekdaysShort().map((d, i) => i % 2 == 0 ? "" : d),
            padding: [25, 0, 0, 0]
          }
        ]
      ]
    );
  }
  async function main2(selectedYear) {
    const calContainer = document.getElementById("cal-heatmap");
    const currentHeight = calContainer.offsetHeight;
    if (currentHeight > 0) {
      calContainer.style.minHeight = currentHeight + "px";
    }
    const currentWidth = calContainer.offsetWidth;
    if (currentWidth > 0) {
      calContainer.style.minWidth = currentWidth + "px";
    }
    if (cal) {
      await cal.destroy();
    }
    cal = new CalHeatmap();
    await renderCalendar(selectedYear);
    requestAnimationFrame(() => {
      calContainer.style.minHeight = "";
      calContainer.style.minWidth = "";
    });
  }
  async function createYearButtons() {
    const data6 = await fetchDates();
    const dates2 = data6.map((d) => d.substring(0, 4)).map(Number).sort((a2, b) => a2 - b);
    const beginYear = dates2[0];
    const endYear = dates2[dates2.length - 1];
    const years = Array.from({ length: endYear - beginYear + 1 }, (_, i) => beginYear + i);
    const radioDivContainer = document.getElementById("yearButtons");
    radioDivContainer.innerHTML = "";
    years.forEach((year, idx) => {
      const wrapper = document.createElement("div");
      wrapper.className = "relative";
      const radioDivButton = document.createElement("input");
      radioDivButton.type = "radio";
      radioDivButton.name = "radio-group";
      radioDivButton.id = `option-${year}`;
      radioDivButton.className = "sr-only peer";
      radioDivButton.value = year;
      if (idx === years.length - 1) radioDivButton.checked = true;
      const radioDivButtonLabel = document.createElement("label");
      radioDivButtonLabel.htmlFor = `option-${year}`;
      radioDivButtonLabel.className = `
        block w-full text-center px-4 py-2 rounded-md border border-transparent cursor-pointer
        text-gray-400 bg-transparent
        hover:bg-gray-700 peer-checked:bg-blue-400
        peer-checked:text-white
        peer-checked:hover:bg-blue-400
        transition-colors
    `;
      radioDivButtonLabel.textContent = year;
      radioDivButton.addEventListener("change", async (e) => {
        const selectedYear = parseInt(e.target.value);
        await main2(selectedYear);
      });
      wrapper.appendChild(radioDivButton);
      wrapper.appendChild(radioDivButtonLabel);
      radioDivContainer.appendChild(wrapper);
    });
    const contentsCountContainer = document.getElementById("contributionYear");
    const contentsPerYear = data6.filter((d) => Number(d.substring(0, 4)) === endYear);
    contentsCountContainer.innerHTML = contentsPerYear.length + (contentsPerYear.length === 1 ? " item " : " items ") + "this year";
    await renderCalendar(endYear);
    await renderContents(endYear);
  }
  async function renderContents(year) {
    const data6 = await fetchData();
    const postsByMonth = {};
    for (const item of data6.items) {
      const date2 = new Date(item.date_published);
      if (date2.getFullYear() !== year) continue;
      const month = date2.getMonth();
      if (!postsByMonth[month]) postsByMonth[month] = [];
      postsByMonth[month].push(item);
    }
    const monthName = [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July",
      "August",
      "September",
      "October",
      "November",
      "December"
    ];
    const shortMonth = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    const container = document.getElementById("countOfItemsPerMonth");
    container.innerHTML = "";
    container.className = "p-5";
    const ol = document.createElement("ol");
    ol.className = "relative border-s border-gray-200 dark:border-gray-700";
    for (let monthNum = 0; monthNum < 12; monthNum++) {
      const monthItems = postsByMonth[monthNum];
      if (!monthItems || monthItems.length === 0) continue;
      const li = document.createElement("li");
      li.className = "relative ps-6 mb-10";
      const circle = document.createElement("div");
      circle.className = "absolute -start-[7px] mt-1.5 h-3 w-3 rounded-full border border-white bg-gray-200 dark:border-gray-900 dark:bg-gray-700";
      li.appendChild(circle);
      const timeEl = document.createElement("time");
      timeEl.className = "mb-2 text-sm font-normal leading-none text-gray-400 dark:text-gray-500 block";
      timeEl.textContent = `${monthName[monthNum]} ${year}`;
      li.appendChild(timeEl);
      const linksWrapper = document.createElement("div");
      linksWrapper.className = "flex flex-col gap-1";
      monthItems.forEach((post, i) => {
        const date2 = new Date(post.date_published);
        const formatted = `${shortMonth[date2.getMonth()]} ${date2.getDate()}`;
        const wrapper = document.createElement("div");
        wrapper.className = `${i > 0 ? "hidden" : ""}`;
        const a2 = document.createElement("a");
        a2.href = post.url;
        a2.rel = "noopener noreferrer";
        a2.className = "text-base font-normal text-blue-600 dark:text-blue-400 hover:underline";
        a2.textContent = post.title;
        const small = document.createElement("span");
        small.className = "ml-2 text-sm text-gray-400 dark:text-gray-500";
        small.textContent = `\xB7 ${formatted}`;
        wrapper.appendChild(a2);
        wrapper.appendChild(small);
        linksWrapper.appendChild(wrapper);
      });
      li.appendChild(linksWrapper);
      if (monthItems.length > 1) {
        const toggleBtn = document.createElement("button");
        toggleBtn.textContent = "See more";
        toggleBtn.className = "rounded-md border border-gray-300 dark:border-gray-700 px-2 py-1 mt-2 text-sm text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 transition";
        toggleBtn.addEventListener("click", () => {
          const links = linksWrapper.querySelectorAll("div");
          links.forEach((link, i) => {
            if (i > 0) link.classList.toggle("hidden");
          });
          toggleBtn.textContent = toggleBtn.textContent === "See more" ? "See less" : "See more";
        });
        li.appendChild(toggleBtn);
      }
      ol.appendChild(li);
    }
    container.appendChild(ol);
  }
  document.addEventListener("DOMContentLoaded", async () => {
    await createYearButtons();
  });
})();
